Search.setIndex({"docnames": ["algorithms/Klett-Fernald", "algorithms/algorithms", "algorithms/prepare_signals", "api/ELDAmwl", "api/ELDAmwl.angstroem_exponent", "api/ELDAmwl.backscatter", "api/ELDAmwl.backscatter.common", "api/ELDAmwl.backscatter.common.calibration", "api/ELDAmwl.backscatter.common.vertical_resolution", "api/ELDAmwl.backscatter.elastic", "api/ELDAmwl.backscatter.elastic.tools", "api/ELDAmwl.backscatter.raman", "api/ELDAmwl.backscatter.raman.tools", "api/ELDAmwl.bases", "api/ELDAmwl.component", "api/ELDAmwl.database", "api/ELDAmwl.database.tables", "api/ELDAmwl.depol", "api/ELDAmwl.depol.vertical_resolution", "api/ELDAmwl.elda_mwl", "api/ELDAmwl.errors", "api/ELDAmwl.extinction", "api/ELDAmwl.extinction.tools", "api/ELDAmwl.extinction.vertical_resolution", "api/ELDAmwl.lidar_ratio", "api/ELDAmwl.log", "api/ELDAmwl.monte_carlo", "api/ELDAmwl.output", "api/ELDAmwl.plugins", "api/ELDAmwl.storage", "api/ELDAmwl.tests", "api/ELDAmwl.tests.database", "api/ELDAmwl.tests.factories", "api/ELDAmwl.tests.test_integration", "api/ELDAmwl.utils", "api/modules", "contributing/contributing", "contributing/global_instances", "contributing/modularity/add_new_baseoperation", "contributing/modularity/baseoperation_basic", "contributing/modularity/baseoperation_complex", "contributing/modularity/baseoperation_fundamental", "contributing/modularity/example_PrepareExtSignals", "contributing/modularity/example_SignalSlope", "contributing/modularity/examples", "contributing/modularity/list_of_subsystems", "contributing/modularity/modularity", "contributing/modularity/overwrite_baseoperation", "contributing/modularity/registry", "contributing/testing", "genindex", "index", "installing/configuring", "installing/installing", "installing/requirements", "installing/setup", "modindex", "usage/usage"], "filenames": ["algorithms\\Klett-Fernald.rst", "algorithms\\algorithms.rst", "algorithms\\prepare_signals.rst", "api\\ELDAmwl.rst", "api\\ELDAmwl.angstroem_exponent.rst", "api\\ELDAmwl.backscatter.rst", "api\\ELDAmwl.backscatter.common.rst", "api\\ELDAmwl.backscatter.common.calibration.rst", "api\\ELDAmwl.backscatter.common.vertical_resolution.rst", "api\\ELDAmwl.backscatter.elastic.rst", "api\\ELDAmwl.backscatter.elastic.tools.rst", "api\\ELDAmwl.backscatter.raman.rst", "api\\ELDAmwl.backscatter.raman.tools.rst", "api\\ELDAmwl.bases.rst", "api\\ELDAmwl.component.rst", "api\\ELDAmwl.database.rst", "api\\ELDAmwl.database.tables.rst", "api\\ELDAmwl.depol.rst", "api\\ELDAmwl.depol.vertical_resolution.rst", "api\\ELDAmwl.elda_mwl.rst", "api\\ELDAmwl.errors.rst", "api\\ELDAmwl.extinction.rst", "api\\ELDAmwl.extinction.tools.rst", "api\\ELDAmwl.extinction.vertical_resolution.rst", "api\\ELDAmwl.lidar_ratio.rst", "api\\ELDAmwl.log.rst", "api\\ELDAmwl.monte_carlo.rst", "api\\ELDAmwl.output.rst", "api\\ELDAmwl.plugins.rst", "api\\ELDAmwl.storage.rst", "api\\ELDAmwl.tests.rst", "api\\ELDAmwl.tests.database.rst", "api\\ELDAmwl.tests.factories.rst", "api\\ELDAmwl.tests.test_integration.rst", "api\\ELDAmwl.utils.rst", "api\\modules.rst", "contributing\\contributing.rst", "contributing\\global_instances.rst", "contributing\\modularity\\add_new_baseoperation.rst", "contributing\\modularity\\baseoperation_basic.rst", "contributing\\modularity\\baseoperation_complex.rst", "contributing\\modularity\\baseoperation_fundamental.rst", "contributing\\modularity\\example_PrepareExtSignals.rst", "contributing\\modularity\\example_SignalSlope.rst", "contributing\\modularity\\examples.rst", "contributing\\modularity\\list_of_subsystems.rst", "contributing\\modularity\\modularity.rst", "contributing\\modularity\\overwrite_baseoperation.rst", "contributing\\modularity\\registry.rst", "contributing\\testing.rst", "genindex.rst", "index.rst", "installing\\configuring.rst", "installing\\installing.rst", "installing\\requirements.rst", "installing\\setup.rst", "modindex.rst", "usage\\usage.rst"], "titles": ["Klett-Fernald", "Algorithms and Flow Charts", "prepare signals", "ELDAmwl package", "ELDAmwl.angstroem_exponent package", "ELDAmwl.backscatter package", "ELDAmwl.backscatter.common package", "ELDAmwl.backscatter.common.calibration package", "ELDAmwl.backscatter.common.vertical_resolution package", "ELDAmwl.backscatter.elastic package", "ELDAmwl.backscatter.elastic.tools package", "ELDAmwl.backscatter.raman package", "ELDAmwl.backscatter.raman.tools package", "ELDAmwl.bases package", "ELDAmwl.component package", "ELDAmwl.database package", "ELDAmwl.database.tables package", "ELDAmwl.depol package", "ELDAmwl.depol.vertical_resolution package", "ELDAmwl.elda_mwl package", "ELDAmwl.errors package", "ELDAmwl.extinction package", "ELDAmwl.extinction.tools package", "ELDAmwl.extinction.vertical_resolution package", "ELDAmwl.lidar_ratio package", "ELDAmwl.log package", "ELDAmwl.monte_carlo package", "ELDAmwl.output package", "ELDAmwl.plugins package", "ELDAmwl.storage package", "ELDAmwl.tests package", "ELDAmwl.tests.database package", "ELDAmwl.tests.factories package", "ELDAmwl.tests.test_integration package", "ELDAmwl.utils package", "ELDAmwl", "Contributing", "Global data structures", "Provide an additional user-selectable algorithm subsystem", "Basic BaseOperation classes", "Complex BaseOperation classes", "Fundamental BaseOperation classes", "Example for an algorithm subsystem with no alternatives", "Example of an additional user-selectable algorithm subsystem", "Examples", "Overview on modularized algorithm subsystems", "Modularity", "Overwrite an existing algorithm subsystem", "The Registry class", "Testing", "Index", "Welcome to ELDAmwl\u2019s documentation!", "Configuration", "Installation and setup", "Requirements", "Installation", "Module Index", "Usage"], "terms": {"beta_": 0, "part": [0, 29, 36], "r": 0, "frac": 0, "A": [0, 3, 16, 46, 49], "b": [0, 3, 30], "2": [0, 3, 6, 8, 9, 11, 13, 27, 55], "": [0, 3, 13, 15, 16], "a_": 0, "int": [0, 3, 15, 19, 26, 29, 34], "mol": 0, "p": 0, "exp": 0, "s_": 0, "par": 0, "m": [0, 3, 7, 13, 15, 27], "int_": 0, "r_": 0, "ref": 0, "mathrm": 0, "d": [0, 3, 7, 34], "backscatt": [0, 3, 4, 15, 19, 20, 24, 27, 35], "coeffcient": 0, "particl": [0, 4, 9, 10, 11, 19, 21, 22, 24, 27], "molecul": 0, "respect": [0, 34], "lidar": [0, 3, 4, 10, 15, 16, 19, 20, 24, 27, 29, 51], "ratio": [0, 3, 4, 6, 7, 10, 11, 12, 15, 16, 17, 19, 20, 24, 27], "prepar": [0, 3, 4, 5, 6, 9, 11, 17, 19, 21, 24, 28, 29, 42, 47], "signal": [0, 6, 7, 9, 10, 11, 12, 17, 19, 21, 22, 23, 29, 30, 35, 38, 42, 43, 47], "rang": [0, 3, 10, 20, 26, 34, 35, 43], "refer": [0, 3, 27], "calibr": [0, 5, 6, 9, 10, 11, 12, 15, 20], "some": [1, 29, 49, 52], "implement": [1, 15, 19, 20, 26, 29, 42, 43, 46, 49, 51], "ar": [1, 3, 4, 7, 9, 11, 12, 13, 15, 16, 19, 20, 21, 22, 24, 26, 29, 34, 38, 39, 40, 41, 43, 46, 47, 48, 49, 51, 52, 54], "describ": [1, 27, 38], "matti": [1, 8, 23], "et": [1, 3, 8, 10, 23], "al": [1, 3, 8, 10, 23], "2015": 1, "klett": [1, 3, 10, 51], "fernald": [1, 3, 10, 51], "common": [3, 5, 19, 29], "oper": [3, 5, 13, 14, 19, 29, 30, 35, 38, 43], "param": [3, 5, 13, 15, 19, 20, 29, 30, 31, 35, 37], "elast": [3, 5, 7, 11, 12, 15, 19], "raman": [3, 4, 5, 7, 9, 15, 19, 21, 24], "base": [3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 42, 43, 46, 47, 48, 51], "datapoint": [3, 13], "from_data": [3, 13], "from_nc_fil": [3, 13, 35], "rel_error": [3, 13], "stat_error": [3, 13], "sys_error": [3, 13], "valu": [3, 4, 9, 11, 13, 15, 16, 20, 21, 24, 26, 27, 34, 52], "eldabas": [3, 13], "logger": [3, 13, 15, 25, 26, 35, 37, 38, 47], "db_func": [3, 13, 27], "column": [3, 16, 26, 35, 43], "altitud": [3, 7, 10, 13, 19, 22, 29, 35], "angle_to_time_dependent_var": [3, 13], "binr": [3, 10, 12, 13, 29], "data": [3, 4, 6, 9, 10, 11, 12, 13, 17, 19, 20, 21, 22, 24, 26, 27, 29, 30, 31, 34, 36, 49, 51, 54], "err": [3, 4, 9, 11, 13, 21, 22, 24], "first_valid_bin": [3, 13], "height": [3, 7, 9, 11, 13, 15, 16], "last_valid_bin": [3, 13], "num_level": [3, 13], "num_tim": [3, 13], "qf": [3, 4, 9, 10, 11, 12, 13, 21, 22, 24], "rel_err": [3, 13], "set_invalid_point": [3, 13], "factori": [3, 4, 9, 10, 11, 14, 21, 24, 30, 35, 38, 42, 43, 46, 47, 48], "baseoper": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 19, 20, 21, 22, 23, 24, 26, 27, 28, 30, 38, 43, 46, 47, 48], "cfg": [3, 13, 15, 25, 26, 35], "init": [3, 4, 5, 6, 7, 9, 11, 13, 17, 21, 24], "baseoperationfactori": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 21, 22, 23, 24, 26, 27, 30, 42, 43, 46, 48], "get_class": [3, 13], "get_classname_from_db": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 21, 22, 23, 24, 26, 27, 35, 43], "name": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 35, 38, 43, 47], "compon": [3, 29, 35, 36, 51], "interfac": [3, 35, 43], "plugin": [3, 13, 35, 38, 47], "register_plugin": [3, 14], "registri": [3, 20, 35, 37, 38, 43, 46, 47], "factoryregistri": [3, 14], "find_class_by_nam": [3, 14], "register_class": [3, 14, 38, 43, 47], "get_factory_registr": [3, 14], "statu": [3, 14, 15, 16], "databas": [3, 13, 19, 30, 35, 38, 43, 49, 52, 54], "tabl": [3, 15, 19, 20, 31, 38, 43], "channel": [3, 15, 29], "db_base": [3, 15], "eldamwl_class_nam": [3, 15], "eldamwl_product": [3, 15], "extinct": [3, 4, 15, 17, 19, 20, 24, 27, 28, 35, 38, 43, 47], "gener": [3, 15, 19, 27, 46, 49, 54], "lidar_const": [3, 15], "lidar_ratio": [3, 4, 15, 19, 35], "measur": [3, 15, 19, 29, 37, 57], "system_product": [3, 15], "db": [3, 8, 10, 12, 14, 16, 18, 19, 20, 22, 25, 27, 31, 35], "dbutil": [3, 15], "engin": [3, 15], "get_connect_str": [3, 15], "init_engin": [3, 15], "session": [3, 15], "test_db": [3, 15], "db_function": [3, 35, 43], "dbfunc": [3, 15], "db_log": [3, 15, 25], "get_basic_products_queri": [3, 15], "get_bsc_cal_params_queri": [3, 15], "get_derived_products_queri": [3, 15], "get_extended_general_params_queri": [3, 15], "get_mc_params_queri": [3, 15], "get_products_resolution_queri": [3, 15], "get_quality_params_queri": [3, 15], "get_smooth_params_queri": [3, 15], "read_algorithm": [3, 15], "read_algorithm_opt": [3, 15], "read_angstroem_exp_param": [3, 15], "read_classnam": [3, 15], "read_effbin_algorithm": [3, 15], "read_elast_bsc_algorithm": [3, 15], "read_elast_bsc_effbin_algorithm": [3, 15], "read_elast_bsc_method_id": [3, 15], "read_elast_bsc_param": [3, 15], "read_elast_bsc_smooth_method_id": [3, 15], "read_elast_bsc_usedbin_algorithm": [3, 15], "read_ext_effbin_algorithm": [3, 15], "read_ext_method_id": [3, 15], "read_ext_usedbin_algorithm": [3, 15], "read_extinction_algorithm": [3, 15, 43], "read_extinction_param": [3, 15], "read_full_overlap": [3, 15], "read_iter_bsc_param": [3, 15], "read_lidar_ratio_param": [3, 15], "read_mwl_product_id": [3, 15], "read_raman_bsc_algorithm": [3, 15], "read_raman_bsc_effbin_algorithm": [3, 15], "read_raman_bsc_method_id": [3, 15], "read_raman_bsc_param": [3, 15], "read_raman_bsc_smooth_method_id": [3, 15], "read_raman_bsc_usedbin_algorithm": [3, 15], "read_smooth_routin": [3, 15], "read_system_id": [3, 15], "read_usedbin_algorithm": [3, 15], "register_mwl_file_to_db": [3, 15], "write_lidar_constant_in_db": [3, 15], "register_db_func": [3, 15], "elda_mwl": [3, 35, 37, 55], "measurementparam": [3, 19, 27], "all_basic_products_of_wl": [3, 19], "all_bsc_product": [3, 19], "all_products_of_r": [3, 19], "angstroem_exp_product": [3, 19], "basic_product": [3, 19], "elast_bsc_product": [3, 19], "extinction_product": [3, 19], "filtered_list": [3, 19], "get_products_resolut": [3, 19], "lidar_ratio_product": [3, 19], "load_from_db": [3, 19], "prod_id": [3, 4, 5, 6, 8, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 43], "prod_param": [3, 19], "prod_typ": [3, 19, 29], "raman_bsc_product": [3, 19], "read_product_list": [3, 19], "vldr_product": [3, 19], "wavelength": [3, 4, 19, 20, 27, 29, 51], "runeldamwl": [3, 19, 40, 45], "get_basic_product": [3, 35], "get_derived_product": [3, 35], "get_lidar_const": [3, 35], "get_product_matrix": [3, 19], "quality_control": [3, 19], "read_elpp_data": [3, 19], "read_task": [3, 19], "write_mwl_output": [3, 19, 35], "write_single_output": [3, 19], "register_param": [3, 19], "getbasicproduct": [3, 19, 40, 45], "smooth_typ": [3, 15, 16, 19, 35], "getbasicproductsdefault": [3, 19, 45], "bsc_calibr_window": [3, 19], "data_storag": [3, 5, 6, 7, 19, 27, 35], "find_common_smooth": [3, 19], "get_auto_smooth_product": [3, 19], "get_binres_common_smooth": [3, 19], "get_common_smooth_product": [3, 19], "get_elast_bsc_fixed_smooth": [3, 19], "get_extinctions_auto_smooth": [3, 19], "get_extinctions_fixed_smooth": [3, 19], "get_raman_bsc_auto_smooth": [3, 19], "get_raman_bsc_fixed_smooth": [3, 19], "get_vldr_fixed_smooth": [3, 19], "product_param": [3, 19, 27], "run": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 19, 21, 22, 23, 24, 26, 27, 28, 30, 31, 35, 38, 43, 47, 54, 55, 57], "getderivedproduct": [3, 19, 45], "getderivedproductsdefault": [3, 19, 45], "get_lidar_ratio": [3, 19], "getlidarconst": [3, 19], "getlidarconstantsdefault": [3, 19], "mwl_product": [3, 35], "getproductmatrix": [3, 19, 45], "getproductmatrixdefault": [3, 19, 45], "get_common_shap": [3, 19], "shape": [3, 19, 29, 31, 34], "qualitycontrol": [3, 19, 45], "qualitycontroldefault": [3, 19, 45], "error": [3, 4, 7, 9, 10, 11, 12, 15, 21, 24, 25, 34, 35], "error_cod": [3, 35], "except": [3, 29, 30, 35], "bsccalparamsnotequ": [3, 20], "return_valu": [3, 20], "calrangehigherthanvalid": [3, 20], "cannotopenellpfil": [3, 20], "configfilenotfound": [3, 20], "couldnotfindproductsresolut": [3, 20], "csvfilenotfound": [3, 20], "dberrortermin": [3, 20], "detectionlimitzero": [3, 20], "differentcloudmaskexist": [3, 20, 29], "differentheaderexist": [3, 20, 29], "differentproductsresolut": [3, 20], "differentwlforlr": [3, 20], "eldamwlexcept": [3, 20], "elppfilenotfound": [3, 20], "filltablefail": [3, 20], "logpathnotexist": [3, 20], "nomcopt": [3, 20], "nobsccalopt": [3, 20], "nocalibrwindowfound": [3, 20], "novaliddatapointsforcalibr": [3, 20], "notenoughmciter": [3, 20], "notfoundinstorag": [3, 20, 29], "onlyoneoverrideallow": [3, 20], "productnotuniqu": [3, 20], "scipywrapperaxiserror": [3, 20], "sizemismatch": [3, 20], "termin": [3, 20], "usecasenotimpl": [3, 20], "wrongcommandlineparamet": [3, 20], "tool": [3, 5, 9, 11, 21, 38, 43, 55, 57], "vertical_resolut": [3, 5, 6, 17, 21, 27], "calcextinct": [3, 21, 45], "calcextinctiondefault": [3, 21, 45], "calc_single_profil": [3, 21], "calc_slop": [3, 21], "ext_param": [3, 21, 35], "prepare_data": [3, 21], "qf_data": [3, 21], "result": [3, 4, 5, 7, 8, 9, 11, 16, 21, 23, 24, 26, 29, 34], "slope_routin": [3, 21, 43], "slope_to_ext_routin": [3, 21], "x_data": [3, 21, 22, 43], "y_data": [3, 21, 22, 43], "yerr_data": [3, 21, 22, 43], "extinctionfactori": [3, 21, 45], "extinctionfactorydefault": [3, 21, 45], "empty_ext": [3, 21], "get_non_merge_product": [3, 4, 5, 6, 9, 11, 21, 24], "get_product": [3, 4, 5, 6, 21, 24], "get_smooth_r": [3, 21], "raman_sig": [3, 5, 11, 21], "resolut": [3, 4, 8, 15, 16, 18, 19, 20, 21, 22, 23, 24, 29], "smooth_r": [3, 21], "extinctionparam": [3, 21], "add_signal_rol": [3, 5, 6, 11, 17, 21, 35], "ang_exp_asdataarrai": [3, 21], "from_db": [3, 4, 5, 6, 7, 9, 11, 17, 21, 24, 35], "smooth_params_auto": [3, 21, 35], "to_meta_ds_dict": [3, 4, 5, 6, 7, 9, 11, 17, 21, 24, 35], "calclidarratio": [3, 24, 45], "calclidarratiodefault": [3, 24, 45], "bsc": [3, 4, 7, 8, 10, 12, 15, 24], "ext": [3, 4, 24], "lidarratiofactori": [3, 4, 24, 45], "lidarratiofactorydefault": [3, 4, 24, 45], "empty_lr": [3, 4, 24], "lidarratioparam": [3, 24], "assign_to_product_list": [3, 4, 24, 35], "lidarratio": [3, 4, 24, 27], "log": [3, 16, 20, 29, 35], "critic": [3, 25], "db_log_func": [3, 25], "db_log_level": [3, 25], "debug": [3, 25, 38, 47], "fatal": [3, 25], "get_logger_formatt": [3, 25], "info": [3, 25], "log_messag": [3, 25], "setlevel": [3, 25], "setup_console_logg": [3, 25], "setup_db_logg": [3, 25], "setup_file_logg": [3, 25], "setup_logg": [3, 25], "warn": [3, 25], "register_db_logg": [3, 25], "register_logg": [3, 25], "monte_carlo": [3, 35], "createmccopi": [3, 26, 45], "createmccopiesdefault": [3, 26, 45], "montecarlo": [3, 20, 26], "calc_mc_error": [3, 26], "get_sample_input": [3, 26], "get_sample_result": [3, 26], "sample_input": [3, 26], "sample_result": [3, 26], "montecarloelastbscadapt": [3, 26], "get_data": [3, 26], "montecarloextadapt": [3, 26], "register_monte_carlo": [3, 26], "parallel_func": [3, 35], "basedispatch": [3, 26], "dispatch_jobs_parallel": [3, 26], "output": [3, 19, 25, 29, 35, 39, 40, 41], "mwl_file_structur": [3, 35], "mwlfilestructur": [3, 27], "anc_var_att": [3, 27], "coo_attr": [3, 27], "group_nam": [3, 27], "header_attr": [3, 27], "header_var": [3, 27], "highres_product": [3, 27], "long_nam": [3, 27], "lowres_product": [3, 27], "main_group": [3, 27], "meta_data": [3, 4, 6, 9, 17, 21, 24, 27], "nc_var_nam": [3, 27], "processor_nam": [3, 27], "res_group": [3, 27], "titl": [3, 27], "unit": [3, 27], "write_mod": [3, 27], "bsc_calibr_value_var": [3, 27], "cal_search_range_var": [3, 27], "data_attr": [3, 27], "err_attr": [3, 27], "error_method_var": [3, 27], "mwlfilevarsfromdb": [3, 27], "bsc_calibr_method_var": [3, 27], "bsc_method_var": [3, 27], "elast_bsc_algorithm_var": [3, 27], "ext_algorithm_var": [3, 27], "method_var_from_db": [3, 27], "ram_bsc_algorithm_var": [3, 27], "writemwloutput": [3, 27, 45], "writemwloutputdefault": [3, 27, 45], "collect_header_info": [3, 27], "collect_meta_data": [3, 27], "mwl_filenam": [3, 27], "out_filenam": [3, 27], "register_to_db": [3, 27], "write_group": [3, 27], "prepareextsignalsbett": [3, 35, 47], "savitzkygolayslop": [3, 35, 38], "savgolayslop": [3, 28, 38], "storag": [3, 19, 20, 35, 37], "cached_funct": [3, 35], "sg_coeff": [3, 29], "sg_used_binr": [3, 29], "smooth_routine_from_db": [3, 29], "datastorag": [3, 19, 29], "_get_prod_res_entri": [3, 29], "basic_product_auto_smooth": [3, 29], "basic_product_common_smooth": [3, 29], "basic_product_raw": [3, 29], "binres_auto_smooth": [3, 29], "binres_common_smooth": [3, 29], "cloud_mask": [3, 20, 29], "derived_product_common_smooth": [3, 29], "elpp_sign": [3, 29], "final_product_matrix": [3, 29], "get_common_cloud_mask": [3, 29], "get_max_binr": [3, 29], "prepared_sign": [3, 29], "product_common_smooth": [3, 29], "set_basic_product_auto_smooth": [3, 29], "set_basic_product_common_smooth": [3, 29], "set_basic_product_raw": [3, 29], "set_binres_auto_smooth": [3, 29], "set_binres_common_smooth": [3, 29], "set_derived_product": [3, 29], "set_elpp_sign": [3, 29], "set_final_product_matrix": [3, 29], "set_lidar_const": [3, 29], "set_prepared_sign": [3, 29], "register_datastorag": [3, 29], "test": [3, 20, 35, 36, 51, 54], "create_test_db": [3, 30, 49], "test_findbsccalibrwindowasinelda": [3, 30], "test_integr": [3, 30], "disable_test_elda_mwl_factori": [3, 35], "test_measurementparam": [3, 30], "pickle_data": [3, 35], "get_unpickl": [3, 30], "un_pickle_data": [3, 30], "write_test_data": [3, 30], "test_factori": [3, 35], "operationa": [3, 30], "operationb": [3, 30], "testfactori": [3, 30], "test_factory_registr": [3, 30], "test_param": [3, 35], "paramsa": [3, 30], "aplusb": [3, 30], "funcaplusb": [3, 30], "getb": [3, 30], "test_registri": [3, 35], "test_registry_regist": [3, 30], "test_sign": [3, 35], "test_signals_regist": [3, 30], "test_signals_from_nc_fil": [3, 30], "test_wrapp": [3, 35], "testwrapp": [3, 30], "test_bad_tupel": [3, 30], "test_good_tupel": [3, 30], "test_int": [3, 30], "test_other_typ": [3, 30], "scipy_func": [3, 30, 34], "util": [3, 35], "constant": [3, 19, 27, 29, 35], "numer": [3, 35, 41], "calc_rolling_means_sem": [3, 34], "closest_bin": [3, 34], "find_minimum_window": [3, 34], "integral_profil": [3, 34], "np_datetime64_to_datetim": [3, 34], "rolling_mean_sem": [3, 34], "path_util": [3, 35], "abs_file_path": [3, 34], "dir_not_found_hint": [3, 34], "wrapper": [3, 20, 35], "scipy_reduce_wrapp": [3, 34], "function": [3, 14, 15, 19, 25, 26, 29, 30, 31, 34, 43], "register_config": [3, 35], "arg": [3, 4, 8, 9, 11, 12, 15, 18, 21, 24, 26, 43], "env": 3, "none": [3, 4, 6, 7, 9, 10, 11, 12, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 34], "class": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 42, 43, 46, 47], "inform": [3, 19, 52], "attribut": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 38, 47], "method": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 43, 47], "properti": [3, 6, 13, 15, 19, 21, 25, 26, 27, 29, 30, 51], "site": 3, "l": [3, 13], "append": [3, 35], "new_head": 3, "attr": [3, 4, 6, 7, 9, 11, 17, 21, 24, 35], "class_attr": [3, 35], "data_origin": [3, 27], "pi": [3, 27], "end_tim": [3, 35], "classmethod": [3, 4, 6, 7, 9, 11, 13, 17, 21, 24], "nc_file": 3, "nc_d": [3, 13], "read": [3, 8, 10, 12, 15, 18, 19, 22, 27, 29, 31, 43], "from": [3, 4, 6, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 31, 38, 43, 47, 51, 52, 55], "an": [3, 4, 6, 8, 9, 10, 11, 13, 15, 17, 20, 21, 22, 24, 25, 26, 29, 30, 32, 33, 34, 46, 54], "elpp": [3, 15, 16, 19, 20, 28, 29, 42, 47, 54], "file": [3, 4, 6, 7, 9, 11, 17, 19, 20, 21, 24, 25, 27, 29, 31, 52, 54, 57], "paramet": [3, 4, 6, 7, 9, 11, 13, 14, 15, 17, 19, 20, 21, 22, 24, 27, 29, 31, 34, 52], "xarrai": [3, 6, 9, 10, 11, 12, 13, 22, 29, 39], "dataset": [3, 4, 6, 7, 9, 10, 11, 12, 17, 21, 22, 24, 29, 39], "latitud": [3, 27, 35], "degrees_north": 3, "longitud": [3, 27, 35], "degrees_east": 3, "start_tim": [3, 35], "to_ds_dict": [3, 35], "group": 3, "dict": [3, 4, 6, 7, 9, 10, 11, 12, 14, 15, 17, 19, 21, 22, 24, 26, 27, 29, 30, 31, 39, 43], "convert": [3, 4, 6, 7, 9, 11, 13, 17, 19, 21, 24], "str": [3, 8, 10, 12, 15, 18, 19, 22, 23, 29, 43], "nc": [3, 19, 49, 54], "which": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 26, 29, 34, 38, 43, 46, 47, 52, 54, 57], "global": [3, 19, 27, 29, 36, 46, 48, 51], "variabl": [3, 6, 7, 9, 10, 11, 12, 13, 22], "shall": [3, 15, 19, 20, 29, 34, 43, 57], "written": [3, 20, 29], "can": [3, 19, 20, 21, 29, 30, 38, 43, 46, 47], "return": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 34, 43, 46], "var": [3, 13, 35], "person": [3, 35], "object": [3, 13, 14, 15, 25, 26, 27, 29, 31], "nc_name": 3, "creat": [3, 4, 6, 7, 8, 9, 10, 11, 14, 17, 18, 21, 22, 23, 24, 26, 30, 31, 32, 33, 38, 43, 47, 55], "instanc": [3, 4, 6, 9, 10, 11, 13, 16, 17, 19, 21, 22, 24, 25, 26, 30, 31, 32, 33, 46, 48, 54], "role": 3, "e": [3, 4, 9, 11, 16, 21, 24, 29, 52], "g": [3, 4, 7, 9, 11, 13, 15, 16, 21, 24, 29, 35, 52], "elda": [3, 7, 15, 16, 20, 35, 51, 57], "arg_dict": 3, "todo": [3, 4, 19], "ina": 3, "miss": [3, 29], "doc": 3, "elda_cmdlin": [3, 35], "pars": [3, 31], "cmd": 3, "line": [3, 20, 57], "argument": [3, 4, 7, 8, 9, 10, 11, 13, 18, 21, 22, 23, 24, 34, 38, 47, 57], "handle_arg": [3, 35], "elda_setup_compon": [3, 35], "combin": [3, 19, 20, 29], "depol": 3, "tempor": [3, 15, 19, 20], "integr": [3, 10, 34], "preparebscsign": [3, 6, 9, 11, 17, 35, 45], "productparam": [3, 4, 6, 17, 19, 21, 24, 35], "alwai": [3, 4, 9, 11, 19, 21, 22, 24, 26, 27, 46], "dopreparebscsign": 3, "preparebscsignalsdefault": [3, 35, 45], "kwarg": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 19, 21, 22, 23, 24, 26, 27, 28, 30, 38, 43, 47], "retriev": [3, 4, 8, 9, 11, 14, 15, 18, 19, 20, 21, 22, 23, 24, 28, 29, 38, 39, 42, 43, 47, 51], "step": [3, 55], "1": [3, 8, 20, 21, 27, 29, 34, 43, 55], "set": [3, 16, 19, 30, 32, 33, 52, 55], "point": [3, 13, 34], "outsid": [3, 25], "valid": 3, "invalid": 3, "normal": [3, 29], "number": [3, 8, 15, 18, 20, 23, 26, 29, 34], "shot": [3, 29], "3": [3, 15, 20, 27, 29, 54, 55], "need": [3, 4, 29, 38, 43, 47, 52, 54], "4": [3, 55], "correct": [3, 29], "atmospher": 3, "transmiss": [3, 29], "due": 3, "molecular": [3, 29], "scatter": [3, 35], "bsc_param": [3, 5, 6, 7, 9, 11, 35], "combine_depol_compon": [3, 35], "p_param": [3, 4, 6, 9, 11, 17, 21, 24, 35], "prepareextsign": [3, 21, 35, 42, 45, 47], "doprepareextsign": 3, "prepareextsignalsdefault": [3, 35, 42, 45], "divid": 3, "calcul": [3, 4, 6, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 34, 38, 41, 43, 46], "logarithm": 3, "preparesign": [3, 35, 45], "list": [3, 7, 15, 19, 26, 29, 30, 31, 46], "all": [3, 4, 7, 9, 11, 12, 14, 15, 19, 20, 21, 22, 24, 29, 30, 31, 38, 43, 46, 47, 52], "basic": [3, 19, 29, 46], "dopreparesign": [3, 27], "preparesignalsdefault": [3, 35, 45], "generalproductparam": [3, 35], "from_extended_queri": [3, 35], "queri": [3, 15], "from_id": [3, 35], "from_short_queri": [3, 35], "mcparam": [3, 35], "nb_of_iter": [3, 35], "measurement_param": 3, "calc_with_r": [3, 35], "re": [3, 19, 29, 43], "det_limit_asdataarrai": [3, 35], "ensure_same_wavelength": [3, 35], "applic": 3, "deriv": [3, 4, 6, 9, 11, 15, 19, 21, 22, 24, 29, 51], "make": [3, 19, 34, 46], "sure": [3, 19], "profil": [3, 4, 6, 8, 9, 10, 11, 12, 17, 18, 20, 21, 24, 27, 29, 34], "same": [3, 10, 19, 20, 29], "error_method": [3, 20, 35], "error_threshold_high_asdataarrai": [3, 35], "error_threshold_low_asdataarrai": [3, 35], "general_param": [3, 4, 6, 7, 9, 11, 17, 21, 24], "get_error_param": [3, 35], "db_option": 3, "scc": [3, 8, 10, 12, 16, 18, 20, 22, 38, 43, 51, 54, 55], "get_valid_alt_rang": [3, 35], "determin": 3, "valid_alt_rang": 3, "min": 3, "max": 3, "limit": [3, 20], "harmonize_resolution_set": [3, 35], "includes_product_merg": [3, 35], "is_bsc_from_depol_compon": [3, 35], "prod_id_str": [3, 29, 35], "smooth_method": [3, 35], "dct": [3, 4, 6, 7, 9, 11, 17, 21, 24], "write": [3, 4, 6, 7, 9, 11, 17, 19, 20, 21, 24, 27, 29, 30], "further": [3, 4, 6, 7, 9, 11, 17, 21, 24, 51], "export": [3, 4, 6, 7, 9, 11, 17, 21, 24], "mwl": [3, 4, 6, 7, 9, 11, 15, 17, 19, 21, 24, 27], "i": [3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 29, 31, 34, 38, 42, 43, 46, 47, 49, 51, 52, 54, 55, 57], "ha": [3, 4, 6, 7, 9, 11, 17, 20, 21, 24, 25, 26, 29, 34], "kei": [3, 4, 6, 7, 9, 10, 11, 12, 15, 16, 17, 21, 22, 24, 43], "data_var": [3, 4, 6, 7, 9, 11, 13, 17, 21, 24], "from_sign": [3, 35], "kw_arg": 3, "have": [3, 8, 15, 18, 19, 20, 23, 30, 32, 33, 38, 47, 55], "fill": [3, 4, 9, 11, 21, 24, 29, 31], "nan": [3, 6, 29, 34], "mwl_meta_id": [3, 35], "num_scan_angl": [3, 35], "save_to_netcdf": [3, 35], "smooth": [3, 8, 10, 12, 15, 16, 19, 29, 35, 52], "perform": [3, 46, 49], "type": [3, 6, 7, 8, 13, 14, 15, 16, 19, 20, 23, 29, 34, 51, 55], "dataarrai": [3, 6, 7, 9, 10, 11, 13, 22, 27, 29], "smooth_routin": [3, 35], "write_data_in_d": [3, 35], "insert": [3, 34], "find": [3, 7, 19, 20, 34], "index": [3, 7, 34, 51], "where": [3, 10, 19, 20, 29, 34, 55], "coordin": [3, 22], "fit": [3, 22, 23, 38, 43], "empti": [3, 4, 6, 9, 11, 17, 21, 24], "xr": [3, 7, 13, 29], "qualityparam": [3, 35], "qualiti": [3, 15, 19], "from_queri": [3, 35], "smoothparam": [3, 35], "smoothroutin": [3, 35, 45], "keyword": [3, 4, 7, 8, 9, 10, 11, 12, 13, 18, 21, 22, 23, 24, 26, 38, 43, 47], "algorithm": [3, 8, 10, 12, 15, 18, 22, 23, 26, 27, 36, 44, 46, 51], "us": [3, 4, 7, 8, 9, 10, 11, 12, 15, 16, 18, 19, 21, 22, 23, 24, 29, 30, 32, 33, 34, 43, 46, 47, 51], "method_id": [3, 15, 16, 29, 35], "smoothsavgolai": [3, 35, 45], "window": [3, 7, 8, 9, 11, 12, 20, 21, 23, 43], "savitzki": [3, 8, 16, 28, 38], "golai": [3, 8, 16, 28, 38], "start": [3, 8, 10, 15, 16, 22, 23, 43], "scipi": [3, 20, 34], "savgol_filt": 3, "http": [3, 10, 27, 55], "org": [3, 10, 27], "html": 3, "filter": [3, 8, 19], "done": [3, 8, 23, 29, 34, 38, 47], "convolut": 3, "ndimag": 3, "convolve1d": 3, "sg": 3, "coeffici": [3, 4, 9, 10, 11, 21, 22, 24, 27], "sgc": 3, "here": [3, 8, 38, 46, 49, 54], "simpl": [3, 16, 39], "sum": 3, "supposedli": 3, "faster": 3, "integ": [3, 8, 23], "total": 3, "length": 3, "diamet": [3, 8, 15, 16, 23], "must": [3, 8, 15, 20, 29, 46], "odd": [3, 8], "ndarrai": [3, 34, 41], "size": [3, 20, 34], "contain": [3, 7, 9, 10, 11, 16, 29, 46], "addict": [3, 7, 10, 12, 15, 22, 27, 39, 43], "its": [3, 4, 9, 11, 21, 24, 34], "smoothslidingaverag": [3, 35, 45], "like": [3, 19, 43, 46, 52], "ansmann": 3, "1992": 3, "rayleighlidarratio": [3, 35, 45], "float": [3, 15, 19, 34], "emiss": [3, 4], "rayleighlidarratiofromconst": [3, 35, 45], "combinedepolcompon": [3, 35, 45], "two": [3, 4, 29, 38, 43, 46], "depolar": [3, 17, 19, 27, 29], "In": [3, 4, 8, 9, 11, 21, 22, 24, 26, 38, 47, 54], "thi": [3, 4, 8, 9, 11, 13, 15, 19, 21, 22, 24, 26, 29, 34, 38, 43, 46, 47, 52], "case": [3, 4, 7, 9, 11, 21, 22, 24, 26], "getcombinedsign": 3, "refl_sig": 3, "dimens": [3, 13, 20, 29], "time": [3, 4, 6, 7, 9, 11, 13, 17, 19, 21, 22, 24, 29, 43], "level": [3, 6, 10, 13, 15, 16, 25, 29, 34, 43, 46], "reflect": [3, 16], "transm_sig": 3, "transmit": 3, "depol_param": 3, "hr": 3, "ht": 3, "gr": 3, "gt": 3, "gain": 3, "factor": 3, "The": [3, 4, 6, 7, 8, 9, 11, 13, 14, 17, 19, 20, 21, 23, 24, 25, 26, 29, 31, 36, 38, 42, 43, 46, 47, 51, 52, 55], "statistical_error": 3, "systematic_error": 3, "combinedepolcomponentsdefault": [3, 35, 45], "equat": [3, 8, 10, 23], "sig_tot": 3, "eta": 3, "k": 3, "sig_transm": 3, "sig_refl": 3, "depolarizationcalibr": [3, 35], "pol_cal_idx": 3, "gain_factor": [3, 35], "gain_factor_correct": [3, 35], "elppdata": [3, 35], "represent": 3, "one": [3, 13, 19, 20, 29, 34, 42, 46, 51], "read_nc_fil": [3, 35], "cloud": [3, 29], "mask": [3, 29], "put": [3, 26, 55], "dimension": [3, 13, 29, 34], "alt_rang": [3, 35], "as_sig_ratio": [3, 35], "enumer": 3, "denomin": 3, "nomin": 3, "calc_eff_bin_res_routin": [3, 35], "calc_mol_backscatt": [3, 35], "calc_used_bin_res_routin": [3, 35], "channel_id": [3, 15, 16, 35], "channel_id_str": [3, 35], "channel_idx_in_ncfil": [3, 35], "correct_for_mol_transmiss": [3, 35], "data_in_vertical_rang": [3, 35], "v_rang": 3, "boundari": 3, "subset": [3, 19], "within": [3, 20, 26, 34], "vertic": [3, 8, 15, 19, 20, 22, 23, 29, 34], "min_height": [3, 15, 16], "max_height": [3, 15, 16], "extend_with_binr": 3, "clip_with_binr": 3, "default": [3, 4, 9, 11, 21, 24, 34, 42, 44, 57], "between": [3, 16, 19, 29, 46, 48, 51], "begin": 3, "end": 3, "half": 3, "detection_typ": [3, 35], "detection_wavelength": [3, 15, 16, 35], "eff_to_used_binr": [3, 35], "an_eff_binr": 3, "how": [3, 8, 15, 18, 23], "mani": [3, 8, 15, 18, 23], "bin": [3, 7, 8, 10, 15, 16, 18, 19, 23, 29, 34, 43], "given": [3, 8, 14, 15, 18, 19, 23, 29, 34], "effect": [3, 8, 15, 16, 18, 23, 29], "emission_wavelength": [3, 15, 16, 35], "from_depol_compon": [3, 35], "repres": [3, 15, 46], "idx_in_fil": [3, 13], "netcdf": [3, 27, 54], "get_binres_from_fixed_smooth": [3, 35], "smooth_param": [3, 21, 22], "used_binres_routin": 3, "get_raw_heightr": [3, 35], "h": [3, 35, 55, 57], "height_to_level": [3, 35], "seri": [3, 4, 6, 9, 11, 17, 21, 24], "dim": 3, "request": [3, 20, 29], "closest": [3, 34], "heightres_to_bin": [3, 35], "heightr": 3, "correspond": [3, 8, 15, 16, 19, 29, 43, 46, 48, 52], "heights_to_level": [3, 35], "each": [3, 7, 9, 11, 19, 22, 51], "is_raman_sig": [3, 35], "is_wv_sig": [3, 35], "is_all_range_sign": [3, 35], "is_cross_sig": [3, 35], "is_elast_sig": [3, 35], "is_fr_sign": [3, 35], "is_nr_sign": [3, 35], "is_parallel_sig": [3, 35], "is_refl_sig": [3, 35], "is_total_sig": [3, 35], "is_transm_sig": [3, 35], "normalize_by_shot": [3, 35], "pol_calibr": [3, 35], "pol_channel_conf": [3, 35], "pol_channel_geometri": [3, 35], "prepare_for_extinct": [3, 35], "sig": 3, "ln": 3, "sig_o": 3, "rayl": 3, "_sig": 3, "_sig_o": 3, "dsig": 3, "dsig_o": 3, "axi": [3, 7, 10, 13, 20, 30, 34], "distanc": 3, "raw_heightr": [3, 35], "regist": [3, 14, 16, 35, 38, 43, 47], "scale_factor_shot": [3, 35], "set_valid_height_rang": [3, 35], "below": [3, 10], "abov": [3, 7, 10, 55], "label": 3, "self": [3, 38, 43, 47], "below_ovl": 3, "above_max_alt": 3, "station_altitud": [3, 27, 35], "submodul": [5, 35], "backscatterfactori": [5, 6, 9, 11, 45], "backscatterfactorydefault": [5, 6, 9, 11, 45], "calibr_window": [5, 6, 7, 9, 11], "elast_sig": [5, 6, 9, 10], "empty_bsc": [5, 6, 9, 11], "backscatterparam": [5, 6, 7, 9, 11], "iterbscparam": [5, 6], "conv_crit": [5, 6, 15], "max_iteration_count": [5, 6, 15, 16], "ram_bsc_method": [5, 6, 15], "product": [5, 7, 8, 10, 12, 15, 16, 18, 19, 20, 22, 23, 29, 35, 43, 51, 53], "bsc_ratio": [5, 6, 15, 16], "calcelastbackscatt": [5, 9, 45], "calcelastbackscatterdefault": [5, 9, 45], "calc_routin": [5, 9, 11], "elastbackscatterfactori": [5, 9, 45], "elastbackscatterfactorydefault": [5, 9, 45], "elastbscparam": [5, 9], "elastbackscatt": [5, 9], "calcramanbackscatt": [5, 11, 45], "calcramanbackscatterdefault": [5, 11, 45], "sigratio": [5, 11, 12, 17], "ramanbackscatterfactori": [5, 11, 45], "ramanbackscatterfactorydefault": [5, 11, 45], "sig_ratio": [5, 11], "ramanbscparam": [5, 9, 11], "ramanbackscatt": [4, 5, 9, 11, 24], "findbsccalibrwindowasinelda": [6, 7, 32, 45], "create_calibration_window_datarrai": [6, 7], "find_calibration_window": [6, 7], "get_rolling_window_properti": [6, 7], "findcommonbsccalibrwindow": [6, 7, 45], "bsccalibrationparam": [6, 7], "equal": [6, 7, 20, 34], "elastbsceffbinr": [6, 8, 45], "elastbscusedbinr": [6, 8, 45], "rambsceffbinr": [6, 8, 45], "rambscusedbinr": [6, 8, 45], "savgolayeffbinr": [6, 8, 45], "savgolayusedbinr": [6, 8, 45], "singl": [4, 6, 9, 11, 13, 19, 24, 29, 34, 51], "2147483647": [4, 6, 21, 24], "bckscatter": 6, "dimensionless": 6, "imens": 6, "meta": [4, 6, 9, 11, 17, 21, 24], "copi": [4, 6, 9, 11, 12, 17, 21, 24, 26, 29], "wa": [6, 14, 21, 29, 38, 53], "previous": [6, 9, 11, 17, 21, 29], "backscatter_calibration_rang": [6, 7, 9, 11], "nv": [6, 9, 11], "slice": [7, 9, 11], "independ": [7, 51], "minimum": 7, "interv": 7, "rel": [7, 10, 12, 34], "standard": 7, "mean": [7, 34], "smaller": 7, "than": [7, 20], "threshold": 7, "2km": 7, "otherwis": [7, 19, 30], "onli": [7, 10, 16, 20, 30, 34, 42, 44, 46, 47], "assign": 7, "individu": [7, 15], "height_axi": 7, "win_first_idx": 7, "win_last_idx": 7, "time_bound": 7, "first": [7, 25, 30, 34, 38, 43, 47], "last": [7, 34, 38, 43, 47], "bottom": [7, 9, 11], "top": [7, 9, 11], "w_width": [7, 34], "width": [7, 15, 16], "el_sig": 7, "error_threshold": [7, 34], "fin": 7, "other": [7, 12, 36, 51], "id": [8, 10, 12, 15, 16, 18, 19, 22, 23, 29, 43, 57], "order": [8, 15, 18, 23, 29, 54], "achiev": [8, 15, 18, 23], "requir": [8, 18, 23, 51, 52, 53, 55], "accord": [8, 19, 23], "2016": [8, 23], "eff_binr": [8, 23, 29], "round": [8, 23], "used_bins_elda": 8, "24": 8, "0": [8, 15, 20, 21, 23, 27, 29, 34], "paper": 8, "radiu": 8, "used_bin": [8, 23], "62": 8, "86": 8, "sav": 8, "gol": 8, "term": [8, 23], "eb": 8, "calcbscprofileit": [9, 10, 45], "calcbscprofilekf": [9, 10, 45], "error_param": [9, 10, 11, 12], "range_axi": [9, 10, 34], "rayl_scat": [9, 10], "calcelastbscprofil": [9, 10, 45], "elast_sign": [9, 10], "arrai": [4, 9, 11, 21, 22, 24, 29, 34, 43], "option": [4, 9, 11, 13, 15, 19, 20, 21, 24, 34, 36, 38, 43, 47], "allow": [4, 9, 10, 11, 12, 16, 21, 24, 29, 36, 46, 51, 52], "feed": [4, 9, 11, 21, 24], "new": [4, 9, 11, 14, 20, 21, 24, 29, 34, 38, 47, 53], "exist": [4, 9, 11, 19, 20, 21, 24, 46], "featur": [4, 9, 11, 21, 24], "mont": [4, 9, 11, 15, 21, 24, 26], "carlo": [4, 9, 11, 15, 21, 24, 26], "elasticbackscatt": 9, "were": [9, 11, 17], "ramanbackscatterparam": [9, 11], "iter": [10, 15, 20], "symbol": 10, "althausen": 10, "jotech": 10, "2000": 10, "journal": 10, "ametsoc": 10, "view": 10, "atot": 10, "17": 10, "11": [10, 20], "1520": 10, "0426_2000_017_1469_swcal_2_0_co_2": 10, "xml": 10, "alreadi": [10, 12, 29, 38], "mol_extinct": [10, 12], "mol_bckscatt": 10, "assumed_particle_lidar_ratio": 10, "lowrang": [10, 12], "highrang": [10, 12], "maximum": [10, 12, 29, 52], "statist": [10, 12, 34], "cal_first_lev": [10, 12], "cal_last_lev": [10, 12], "calibr_valu": [10, 12], "assum": 10, "uncertainti": [10, 20, 26], "nois": 10, "nor": 10, "estim": 10, "calibration_bin": 10, "kf": [10, 29], "backward": 10, "forward": 10, "calcramanbscprofil": [11, 12, 45], "calcramanbscprofileviabr": [11, 12, 45], "signal_ratio": 11, "handl": [11, 15, 19, 46, 48, 52, 55], "differ": [4, 11, 20, 29, 46, 51], "via": [12, 25, 29], "br": 12, "attibut": 12, "stat_err": 13, "sys_err": 13, "variable_nam": 13, "angle_var": 13, "depend": [13, 55], "angl": 13, "If": [13, 31], "sever": 13, "altern": [13, 46, 47], "avail": [13, 15, 27, 38, 43, 46], "decid": 13, "provid": [13, 20, 34, 43, 49, 52, 54], "decis": [13, 43], "whether": [13, 53], "user": [13, 44, 46, 47, 52, 53], "defin": [13, 19, 20], "thei": [13, 19, 34, 46], "automat": [13, 19, 29, 49], "pass": 13, "basefactori": 13, "import": [14, 20, 38, 43, 47, 52], "initi": [14, 16], "blank": 14, "klass_nam": 14, "Its": [14, 51], "klass": 14, "registr": 14, "overrid": [14, 20, 47, 52], "factory_nam": [14, 20], "fals": [14, 19, 30, 43, 55], "under": 14, "entri": [14, 29], "look": [14, 29, 43], "dump": 14, "bsccalibrlowestheight": [15, 16], "bsccalibrmethod": [15, 16], "bsccalibrrangesearchmethod": [15, 16], "bsccalibrupperheight": [15, 16], "bsccalibrvalu": [15, 16], "bsccalibrwindow": [15, 16], "bscmethod": [15, 16], "elastbackscatteropt": [15, 16], "bsc_calibration_lowestheight_id": [15, 16], "bsc_calibration_range_search_method_id": [15, 16], "bsc_calibration_upperheight_id": [15, 16], "bsc_calibration_value_id": [15, 16], "bsc_calibration_window_id": [15, 16], "elast_bsc_method_id": [15, 16], "error_method_id": [15, 16], "fixed_lr": [15, 16], "fixed_lr_error": [15, 16], "iter_bsc_options_id": [15, 16], "lr_input_method_id": [15, 16], "product_id": [15, 16, 20], "smooth_method_id": [15, 16], "elastbscmethod": [15, 16], "iterbackscatteropt": [15, 16], "iter_conv_crit": [15, 16], "ram_bsc_method_id": [15, 16], "lrfile": [15, 16], "filenam": [15, 16, 20, 25], "hoi_stations_id": [15, 16], "interpolation_id": [15, 16], "stop": [15, 16], "submission_d": [15, 16], "ramanbackscatteropt": [15, 16], "ramanbscmethod": [15, 16], "fov": [15, 16], "if_fwhm": [15, 16], "if_cent": [15, 16], "background_mode_id": [15, 16], "dead_tim": [15, 16], "dead_time_corr_type_id": [15, 16], "detection_mode_id": [15, 16], "laser_id": [15, 16], "raw_range_resolut": [15, 16], "scat_mechanism_id": [15, 16], "signal_type_id": [15, 16], "string_id": [15, 16], "telescope_id": [15, 16], "trigger_delai": [15, 16], "trigger_delay_interp_id": [15, 16], "productchannel": [15, 16], "telescop": [15, 16], "focal_length": [15, 16], "full_overlap_height_m": [15, 16], "lock": [15, 16], "station_id": [15, 16, 27], "eldamwlclassnam": [15, 16], "classnam": [15, 16, 23], "eldamwlproduct": [15, 16], "inscribed_at": [15, 16], "measurements_id": [15, 16], "scc_version_id": [15, 16], "extmethod": [15, 16], "method_for_getting_effective_binr": [15, 16], "method_for_getting_used_binr": [15, 16], "extinctionopt": [15, 16], "angstroem": [4, 15, 16, 19], "ext_method_id": [15, 16], "overlap_file_id": [15, 16], "overlapfil": [15, 16], "eldamwlexitcod": [15, 16], "descript": [15, 16, 29], "eldamwllog": [15, 16], "datetim": [15, 16], "messag": [15, 16], "module_vers": [15, 16], "lidarconst": [15, 16], "elda_vers": [15, 16], "inscribedat": [15, 16], "calibr_factor": [15, 16], "calibr_factor_stat_err": [15, 16], "calibr_factor_sys_err": [15, 16], "calibr_window_bottom": [15, 16], "calibr_window_top": [15, 16], "hoi_system_id": [15, 16, 27], "is_latest_valu": [15, 16], "lidar_const_stat_err": [15, 16], "lidar_const_sys_err": [15, 16], "profile_end_tim": [15, 16], "profile_start_tim": [15, 16], "extbscopt": [15, 16], "extinction_options_product_id": [15, 16], "min_bscratio_for_lr": [15, 16], "raman_backscatter_options_product_id": [15, 16], "calipso": [15, 16], "cirru": [15, 16], "climatol": [15, 16], "cloudmask": [15, 16], "cloudmask_current_product_id": [15, 16], "cloudmask_return_cod": [15, 16], "comment": [15, 16, 27], "creation_auth_user_id": [15, 16], "creation_d": [15, 16], "dicycl": [15, 16], "elda_current_product_id": [15, 16], "elda_return_cod": [15, 16], "eldec": [15, 16], "eldec_current_product_id": [15, 16], "eldec_return_cod": [15, 16], "elic": [15, 16], "elic_current_product_id": [15, 16], "elic_return_cod": [15, 16], "elpp_current_product_id": [15, 16], "elpp_return_cod": [15, 16], "elquick": [15, 16], "elquick_current_product_id": [15, 16], "elquick_return_cod": [15, 16], "etna": [15, 16], "forfir": [15, 16], "hirelpp": [15, 16], "hirelpp_current_product_id": [15, 16], "hirelpp_return_cod": [15, 16], "interface_return_cod": [15, 16], "lidar_ratio_file_id": [15, 16], "num_id": [15, 16], "photosmog": [15, 16], "rurban": [15, 16], "sahadust": [15, 16], "sounding_file_id": [15, 16], "strato": [15, 16], "update_auth_user_id": [15, 16], "updated_d": [15, 16], "upload": [15, 16], "errorthreshold": [15, 16], "mcoption": [15, 16], "iteration_count": [15, 16], "mwlproductproduct": [15, 16], "create_with_hr": [15, 16], "create_with_lr": [15, 16], "mwl_product_id": [15, 16, 19, 20], "preprocopt": [15, 16], "preprocessing_integration_tim": [15, 16], "preprocessing_vertical_resolut": [15, 16], "preparedsignalfil": [15, 16], "producttyp": [15, 16], "is_basic_product": [15, 16], "is_in_mwl_product": [15, 16], "is_mwl_only_product": [15, 16], "nc_file_id": [15, 16], "processor_id": [15, 16], "product_typ": [15, 16, 19, 20], "hirelpp_product_option_id": [15, 16], "prod_type_id": [15, 16], "usecase_id": [15, 16], "smoothmethod": [15, 16], "smoothopt": [15, 16], "detection_limit": [15, 16, 22], "highrange_error_threshold_id": [15, 16], "highres_highrange_integration_tim": [15, 16], "highres_highrange_vertical_resolut": [15, 16], "highres_lowrange_integration_tim": [15, 16], "highres_lowrange_vertical_resolut": [15, 16], "lowrange_error_threshold_id": [15, 16], "lowres_highrange_integration_tim": [15, 16], "lowres_highrange_vertical_resolut": [15, 16], "lowres_lowrange_integration_tim": [15, 16], "lowres_lowrange_vertical_resolut": [15, 16], "smooth_type_id": [15, 16], "transition_zone_from": [15, 16], "transition_zone_to": [15, 16], "smoothtyp": [15, 16], "systemproduct": [15, 16], "system_id": [15, 16], "connect_str": 15, "measurement_id": [15, 27], "msg": [15, 25], "mwl_prod_id": 15, "correl": 15, "system": [15, 16, 27, 46, 53], "bsc_prod_id": 15, "bsc_type": 15, "get": [15, 19, 29], "sc": 15, "preproc_opt": 15, "method_t": 15, "python": [15, 16, 54, 55], "optic": [15, 19, 27, 51], "actual": [15, 43], "_elast_bsc_method": [15, 16], "elast_bsc_method": 15, "lr_input_method": 15, "slope": [15, 22, 23, 28, 38, 43], "_extinction_method": 15, "full": 15, "overlap": 15, "_ram_bsc_method": [15, 16], "routin": 15, "string": [15, 30], "meas_id": [15, 19, 57], "nowtim": 15, "chan_id": 15, "detection_wl": 15, "profile_start": 15, "profile_end": 15, "new_lc": 15, "new_lc_sys_err": 15, "new_lc_stat_err": 15, "processor_vers": 15, "relat": [16, 29], "_bsc_calibration_lowestheight": 16, "constructor": 16, "construct": [16, 31], "present": 16, "These": 16, "could": [16, 20, 30], "exampl": [16, 38, 54], "ani": 16, "map": 16, "relationship": 16, "_cal_range_search_method": 16, "_bsc_calibration_range_search_method": 16, "_bsc_calibration_upperheight": 16, "_bsc_calibration_valu": 16, "_bsc_calibration_window": 16, "_bsc_method": 16, "elast_backscatter_opt": 16, "iter_backscatter_opt": 16, "lidarratio_fil": 16, "raman_backscatter_opt": 16, "_ext_method": [16, 38, 43], "extinction_opt": 16, "exit": 16, "code": [16, 38, 46, 47, 52, 55], "stabl": 16, "ext_bsc_opt": 16, "_smooth_method": 16, "slide": 16, "averag": 16, "wl": [19, 20, 29], "angstroem_exp": 19, "expon": [4, 19], "filtered_id": 19, "product_t": 19, "pd": 19, "datafram": 19, "consist": 19, "pilar": 19, "improv": [19, 51], "true": [19, 43, 47], "current": [19, 30, 31], "same_resolut": 19, "bool": 19, "exactli": 19, "uniqu": 19, "sort": 19, "lowr": [19, 21, 29], "highr": [19, 21, 29], "high": [19, 29], "low": [19, 29], "etc": [19, 29, 46], "store": [19, 29, 43], "panda": 19, "search": [19, 29, 34], "itself": 19, "product_list": 19, "assess": 19, "product_id_str": 19, "vldr": [17, 18, 19], "link": [19, 46, 48], "matrix": [19, 29], "prepare_sign": [19, 35, 42, 47], "synergyst": 19, "control": 19, "pre": [19, 54], "process": [19, 52, 54], "preprocess": 19, "old": [19, 51], "style": 19, "yet": [19, 20], "auto": [19, 29, 49], "fix": [19, 34], "bring": [19, 31], "onto": [19, 29], "grid": [19, 29], "synerget": 19, "prod_id_1": 20, "prod_id_2": 20, "rais": [20, 29, 30, 32, 33], "when": [20, 25, 30, 32, 33], "44": 20, "higher": 20, "cannot": 20, "open": 20, "10": 20, "file_path": [20, 34], "csv": [20, 31], "found": [20, 29, 31, 46], "occur": [20, 29, 47], "while": 20, "51": 20, "problem": 20, "9": 20, "detect": 20, "31": 20, "42": 20, "header": [20, 29, 35], "43": 20, "50": 20, "49": 20, "baseexcept": 20, "fail": 20, "path": [20, 34, 52, 55], "doe": [20, 30, 32, 33], "6": 20, "mc": [20, 26], "45": 20, "46": 20, "48": 20, "13": [20, 27], "23": 20, "what": 20, "100": 20, "attempt": 20, "add": [20, 38, 46, 47, 55], "more": 20, "101": 20, "typ": 20, "profile1_nam": 20, "profile2_nam": 20, "function_nam": 20, "marker": 20, "mix": 20, "usecas": 20, "instead": 20, "call": [20, 25, 29, 41, 43, 46], "7": 20, "wrong": 20, "command": [20, 57], "41": 20, "extinctionautosmooth": [21, 22], "extinctionautosmoothdefault": [21, 22], "max_smooth": [21, 22], "linfit": [21, 22, 43], "nonweightedlinearfit": [21, 22, 43, 45], "signalslop": [21, 22, 38, 43, 45], "slopetoextinct": [21, 22, 45], "slopetoextinctiondefault": [21, 22, 45], "weightedlinearfit": [21, 22, 43, 45], "exteffbinr": [21, 23, 45], "extusedbinr": [21, 23, 45], "linfiteffbinr": [21, 23, 45], "linfitusedbinr": [21, 23, 45], "raman_sign": 21, "t": [21, 30, 43], "lev": [21, 43], "half_win": 21, "error_threshold_low": 22, "error_threshold_high": 22, "them": [22, 43], "optimum": 22, "np": [22, 34, 43], "slope_err": [22, 43], "non": [22, 43], "weight": [22, 43], "linear": [17, 22, 23, 27, 43], "resolutionof": 23, "85934": 23, "17802": 23, "linfit_effbinr": 23, "linfit_usedbinr": 23, "lr_param": 24, "input": [4, 24, 39, 40, 41, 54], "global_product_list": [4, 24], "consol": [25, 55], "check": [25, 46, 53], "color": 25, "possibl": 25, "get_logg": 25, "formatt": 25, "setup": [25, 30, 32, 33, 51], "should": [25, 47], "after": 25, "connect": 25, "establish": 25, "known": 25, "stagger": 25, "come": 25, "up": [25, 32, 33], "brought": 25, "extern": [25, 46], "ensur": 25, "origin": [26, 29, 34], "randomli": 26, "vari": 26, "n": [26, 34], "op": 26, "orig": 26, "usual": 26, "instrument_fil": 26, "parallel": 26, "job": 26, "structur": [27, 36, 51], "error_": 27, "hoi_configuration_id": 27, "institut": 27, "locat": 27, "data_processing_institut": 27, "sourc": [27, 29], "measurement_start_datetim": 27, "measurement_stop_datetim": 27, "molecular_calculation_source_fil": 27, "cloud_mask_typ": 27, "scc_product_typ": 27, "molecular_calculation_sourc": 27, "15": 27, "volum": [17, 27], "16": 27, "angstroemexpon": 27, "14": 27, "colorratio": 27, "volumedepolar": 27, "particledepolar": 27, "project": [27, 55], "websit": 27, "www": 27, "earlinet": [27, 51], "aerosol": [27, 51], "sr": 27, "w": 27, "dbl": 27, "item": 27, "p_type": 27, "db_tabl": 27, "multi": 27, "often": [29, 41], "Their": [29, 39, 40, 41], "cach": 29, "window_length": 29, "__data": 29, "intermedi": 29, "central": 29, "access": 29, "exclus": 29, "restrict": 29, "intellig": 29, "memori": 29, "futur": 29, "what_str": 29, "where_str": 29, "certain": 29, "obj": 29, "deepcopi": 29, "without": [29, 46], "transform": 29, "geteffvertr": 29, "getusedbinr": 29, "ch_id_str": 29, "those": [29, 52], "final": [29, 43], "includ": 29, "laser": 29, "necessari": [29, 55], "new_product": 29, "un": 29, "new_res_arrai": 29, "new_sign": 29, "new_dataset": 29, "per": 29, "new_lidar_const": 29, "dbconstructor": [30, 31, 49], "create_t": [30, 31], "csv_data": [30, 31], "fill_tabl": [30, 31], "refine_data": [30, 31], "remove_db": [30, 31], "register_dbconstructor": [30, 31], "data_nam": [30, 32], "test_get_bp_calibration_window": [30, 32], "test_20181017oh00": [30, 33], "testtestdb": [30, 33], "test_test_db": [30, 33], "mocker": 30, "first_onli": 30, "recurs": 30, "go": 30, "through": 30, "whatev": 30, "pickl": 30, "print": 30, "problemat": 30, "element": 30, "tupl": [30, 34], "lot": 30, "duplic": 30, "file_nam": 30, "fixtur": [30, 32, 33], "state": 30, "methodnam": [30, 32, 33], "runtest": [30, 32, 33], "testcas": [30, 32, 33], "execut": [30, 32, 33], "valueerror": [30, 32, 33], "specifi": [30, 32, 33], "mock_get_classname_from_db": 30, "mock_prod_id_str": 30, "_a": 30, "_kwarg": 30, "noth": 31, "associ": 31, "give": 31, "dictionari": 31, "skip": 31, "refin": 31, "remov": [31, 34], "prior": 31, "hook": [32, 33], "befor": [32, 33, 34], "exercis": [32, 33], "first_bin": 34, "last_bin": 34, "search_valu": 34, "absolut": 34, "complet": [34, 36, 47], "idx": 34, "sem": 34, "extrapolate_ovl_factor": 34, "cumulative_trapezoid": 34, "cumul": 34, "interpol": 34, "ydata": 34, "xdata": 34, "direct": [34, 47], "revers": 34, "extrapol": 34, "toward": 34, "ground": 34, "range_new": 34, "data_new": 34, "np_datetme_64": 34, "roll": 34, "stderror": 34, "projekt": 34, "directori": [34, 38, 47, 52, 57], "wil": 34, "chang": [4, 34, 55], "path_str": 34, "There": [34, 38, 42, 46], "bug": 34, "capabl": 34, "deal": 34, "stat": 34, "py": [34, 52], "2425": 34, "wrap": 34, "funtion": 34, "packag": [35, 38, 47, 51, 52, 55], "subpackag": 35, "modul": [35, 38, 47, 51, 52, 54], "content": 35, "config": [35, 52, 55], "main": 35, "rayleigh": 35, "modular": [36, 51], "design": [36, 51], "eldamwl": [36, 38, 40, 42, 43, 46, 47, 48, 49, 52, 54, 55, 57], "develop": [36, 38, 46, 47, 53], "addit": [36, 46, 51], "replac": [36, 46, 51], "program": [36, 51], "It": [38, 47], "might": [38, 47], "want": [38, 47], "anoth": 38, "ad": [38, 46, 47, 55], "next": 38, "you": [38, 47, 52, 54], "utf": [38, 47, 52], "8": [38, 47, 52, 54, 55], "def": [38, 43, 47], "__init__": [38, 43, 47], "__name__": [38, 43, 47], "well": 38, "accept": [38, 47], "announc": [38, 47], "statement": [38, 47], "do": [39, 40, 41, 46], "logist": 40, "specif": [40, 52], "stupid": 41, "veri": 41, "numpi": 41, "respons": 42, "appli": 43, "third": 43, "python_classnam": 43, "exact": 43, "follow": 43, "nc_fill_str": 43, "__call__": 43, "assert": 43, "super": 43, "any_prod_id_str": 43, "fb": 43, "lb": 43, "window_data": 43, "sig_slop": 43, "select": [44, 46, 47], "expand": 46, "easili": 46, "subsystem": 46, "modifi": [46, 52], "layer": 46, "russian": 46, "doll": 46, "outer": 46, "surround": 46, "purpos": [46, 51], "descend": 46, "core": 46, "For": 46, "so": 46, "right": 46, "introduc": 46, "overwrit": [46, 52], "just": [46, 52], "choic": 46, "among": 46, "never": 46, "address": 46, "directli": 46, "complex": 46, "fundament": 46, "foreseen": 47, "eg": 47, "20181228oh00_0000379": [49, 54], "calculu": 51, "chain": 51, "multiwavelength": 51, "analyz": [51, 57], "synergi": 51, "usag": 51, "instal": 51, "configur": [51, 53, 57], "flow": 51, "chart": 51, "contribut": 51, "config_default": 52, "place": 52, "holder": 52, "credenti": 52, "your": 52, "server": 52, "log_path": 52, "c": [52, 57], "mypath": 52, "mai": 52, "also": 52, "updat": 53, "version": 53, "successful": 53, "mysql": 54, "virtual": [55, 57], "environ": [55, 57], "manag": 55, "poetri": [55, 57], "pip": 55, "python3": 55, "mpip": 55, "virtualenv": 55, "slackwar": 55, "experiment": 55, "clone": 55, "repositori": 55, "git": 55, "github": 55, "com": 55, "actri": 55, "eldamwl_run": 55, "pyproject": 55, "toml": 55, "cd": 55, "nano": 55, "activ": 55, "shell": 55, "pull": 55, "been": 55, "angstroemexpfactori": 4, "angstroemexpfactorydefault": 4, "angstroemexp": 4, "calcangstroemexp": 4, "calcangstroemexpdefault": 4, "ae_param": 4, "angstroemexpparam": 4, "lwvl": 4, "hwvl": 4, "empty_a": 4, "angstrom": 4, "calcangstroemextdefault": 4, "lowest": 4, "highest": 4, "vldreffbinr": [17, 18], "vldrusedbinr": [17, 18], "vlrdfactori": 17, "vldrparam": 17, "vlrd": 17}, "objects": {"": [[3, 0, 0, "-", "ELDAmwl"]], "ELDAmwl": [[4, 0, 0, "-", "angstroem_exponent"], [5, 0, 0, "-", "backscatter"], [13, 0, 0, "-", "bases"], [14, 0, 0, "-", "component"], [3, 0, 0, "-", "config"], [15, 0, 0, "-", "database"], [17, 0, 0, "-", "depol"], [19, 0, 0, "-", "elda_mwl"], [20, 0, 0, "-", "errors"], [21, 0, 0, "-", "extinction"], [3, 0, 0, "-", "header"], [24, 0, 0, "-", "lidar_ratio"], [25, 0, 0, "-", "log"], [3, 0, 0, "-", "main"], [26, 0, 0, "-", "monte_carlo"], [27, 0, 0, "-", "output"], [28, 0, 0, "-", "plugins"], [3, 0, 0, "-", "prepare_signals"], [3, 0, 0, "-", "products"], [3, 0, 0, "-", "rayleigh"], [3, 0, 0, "-", "signals"], [29, 0, 0, "-", "storage"], [30, 0, 0, "-", "tests"], [34, 0, 0, "-", "utils"]], "ELDAmwl.angstroem_exponent": [[4, 0, 0, "-", "operation"], [4, 0, 0, "-", "params"], [4, 0, 0, "-", "product"]], "ELDAmwl.angstroem_exponent.operation": [[4, 1, 1, "", "AngstroemExpFactory"], [4, 1, 1, "", "AngstroemExpFactoryDefault"], [4, 1, 1, "", "CalcAngstroemExp"], [4, 1, 1, "", "CalcAngstroemExpDefault"]], "ELDAmwl.angstroem_exponent.operation.AngstroemExpFactory": [[4, 2, 1, "", "get_classname_from_db"], [4, 3, 1, "", "name"]], "ELDAmwl.angstroem_exponent.operation.AngstroemExpFactoryDefault": [[4, 3, 1, "", "bsc"], [4, 3, 1, "", "empty_lr"], [4, 3, 1, "", "ext"], [4, 2, 1, "", "get_non_merge_product"], [4, 2, 1, "", "get_product"], [4, 3, 1, "", "name"], [4, 3, 1, "", "param"], [4, 2, 1, "", "prepare"], [4, 3, 1, "", "prod_id"], [4, 3, 1, "", "resolution"], [4, 3, 1, "", "result"]], "ELDAmwl.angstroem_exponent.operation.CalcAngstroemExp": [[4, 2, 1, "", "get_classname_from_db"], [4, 3, 1, "", "name"]], "ELDAmwl.angstroem_exponent.operation.CalcAngstroemExpDefault": [[4, 3, 1, "", "hwvl"], [4, 3, 1, "", "lwvl"], [4, 3, 1, "", "name"], [4, 3, 1, "", "result"], [4, 2, 1, "", "run"]], "ELDAmwl.angstroem_exponent.params": [[4, 1, 1, "", "AngstroemExpParams"]], "ELDAmwl.angstroem_exponent.params.AngstroemExpParams": [[4, 2, 1, "", "assign_to_product_list"], [4, 2, 1, "", "from_db"], [4, 2, 1, "", "to_meta_ds_dict"]], "ELDAmwl.angstroem_exponent.product": [[4, 1, 1, "", "AngstroemExps"]], "ELDAmwl.angstroem_exponent.product.AngstroemExps": [[4, 2, 1, "", "init"], [4, 2, 1, "", "to_meta_ds_dict"]], "ELDAmwl.backscatter": [[6, 0, 0, "-", "common"], [9, 0, 0, "-", "elastic"], [11, 0, 0, "-", "raman"]], "ELDAmwl.backscatter.common": [[7, 0, 0, "-", "calibration"], [6, 0, 0, "-", "operation"], [6, 0, 0, "-", "params"], [6, 0, 0, "-", "product"], [8, 0, 0, "-", "vertical_resolution"]], "ELDAmwl.backscatter.common.calibration": [[7, 0, 0, "-", "operation"], [7, 0, 0, "-", "params"]], "ELDAmwl.backscatter.common.calibration.operation": [[7, 1, 1, "", "FindBscCalibrWindowAsInELDA"], [7, 1, 1, "", "FindCommonBscCalibrWindow"]], "ELDAmwl.backscatter.common.calibration.operation.FindBscCalibrWindowAsInELDA": [[7, 3, 1, "", "bsc_params"], [7, 2, 1, "", "create_calibration_window_datarray"], [7, 3, 1, "", "data_storage"], [7, 2, 1, "", "find_calibration_window"], [7, 2, 1, "", "get_rolling_window_properties"], [7, 2, 1, "", "init"], [7, 3, 1, "", "name"], [7, 2, 1, "", "run"]], "ELDAmwl.backscatter.common.calibration.operation.FindCommonBscCalibrWindow": [[7, 2, 1, "", "get_classname_from_db"], [7, 3, 1, "", "name"]], "ELDAmwl.backscatter.common.calibration.params": [[7, 1, 1, "", "BscCalibrationParams"]], "ELDAmwl.backscatter.common.calibration.params.BscCalibrationParams": [[7, 2, 1, "", "equal"], [7, 2, 1, "", "from_db"], [7, 2, 1, "", "to_meta_ds_dict"]], "ELDAmwl.backscatter.common.operation": [[6, 1, 1, "", "BackscatterFactory"], [6, 1, 1, "", "BackscatterFactoryDefault"]], "ELDAmwl.backscatter.common.operation.BackscatterFactory": [[6, 2, 1, "", "get_classname_from_db"], [6, 3, 1, "", "name"]], "ELDAmwl.backscatter.common.operation.BackscatterFactoryDefault": [[6, 3, 1, "", "calibr_window"], [6, 3, 1, "", "data_storage"], [6, 3, 1, "", "elast_sig"], [6, 3, 1, "", "empty_bsc"], [6, 2, 1, "", "get_non_merge_product"], [6, 2, 1, "", "get_product"], [6, 3, 1, "", "name"], [6, 3, 1, "", "param"], [6, 2, 1, "", "prepare"], [6, 3, 1, "", "prod_id"]], "ELDAmwl.backscatter.common.params": [[6, 1, 1, "", "BackscatterParams"], [6, 1, 1, "", "IterBscParams"]], "ELDAmwl.backscatter.common.params.BackscatterParams": [[6, 2, 1, "", "add_signal_role"], [6, 2, 1, "", "from_db"], [6, 2, 1, "", "to_meta_ds_dict"]], "ELDAmwl.backscatter.common.params.IterBscParams": [[6, 3, 1, "", "conv_crit"], [6, 2, 1, "", "from_db"], [6, 3, 1, "", "max_iteration_count"], [6, 3, 1, "", "ram_bsc_method"], [6, 2, 1, "", "to_meta_ds_dict"]], "ELDAmwl.backscatter.common.product": [[6, 1, 1, "", "Backscatters"]], "ELDAmwl.backscatter.common.product.Backscatters": [[6, 4, 1, "", "bsc_ratio"], [6, 3, 1, "", "calibr_window"], [6, 2, 1, "", "init"], [6, 2, 1, "", "to_meta_ds_dict"]], "ELDAmwl.backscatter.common.vertical_resolution": [[8, 0, 0, "-", "operation"]], "ELDAmwl.backscatter.common.vertical_resolution.operation": [[8, 1, 1, "", "ElastBscEffBinRes"], [8, 1, 1, "", "ElastBscUsedBinRes"], [8, 1, 1, "", "RamBscEffBinRes"], [8, 1, 1, "", "RamBscUsedBinRes"], [8, 1, 1, "", "SavGolayEffBinRes"], [8, 1, 1, "", "SavGolayUsedBinRes"]], "ELDAmwl.backscatter.common.vertical_resolution.operation.ElastBscEffBinRes": [[8, 2, 1, "", "get_classname_from_db"], [8, 3, 1, "", "name"], [8, 3, 1, "", "prod_id"]], "ELDAmwl.backscatter.common.vertical_resolution.operation.ElastBscUsedBinRes": [[8, 2, 1, "", "get_classname_from_db"], [8, 3, 1, "", "name"], [8, 3, 1, "", "prod_id"]], "ELDAmwl.backscatter.common.vertical_resolution.operation.RamBscEffBinRes": [[8, 2, 1, "", "get_classname_from_db"], [8, 3, 1, "", "name"], [8, 3, 1, "", "prod_id"]], "ELDAmwl.backscatter.common.vertical_resolution.operation.RamBscUsedBinRes": [[8, 2, 1, "", "get_classname_from_db"], [8, 3, 1, "", "name"], [8, 3, 1, "", "prod_id"]], "ELDAmwl.backscatter.common.vertical_resolution.operation.SavGolayEffBinRes": [[8, 3, 1, "", "name"], [8, 2, 1, "", "run"]], "ELDAmwl.backscatter.common.vertical_resolution.operation.SavGolayUsedBinRes": [[8, 3, 1, "", "name"], [8, 2, 1, "", "run"]], "ELDAmwl.backscatter.elastic": [[9, 0, 0, "-", "operation"], [9, 0, 0, "-", "params"], [9, 0, 0, "-", "product"], [10, 0, 0, "-", "tools"]], "ELDAmwl.backscatter.elastic.operation": [[9, 1, 1, "", "CalcElastBackscatter"], [9, 1, 1, "", "CalcElastBackscatterDefault"], [9, 1, 1, "", "ElastBackscatterFactory"], [9, 1, 1, "", "ElastBackscatterFactoryDefault"]], "ELDAmwl.backscatter.elastic.operation.CalcElastBackscatter": [[9, 2, 1, "", "get_classname_from_db"], [9, 3, 1, "", "name"]], "ELDAmwl.backscatter.elastic.operation.CalcElastBackscatterDefault": [[9, 3, 1, "", "bsc_params"], [9, 3, 1, "", "calc_routine"], [9, 3, 1, "", "calibr_window"], [9, 3, 1, "", "elast_sig"], [9, 3, 1, "", "name"], [9, 3, 1, "", "result"], [9, 2, 1, "", "run"]], "ELDAmwl.backscatter.elastic.operation.ElastBackscatterFactory": [[9, 2, 1, "", "get_classname_from_db"], [9, 3, 1, "", "name"]], "ELDAmwl.backscatter.elastic.operation.ElastBackscatterFactoryDefault": [[9, 2, 1, "", "get_non_merge_product"], [9, 3, 1, "", "name"], [9, 2, 1, "", "prepare"]], "ELDAmwl.backscatter.elastic.params": [[9, 1, 1, "", "ElastBscParams"]], "ELDAmwl.backscatter.elastic.params.ElastBscParams": [[9, 2, 1, "", "from_db"], [9, 2, 1, "", "to_meta_ds_dict"]], "ELDAmwl.backscatter.elastic.product": [[9, 1, 1, "", "ElastBackscatters"]], "ELDAmwl.backscatter.elastic.product.ElastBackscatters": [[9, 2, 1, "", "init"], [9, 2, 1, "", "to_meta_ds_dict"]], "ELDAmwl.backscatter.elastic.tools": [[10, 0, 0, "-", "operation"]], "ELDAmwl.backscatter.elastic.tools.operation": [[10, 1, 1, "", "CalcBscProfileIter"], [10, 1, 1, "", "CalcBscProfileKF"], [10, 1, 1, "", "CalcElastBscProfile"]], "ELDAmwl.backscatter.elastic.tools.operation.CalcBscProfileKF": [[10, 3, 1, "", "calibration"], [10, 3, 1, "", "elast_sig"], [10, 3, 1, "", "error_params"], [10, 3, 1, "", "name"], [10, 3, 1, "", "range_axis"], [10, 3, 1, "", "rayl_scat"], [10, 2, 1, "", "run"]], "ELDAmwl.backscatter.elastic.tools.operation.CalcElastBscProfile": [[10, 2, 1, "", "get_classname_from_db"]], "ELDAmwl.backscatter.raman": [[11, 0, 0, "-", "operation"], [11, 0, 0, "-", "params"], [11, 0, 0, "-", "product"], [12, 0, 0, "-", "tools"]], "ELDAmwl.backscatter.raman.operation": [[11, 1, 1, "", "CalcRamanBackscatter"], [11, 1, 1, "", "CalcRamanBackscatterDefault"], [11, 1, 1, "", "RamanBackscatterFactory"], [11, 1, 1, "", "RamanBackscatterFactoryDefault"]], "ELDAmwl.backscatter.raman.operation.CalcRamanBackscatter": [[11, 2, 1, "", "get_classname_from_db"], [11, 3, 1, "", "name"]], "ELDAmwl.backscatter.raman.operation.CalcRamanBackscatterDefault": [[11, 3, 1, "", "bsc_params"], [11, 3, 1, "", "calc_routine"], [11, 3, 1, "", "calibr_window"], [11, 3, 1, "", "name"], [11, 3, 1, "", "result"], [11, 2, 1, "", "run"], [11, 3, 1, "", "sigratio"]], "ELDAmwl.backscatter.raman.operation.RamanBackscatterFactory": [[11, 2, 1, "", "get_classname_from_db"], [11, 3, 1, "", "name"]], "ELDAmwl.backscatter.raman.operation.RamanBackscatterFactoryDefault": [[11, 2, 1, "", "get_non_merge_product"], [11, 3, 1, "", "name"], [11, 2, 1, "", "prepare"], [11, 3, 1, "", "raman_sig"], [11, 3, 1, "", "sig_ratio"]], "ELDAmwl.backscatter.raman.params": [[11, 1, 1, "", "RamanBscParams"]], "ELDAmwl.backscatter.raman.params.RamanBscParams": [[11, 2, 1, "", "add_signal_role"], [11, 2, 1, "", "from_db"], [11, 2, 1, "", "to_meta_ds_dict"]], "ELDAmwl.backscatter.raman.product": [[11, 1, 1, "", "RamanBackscatters"]], "ELDAmwl.backscatter.raman.product.RamanBackscatters": [[11, 2, 1, "", "init"]], "ELDAmwl.backscatter.raman.tools": [[12, 0, 0, "-", "operation"]], "ELDAmwl.backscatter.raman.tools.operation": [[12, 1, 1, "", "CalcRamanBscProfile"], [12, 1, 1, "", "CalcRamanBscProfileViaBR"]], "ELDAmwl.backscatter.raman.tools.operation.CalcRamanBscProfile": [[12, 2, 1, "", "get_classname_from_db"], [12, 3, 1, "", "name"], [12, 3, 1, "", "prod_id"]], "ELDAmwl.backscatter.raman.tools.operation.CalcRamanBscProfileViaBR": [[12, 3, 1, "", "calibration"], [12, 3, 1, "", "error_params"], [12, 3, 1, "", "name"], [12, 2, 1, "", "run"], [12, 3, 1, "", "sigratio"]], "ELDAmwl.bases": [[13, 0, 0, "-", "base"], [13, 0, 0, "-", "columns"], [13, 0, 0, "-", "factory"]], "ELDAmwl.bases.base": [[13, 1, 1, "", "DataPoint"], [13, 1, 1, "", "ELDABase"], [13, 1, 1, "", "Params"]], "ELDAmwl.bases.base.DataPoint": [[13, 2, 1, "", "from_data"], [13, 2, 1, "", "from_nc_file"], [13, 4, 1, "", "rel_error"], [13, 4, 1, "", "stat_error"], [13, 4, 1, "", "sys_error"], [13, 4, 1, "", "value"]], "ELDAmwl.bases.base.ELDABase": [[13, 4, 1, "", "logger"]], "ELDAmwl.bases.base.Params": [[13, 4, 1, "", "db_func"], [13, 4, 1, "", "logger"]], "ELDAmwl.bases.columns": [[13, 1, 1, "", "Columns"]], "ELDAmwl.bases.columns.Columns": [[13, 4, 1, "", "altitude"], [13, 2, 1, "", "angle_to_time_dependent_var"], [13, 4, 1, "", "binres"], [13, 4, 1, "", "data"], [13, 4, 1, "", "err"], [13, 2, 1, "", "first_valid_bin"], [13, 4, 1, "", "height"], [13, 2, 1, "", "last_valid_bin"], [13, 4, 1, "", "logger"], [13, 4, 1, "", "num_levels"], [13, 4, 1, "", "num_times"], [13, 4, 1, "", "qf"], [13, 4, 1, "", "rel_err"], [13, 2, 1, "", "set_invalid_point"]], "ELDAmwl.bases.factory": [[13, 1, 1, "", "BaseOperation"], [13, 1, 1, "", "BaseOperationFactory"]], "ELDAmwl.bases.factory.BaseOperation": [[13, 4, 1, "", "cfg"], [13, 4, 1, "", "db_func"], [13, 2, 1, "", "init"], [13, 4, 1, "", "logger"], [13, 4, 1, "", "params"]], "ELDAmwl.bases.factory.BaseOperationFactory": [[13, 4, 1, "", "db_func"], [13, 2, 1, "", "get_class"], [13, 2, 1, "", "get_classname_from_db"], [13, 3, 1, "", "name"]], "ELDAmwl.component": [[14, 0, 0, "-", "interface"], [14, 0, 0, "-", "plugins"], [14, 0, 0, "-", "registry"]], "ELDAmwl.component.plugins": [[14, 5, 1, "", "register_plugins"]], "ELDAmwl.component.registry": [[14, 1, 1, "", "FactoryRegistry"], [14, 1, 1, "", "Registry"]], "ELDAmwl.component.registry.FactoryRegistry": [[14, 2, 1, "", "find_class_by_name"], [14, 2, 1, "", "register_class"]], "ELDAmwl.component.registry.Registry": [[14, 2, 1, "", "find_class_by_name"], [14, 2, 1, "", "get_factory_registration"], [14, 2, 1, "", "register_class"], [14, 2, 1, "", "status"]], "ELDAmwl.config": [[3, 5, 1, "", "register_config"]], "ELDAmwl.database": [[15, 0, 0, "-", "db"], [15, 0, 0, "-", "db_functions"], [16, 0, 0, "-", "tables"]], "ELDAmwl.database.db": [[15, 1, 1, "", "DBUtils"]], "ELDAmwl.database.db.DBUtils": [[15, 4, 1, "", "cfg"], [15, 3, 1, "", "engine"], [15, 2, 1, "", "get_connect_string"], [15, 2, 1, "", "init_engine"], [15, 4, 1, "", "logger"], [15, 3, 1, "", "session"], [15, 2, 1, "", "test_db"]], "ELDAmwl.database.db_functions": [[15, 1, 1, "", "DBFunc"], [15, 5, 1, "", "register_db_func"]], "ELDAmwl.database.db_functions.DBFunc": [[15, 2, 1, "", "db_log"], [15, 2, 1, "", "get_basic_products_query"], [15, 2, 1, "", "get_bsc_cal_params_query"], [15, 2, 1, "", "get_derived_products_query"], [15, 2, 1, "", "get_extended_general_params_query"], [15, 2, 1, "", "get_mc_params_query"], [15, 2, 1, "", "get_products_resolution_query"], [15, 2, 1, "", "get_quality_params_query"], [15, 2, 1, "", "get_smooth_params_query"], [15, 2, 1, "", "read_algorithm"], [15, 2, 1, "", "read_algorithm_options"], [15, 2, 1, "", "read_angstroem_exp_params"], [15, 2, 1, "", "read_classname"], [15, 2, 1, "", "read_effbin_algorithm"], [15, 2, 1, "", "read_elast_bsc_algorithm"], [15, 2, 1, "", "read_elast_bsc_effbin_algorithm"], [15, 2, 1, "", "read_elast_bsc_method_id"], [15, 2, 1, "", "read_elast_bsc_params"], [15, 2, 1, "", "read_elast_bsc_smooth_method_id"], [15, 2, 1, "", "read_elast_bsc_usedbin_algorithm"], [15, 2, 1, "", "read_ext_effbin_algorithm"], [15, 2, 1, "", "read_ext_method_id"], [15, 2, 1, "", "read_ext_usedbin_algorithm"], [15, 2, 1, "", "read_extinction_algorithm"], [15, 2, 1, "", "read_extinction_params"], [15, 2, 1, "", "read_full_overlap"], [15, 2, 1, "", "read_iter_bsc_params"], [15, 2, 1, "", "read_lidar_ratio_params"], [15, 2, 1, "", "read_mwl_product_id"], [15, 2, 1, "", "read_raman_bsc_algorithm"], [15, 2, 1, "", "read_raman_bsc_effbin_algorithm"], [15, 2, 1, "", "read_raman_bsc_method_id"], [15, 2, 1, "", "read_raman_bsc_params"], [15, 2, 1, "", "read_raman_bsc_smooth_method_id"], [15, 2, 1, "", "read_raman_bsc_usedbin_algorithm"], [15, 2, 1, "", "read_smooth_routine"], [15, 2, 1, "", "read_system_id"], [15, 2, 1, "", "read_usedbin_algorithm"], [15, 2, 1, "", "register_mwl_file_to_db"], [15, 2, 1, "", "write_lidar_constant_in_db"]], "ELDAmwl.database.tables": [[16, 0, 0, "-", "backscatter"], [16, 0, 0, "-", "channels"], [16, 0, 0, "-", "db_base"], [16, 0, 0, "-", "eldamwl_class_names"], [16, 0, 0, "-", "eldamwl_products"], [16, 0, 0, "-", "extinction"], [16, 0, 0, "-", "general"], [16, 0, 0, "-", "lidar_constants"], [16, 0, 0, "-", "lidar_ratio"], [16, 0, 0, "-", "measurements"], [16, 0, 0, "-", "system_product"]], "ELDAmwl.database.tables.backscatter": [[16, 1, 1, "", "BscCalibrLowestHeight"], [16, 1, 1, "", "BscCalibrMethod"], [16, 1, 1, "", "BscCalibrRangeSearchMethod"], [16, 1, 1, "", "BscCalibrUpperHeight"], [16, 1, 1, "", "BscCalibrValue"], [16, 1, 1, "", "BscCalibrWindow"], [16, 1, 1, "", "BscMethod"], [16, 1, 1, "", "ElastBackscatterOption"], [16, 1, 1, "", "ElastBscMethod"], [16, 1, 1, "", "IterBackscatterOption"], [16, 1, 1, "", "LRFile"], [16, 1, 1, "", "RamanBackscatterOption"], [16, 1, 1, "", "RamanBscMethod"]], "ELDAmwl.database.tables.backscatter.BscCalibrLowestHeight": [[16, 3, 1, "", "ID"], [16, 3, 1, "", "height"]], "ELDAmwl.database.tables.backscatter.BscCalibrMethod": [[16, 3, 1, "", "ID"], [16, 3, 1, "", "method"]], "ELDAmwl.database.tables.backscatter.BscCalibrRangeSearchMethod": [[16, 3, 1, "", "ID"], [16, 3, 1, "", "method_id"]], "ELDAmwl.database.tables.backscatter.BscCalibrUpperHeight": [[16, 3, 1, "", "ID"], [16, 3, 1, "", "height"]], "ELDAmwl.database.tables.backscatter.BscCalibrValue": [[16, 3, 1, "", "ID"], [16, 3, 1, "", "bsc_ratio"]], "ELDAmwl.database.tables.backscatter.BscCalibrWindow": [[16, 3, 1, "", "ID"], [16, 3, 1, "", "width"]], "ELDAmwl.database.tables.backscatter.BscMethod": [[16, 3, 1, "", "ID"], [16, 3, 1, "", "method"]], "ELDAmwl.database.tables.backscatter.ElastBackscatterOption": [[16, 3, 1, "", "ID"], [16, 3, 1, "", "bsc_calibration_lowestheight_id"], [16, 3, 1, "", "bsc_calibration_range_search_method_id"], [16, 3, 1, "", "bsc_calibration_upperheight_id"], [16, 3, 1, "", "bsc_calibration_value_id"], [16, 3, 1, "", "bsc_calibration_window_id"], [16, 3, 1, "", "elast_bsc_method_id"], [16, 3, 1, "", "error_method_id"], [16, 3, 1, "", "fixed_lr"], [16, 3, 1, "", "fixed_lr_error"], [16, 3, 1, "", "iter_bsc_options_id"], [16, 3, 1, "", "lr_input_method_id"], [16, 3, 1, "", "product_id"], [16, 3, 1, "", "smooth_method_id"]], "ELDAmwl.database.tables.backscatter.ElastBscMethod": [[16, 3, 1, "", "ID"], [16, 3, 1, "", "method"]], "ELDAmwl.database.tables.backscatter.IterBackscatterOption": [[16, 3, 1, "", "ID"], [16, 3, 1, "", "iter_conv_crit"], [16, 3, 1, "", "max_iteration_count"], [16, 3, 1, "", "ram_bsc_method_id"]], "ELDAmwl.database.tables.backscatter.LRFile": [[16, 3, 1, "", "ID"], [16, 3, 1, "", "filename"], [16, 3, 1, "", "hoi_stations_id"], [16, 3, 1, "", "interpolation_id"], [16, 3, 1, "", "start"], [16, 3, 1, "", "status"], [16, 3, 1, "", "stop"], [16, 3, 1, "", "submission_date"]], "ELDAmwl.database.tables.backscatter.RamanBackscatterOption": [[16, 3, 1, "", "ID"], [16, 3, 1, "", "bsc_calibration_lowestheight_id"], [16, 3, 1, "", "bsc_calibration_range_search_method_id"], [16, 3, 1, "", "bsc_calibration_upperheight_id"], [16, 3, 1, "", "bsc_calibration_value_id"], [16, 3, 1, "", "bsc_calibration_window_id"], [16, 3, 1, "", "error_method_id"], [16, 3, 1, "", "product_id"], [16, 3, 1, "", "ram_bsc_method_id"], [16, 3, 1, "", "smooth_method_id"]], "ELDAmwl.database.tables.backscatter.RamanBscMethod": [[16, 3, 1, "", "ID"], [16, 3, 1, "", "method"]], "ELDAmwl.database.tables.channels": [[16, 1, 1, "", "Channels"], [16, 1, 1, "", "ProductChannels"], [16, 1, 1, "", "Telescopes"]], "ELDAmwl.database.tables.channels.Channels": [[16, 3, 1, "", "FOV"], [16, 3, 1, "", "ID"], [16, 3, 1, "", "IF_FWHM"], [16, 3, 1, "", "IF_center"], [16, 3, 1, "", "background_mode_id"], [16, 3, 1, "", "dead_time"], [16, 3, 1, "", "dead_time_corr_type_id"], [16, 3, 1, "", "detection_mode_id"], [16, 3, 1, "", "emission_wavelength"], [16, 3, 1, "", "laser_id"], [16, 3, 1, "", "name"], [16, 3, 1, "", "raw_range_resolution"], [16, 3, 1, "", "scat_mechanism_id"], [16, 3, 1, "", "signal_type_id"], [16, 3, 1, "", "string_ID"], [16, 3, 1, "", "telescope_id"], [16, 3, 1, "", "trigger_delay"], [16, 3, 1, "", "trigger_delay_interp_id"]], "ELDAmwl.database.tables.channels.ProductChannels": [[16, 3, 1, "", "ID"], [16, 3, 1, "", "channel_id"], [16, 3, 1, "", "prod_id"], [16, 3, 1, "", "signal_type_id"]], "ELDAmwl.database.tables.channels.Telescopes": [[16, 3, 1, "", "ID"], [16, 3, 1, "", "diameter"], [16, 3, 1, "", "focal_length"], [16, 3, 1, "", "full_overlap_height_m"], [16, 3, 1, "", "locked"], [16, 3, 1, "", "station_id"], [16, 3, 1, "", "type"]], "ELDAmwl.database.tables.eldamwl_class_names": [[16, 1, 1, "", "EldamwlClassNames"]], "ELDAmwl.database.tables.eldamwl_class_names.EldamwlClassNames": [[16, 3, 1, "", "ID"], [16, 3, 1, "", "classname"], [16, 3, 1, "", "method"]], "ELDAmwl.database.tables.eldamwl_products": [[16, 1, 1, "", "EldamwlProducts"]], "ELDAmwl.database.tables.eldamwl_products.EldamwlProducts": [[16, 3, 1, "", "ID"], [16, 3, 1, "", "filename"], [16, 3, 1, "", "inscribed_at"], [16, 3, 1, "", "measurements_id"], [16, 3, 1, "", "product_id"], [16, 3, 1, "", "scc_version_id"]], "ELDAmwl.database.tables.extinction": [[16, 1, 1, "", "ExtMethod"], [16, 1, 1, "", "ExtinctionOption"], [16, 1, 1, "", "OverlapFile"]], "ELDAmwl.database.tables.extinction.ExtMethod": [[16, 3, 1, "", "ID"], [16, 3, 1, "", "method"], [16, 3, 1, "", "method_for_getting_effective_binres"], [16, 3, 1, "", "method_for_getting_used_binres"]], "ELDAmwl.database.tables.extinction.ExtinctionOption": [[16, 3, 1, "", "ID"], [16, 3, 1, "", "angstroem"], [16, 3, 1, "", "error_method_id"], [16, 3, 1, "", "ext_method_id"], [16, 3, 1, "", "overlap_file_id"], [16, 3, 1, "", "product_id"]], "ELDAmwl.database.tables.extinction.OverlapFile": [[16, 3, 1, "", "ID"], [16, 3, 1, "", "filename"], [16, 3, 1, "", "hoi_stations_id"], [16, 3, 1, "", "interpolation_id"], [16, 3, 1, "", "start"], [16, 3, 1, "", "status"], [16, 3, 1, "", "stop"], [16, 3, 1, "", "submission_date"]], "ELDAmwl.database.tables.general": [[16, 1, 1, "", "ELDAmwlExitCodes"], [16, 1, 1, "", "ELDAmwlLogs"]], "ELDAmwl.database.tables.general.ELDAmwlExitCodes": [[16, 3, 1, "", "ID"], [16, 3, 1, "", "description"]], "ELDAmwl.database.tables.general.ELDAmwlLogs": [[16, 3, 1, "", "ID"], [16, 3, 1, "", "datetime"], [16, 3, 1, "", "level"], [16, 3, 1, "", "measurements_id"], [16, 3, 1, "", "message"], [16, 3, 1, "", "module_version"], [16, 3, 1, "", "product_id"]], "ELDAmwl.database.tables.lidar_constants": [[16, 1, 1, "", "LidarConstants"]], "ELDAmwl.database.tables.lidar_constants.LidarConstants": [[16, 3, 1, "", "ELDA_version"], [16, 3, 1, "", "ID"], [16, 3, 1, "", "InscribedAt"], [16, 3, 1, "", "calibr_factor"], [16, 3, 1, "", "calibr_factor_stat_err"], [16, 3, 1, "", "calibr_factor_sys_err"], [16, 3, 1, "", "calibr_window_bottom"], [16, 3, 1, "", "calibr_window_top"], [16, 3, 1, "", "channel_id"], [16, 3, 1, "", "detection_wavelength"], [16, 3, 1, "", "filename"], [16, 3, 1, "", "hoi_system_id"], [16, 3, 1, "", "is_latest_value"], [16, 3, 1, "", "lidar_const"], [16, 3, 1, "", "lidar_const_stat_err"], [16, 3, 1, "", "lidar_const_sys_err"], [16, 3, 1, "", "measurements_id"], [16, 3, 1, "", "product_id"], [16, 3, 1, "", "profile_end_time"], [16, 3, 1, "", "profile_start_time"]], "ELDAmwl.database.tables.lidar_ratio": [[16, 1, 1, "", "ExtBscOption"]], "ELDAmwl.database.tables.lidar_ratio.ExtBscOption": [[16, 3, 1, "", "ID"], [16, 3, 1, "", "error_method_id"], [16, 3, 1, "", "extinction_options_product_id"], [16, 3, 1, "", "min_BscRatio_for_LR"], [16, 3, 1, "", "product_id"], [16, 3, 1, "", "raman_backscatter_options_product_id"]], "ELDAmwl.database.tables.measurements": [[16, 1, 1, "", "Measurements"]], "ELDAmwl.database.tables.measurements.Measurements": [[16, 3, 1, "", "ID"], [16, 3, 1, "", "calipso"], [16, 3, 1, "", "cirrus"], [16, 3, 1, "", "climatol"], [16, 3, 1, "", "cloudmask"], [16, 3, 1, "", "cloudmask_current_product_id"], [16, 3, 1, "", "cloudmask_return_code"], [16, 3, 1, "", "comment"], [16, 3, 1, "", "creation_auth_user_ID"], [16, 3, 1, "", "creation_date"], [16, 3, 1, "", "dicycles"], [16, 3, 1, "", "elda"], [16, 3, 1, "", "elda_current_product_id"], [16, 3, 1, "", "elda_return_code"], [16, 3, 1, "", "eldec"], [16, 3, 1, "", "eldec_current_product_id"], [16, 3, 1, "", "eldec_return_code"], [16, 3, 1, "", "elic"], [16, 3, 1, "", "elic_current_product_id"], [16, 3, 1, "", "elic_return_code"], [16, 3, 1, "", "elpp"], [16, 3, 1, "", "elpp_current_product_id"], [16, 3, 1, "", "elpp_return_code"], [16, 3, 1, "", "elquick"], [16, 3, 1, "", "elquick_current_product_id"], [16, 3, 1, "", "elquick_return_code"], [16, 3, 1, "", "etna"], [16, 3, 1, "", "forfires"], [16, 3, 1, "", "hirelpp"], [16, 3, 1, "", "hirelpp_current_product_id"], [16, 3, 1, "", "hirelpp_return_code"], [16, 3, 1, "", "hoi_stations_id"], [16, 3, 1, "", "hoi_system_id"], [16, 3, 1, "", "interface_return_code"], [16, 3, 1, "", "lidar_ratio_file_id"], [16, 3, 1, "", "num_id"], [16, 3, 1, "", "overlap_file_id"], [16, 3, 1, "", "photosmog"], [16, 3, 1, "", "rurban"], [16, 3, 1, "", "sahadust"], [16, 3, 1, "", "sounding_file_id"], [16, 3, 1, "", "start"], [16, 3, 1, "", "stop"], [16, 3, 1, "", "stratos"], [16, 3, 1, "", "update_auth_user_ID"], [16, 3, 1, "", "updated_date"], [16, 3, 1, "", "upload"]], "ELDAmwl.database.tables.system_product": [[16, 1, 1, "", "ErrorThresholds"], [16, 1, 1, "", "MCOption"], [16, 1, 1, "", "MWLproductProduct"], [16, 1, 1, "", "PreProcOptions"], [16, 1, 1, "", "PreparedSignalFile"], [16, 1, 1, "", "ProductTypes"], [16, 1, 1, "", "Products"], [16, 1, 1, "", "SmoothMethod"], [16, 1, 1, "", "SmoothOptions"], [16, 1, 1, "", "SmoothTypes"], [16, 1, 1, "", "SystemProduct"]], "ELDAmwl.database.tables.system_product.ErrorThresholds": [[16, 3, 1, "", "ID"], [16, 3, 1, "", "name"], [16, 3, 1, "", "value"]], "ELDAmwl.database.tables.system_product.MCOption": [[16, 3, 1, "", "ID"], [16, 3, 1, "", "iteration_count"], [16, 3, 1, "", "product_id"]], "ELDAmwl.database.tables.system_product.MWLproductProduct": [[16, 3, 1, "", "ID"], [16, 3, 1, "", "create_with_hr"], [16, 3, 1, "", "create_with_lr"], [16, 3, 1, "", "mwl_product_id"], [16, 3, 1, "", "product_id"]], "ELDAmwl.database.tables.system_product.PreProcOptions": [[16, 3, 1, "", "ID"], [16, 3, 1, "", "interpolation_id"], [16, 3, 1, "", "max_height"], [16, 3, 1, "", "min_height"], [16, 3, 1, "", "preprocessing_integration_time"], [16, 3, 1, "", "preprocessing_vertical_resolution"], [16, 3, 1, "", "product_id"]], "ELDAmwl.database.tables.system_product.PreparedSignalFile": [[16, 3, 1, "", "ID"], [16, 3, 1, "", "filename"], [16, 3, 1, "", "measurements_id"], [16, 3, 1, "", "product_id"], [16, 3, 1, "", "scc_version_id"]], "ELDAmwl.database.tables.system_product.ProductTypes": [[16, 3, 1, "", "ID"], [16, 3, 1, "", "description"], [16, 3, 1, "", "is_basic_product"], [16, 3, 1, "", "is_in_mwl_products"], [16, 3, 1, "", "is_mwl_only_product"], [16, 3, 1, "", "nc_file_id"], [16, 3, 1, "", "processor_ID"], [16, 3, 1, "", "product_type"]], "ELDAmwl.database.tables.system_product.Products": [[16, 3, 1, "", "ID"], [16, 3, 1, "", "hirelpp_product_option_id"], [16, 3, 1, "", "hoi_stations_id"], [16, 3, 1, "", "prod_type_id"], [16, 3, 1, "", "usecase_id"]], "ELDAmwl.database.tables.system_product.SmoothMethod": [[16, 3, 1, "", "ID"], [16, 3, 1, "", "method"], [16, 3, 1, "", "method_for_getting_effective_binres"], [16, 3, 1, "", "method_for_getting_used_binres"]], "ELDAmwl.database.tables.system_product.SmoothOptions": [[16, 3, 1, "", "ID"], [16, 3, 1, "", "detection_limit"], [16, 3, 1, "", "highrange_error_threshold_id"], [16, 3, 1, "", "highres_highrange_integration_time"], [16, 3, 1, "", "highres_highrange_vertical_resolution"], [16, 3, 1, "", "highres_lowrange_integration_time"], [16, 3, 1, "", "highres_lowrange_vertical_resolution"], [16, 3, 1, "", "lowrange_error_threshold_id"], [16, 3, 1, "", "lowres_highrange_integration_time"], [16, 3, 1, "", "lowres_highrange_vertical_resolution"], [16, 3, 1, "", "lowres_lowrange_integration_time"], [16, 3, 1, "", "lowres_lowrange_vertical_resolution"], [16, 3, 1, "", "product_id"], [16, 3, 1, "", "smooth_type_id"], [16, 3, 1, "", "transition_zone_from"], [16, 3, 1, "", "transition_zone_to"]], "ELDAmwl.database.tables.system_product.SmoothTypes": [[16, 3, 1, "", "ID"], [16, 3, 1, "", "smooth_type"]], "ELDAmwl.database.tables.system_product.SystemProduct": [[16, 3, 1, "", "ID"], [16, 3, 1, "", "product_id"], [16, 3, 1, "", "system_id"]], "ELDAmwl.depol": [[17, 0, 0, "-", "operation"], [17, 0, 0, "-", "params"], [17, 0, 0, "-", "product"], [18, 0, 0, "-", "vertical_resolution"]], "ELDAmwl.depol.operation": [[17, 1, 1, "", "VLRDFactory"]], "ELDAmwl.depol.operation.VLRDFactory": [[17, 2, 1, "", "get_classname_from_db"], [17, 3, 1, "", "name"]], "ELDAmwl.depol.params": [[17, 1, 1, "", "VLDRParams"]], "ELDAmwl.depol.params.VLDRParams": [[17, 2, 1, "", "add_signal_role"], [17, 2, 1, "", "from_db"], [17, 2, 1, "", "to_meta_ds_dict"]], "ELDAmwl.depol.product": [[17, 1, 1, "", "VLDRs"]], "ELDAmwl.depol.product.VLDRs": [[17, 2, 1, "", "init"], [17, 2, 1, "", "to_meta_ds_dict"]], "ELDAmwl.depol.vertical_resolution": [[18, 0, 0, "-", "operation"]], "ELDAmwl.depol.vertical_resolution.operation": [[18, 1, 1, "", "VLDREffBinRes"], [18, 1, 1, "", "VLDRUsedBinRes"]], "ELDAmwl.depol.vertical_resolution.operation.VLDREffBinRes": [[18, 2, 1, "", "get_classname_from_db"], [18, 3, 1, "", "name"], [18, 3, 1, "", "prod_id"]], "ELDAmwl.depol.vertical_resolution.operation.VLDRUsedBinRes": [[18, 2, 1, "", "get_classname_from_db"], [18, 3, 1, "", "name"], [18, 3, 1, "", "prod_id"]], "ELDAmwl.elda_mwl": [[19, 0, 0, "-", "elda_mwl"], [19, 0, 0, "-", "get_basic_products"], [19, 0, 0, "-", "get_derived_products"], [19, 0, 0, "-", "get_lidar_constants"], [19, 0, 0, "-", "mwl_products"]], "ELDAmwl.elda_mwl.elda_mwl": [[19, 1, 1, "", "MeasurementParams"], [19, 1, 1, "", "RunELDAmwl"], [19, 5, 1, "", "register_params"]], "ELDAmwl.elda_mwl.elda_mwl.MeasurementParams": [[19, 2, 1, "", "all_basic_products_of_wl"], [19, 2, 1, "", "all_bsc_products"], [19, 2, 1, "", "all_products_of_res"], [19, 2, 1, "", "angstroem_exp_products"], [19, 2, 1, "", "basic_products"], [19, 2, 1, "", "elast_bsc_products"], [19, 2, 1, "", "extinction_products"], [19, 2, 1, "", "filtered_list"], [19, 2, 1, "", "get_products_resolution"], [19, 2, 1, "", "lidar_ratio_products"], [19, 2, 1, "", "load_from_db"], [19, 2, 1, "", "prod_id"], [19, 2, 1, "", "prod_param"], [19, 2, 1, "", "prod_params"], [19, 2, 1, "", "prod_types"], [19, 2, 1, "", "raman_bsc_products"], [19, 2, 1, "", "read_product_list"], [19, 2, 1, "", "vldr_products"], [19, 2, 1, "", "wavelengths"]], "ELDAmwl.elda_mwl.elda_mwl.RunELDAmwl": [[19, 4, 1, "", "data"], [19, 2, 1, "", "get_basic_products"], [19, 2, 1, "", "get_derived_products"], [19, 2, 1, "", "get_lidar_constants"], [19, 2, 1, "", "get_product_matrix"], [19, 2, 1, "", "prepare_signals"], [19, 2, 1, "", "quality_control"], [19, 2, 1, "", "read_elpp_data"], [19, 2, 1, "", "read_tasks"], [19, 2, 1, "", "write_mwl_output"], [19, 2, 1, "", "write_single_output"]], "ELDAmwl.elda_mwl.get_basic_products": [[19, 1, 1, "", "GetBasicProducts"], [19, 1, 1, "", "GetBasicProductsDefault"]], "ELDAmwl.elda_mwl.get_basic_products.GetBasicProducts": [[19, 2, 1, "", "get_classname_from_db"], [19, 3, 1, "", "name"], [19, 3, 1, "", "smooth_type"]], "ELDAmwl.elda_mwl.get_basic_products.GetBasicProductsDefault": [[19, 3, 1, "", "bsc_calibr_window"], [19, 3, 1, "", "data_storage"], [19, 2, 1, "", "find_common_smooth"], [19, 2, 1, "", "get_auto_smooth_products"], [19, 2, 1, "", "get_binres_common_smooth"], [19, 2, 1, "", "get_common_smooth_products"], [19, 2, 1, "", "get_elast_bsc_fixed_smooth"], [19, 2, 1, "", "get_extinctions_auto_smooth"], [19, 2, 1, "", "get_extinctions_fixed_smooth"], [19, 2, 1, "", "get_raman_bsc_auto_smooth"], [19, 2, 1, "", "get_raman_bsc_fixed_smooth"], [19, 2, 1, "", "get_vldr_fixed_smooth"], [19, 3, 1, "", "name"], [19, 3, 1, "", "product_params"], [19, 2, 1, "", "run"], [19, 3, 1, "", "smooth_type"]], "ELDAmwl.elda_mwl.get_derived_products": [[19, 1, 1, "", "GetDerivedProducts"], [19, 1, 1, "", "GetDerivedProductsDefault"]], "ELDAmwl.elda_mwl.get_derived_products.GetDerivedProducts": [[19, 2, 1, "", "get_classname_from_db"], [19, 3, 1, "", "name"]], "ELDAmwl.elda_mwl.get_derived_products.GetDerivedProductsDefault": [[19, 2, 1, "", "get_derived_products"], [19, 2, 1, "", "get_lidar_ratios"], [19, 3, 1, "", "product_params"], [19, 2, 1, "", "run"]], "ELDAmwl.elda_mwl.get_lidar_constants": [[19, 1, 1, "", "GetLidarConstants"], [19, 1, 1, "", "GetLidarConstantsDefault"]], "ELDAmwl.elda_mwl.get_lidar_constants.GetLidarConstants": [[19, 2, 1, "", "get_classname_from_db"], [19, 3, 1, "", "name"]], "ELDAmwl.elda_mwl.get_lidar_constants.GetLidarConstantsDefault": [[19, 2, 1, "", "get_lidar_constants"], [19, 3, 1, "", "product_params"], [19, 2, 1, "", "run"]], "ELDAmwl.elda_mwl.mwl_products": [[19, 1, 1, "", "GetProductMatrix"], [19, 1, 1, "", "GetProductMatrixDefault"], [19, 1, 1, "", "QualityControl"], [19, 1, 1, "", "QualityControlDefault"]], "ELDAmwl.elda_mwl.mwl_products.GetProductMatrix": [[19, 2, 1, "", "get_classname_from_db"], [19, 3, 1, "", "name"]], "ELDAmwl.elda_mwl.mwl_products.GetProductMatrixDefault": [[19, 3, 1, "", "data_storage"], [19, 2, 1, "", "get_common_shape"], [19, 3, 1, "", "product_params"], [19, 2, 1, "", "run"], [19, 3, 1, "", "shape"]], "ELDAmwl.elda_mwl.mwl_products.QualityControl": [[19, 2, 1, "", "get_classname_from_db"], [19, 3, 1, "", "name"]], "ELDAmwl.elda_mwl.mwl_products.QualityControlDefault": [[19, 3, 1, "", "data_storage"], [19, 3, 1, "", "product_params"], [19, 2, 1, "", "run"]], "ELDAmwl.errors": [[20, 0, 0, "-", "error_codes"], [20, 0, 0, "-", "exceptions"]], "ELDAmwl.errors.exceptions": [[20, 6, 1, "", "BscCalParamsNotEqual"], [20, 6, 1, "", "CalRangeHigherThanValid"], [20, 6, 1, "", "CannotOpenELLPFile"], [20, 6, 1, "", "ConfigFileNotFound"], [20, 6, 1, "", "CouldNotFindProductsResolution"], [20, 6, 1, "", "CsvFileNotFound"], [20, 6, 1, "", "DBErrorTerminating"], [20, 6, 1, "", "DetectionLimitZero"], [20, 6, 1, "", "DifferentCloudMaskExists"], [20, 6, 1, "", "DifferentHeaderExists"], [20, 6, 1, "", "DifferentProductsResolution"], [20, 6, 1, "", "DifferentWlForLR"], [20, 6, 1, "", "ELDAmwlException"], [20, 6, 1, "", "ELPPFileNotFound"], [20, 6, 1, "", "FillTableFailed"], [20, 6, 1, "", "LogPathNotExists"], [20, 6, 1, "", "NOMCOptions"], [20, 6, 1, "", "NoBscCalOptions"], [20, 6, 1, "", "NoCalibrWindowFound"], [20, 6, 1, "", "NoValidDataPointsForCalibration"], [20, 6, 1, "", "NotEnoughMCIterations"], [20, 6, 1, "", "NotFoundInStorage"], [20, 6, 1, "", "OnlyOneOverrideAllowed"], [20, 6, 1, "", "ProductNotUnique"], [20, 6, 1, "", "SciPyWrapperAxisError"], [20, 6, 1, "", "SizeMismatch"], [20, 6, 1, "", "Terminating"], [20, 6, 1, "", "UseCaseNotImplemented"], [20, 6, 1, "", "WrongCommandLineParameter"]], "ELDAmwl.errors.exceptions.BscCalParamsNotEqual": [[20, 3, 1, "", "return_value"]], "ELDAmwl.errors.exceptions.CalRangeHigherThanValid": [[20, 3, 1, "", "return_value"]], "ELDAmwl.errors.exceptions.CannotOpenELLPFile": [[20, 3, 1, "", "return_value"]], "ELDAmwl.errors.exceptions.CouldNotFindProductsResolution": [[20, 3, 1, "", "return_value"]], "ELDAmwl.errors.exceptions.DBErrorTerminating": [[20, 3, 1, "", "return_value"]], "ELDAmwl.errors.exceptions.DetectionLimitZero": [[20, 3, 1, "", "return_value"]], "ELDAmwl.errors.exceptions.DifferentCloudMaskExists": [[20, 3, 1, "", "return_value"]], "ELDAmwl.errors.exceptions.DifferentHeaderExists": [[20, 3, 1, "", "return_value"]], "ELDAmwl.errors.exceptions.DifferentProductsResolution": [[20, 3, 1, "", "return_value"]], "ELDAmwl.errors.exceptions.DifferentWlForLR": [[20, 3, 1, "", "return_value"]], "ELDAmwl.errors.exceptions.ELDAmwlException": [[20, 3, 1, "", "prod_id"], [20, 3, 1, "", "return_value"]], "ELDAmwl.errors.exceptions.ELPPFileNotFound": [[20, 3, 1, "", "return_value"]], "ELDAmwl.errors.exceptions.LogPathNotExists": [[20, 3, 1, "", "return_value"]], "ELDAmwl.errors.exceptions.NOMCOptions": [[20, 3, 1, "", "return_value"]], "ELDAmwl.errors.exceptions.NoBscCalOptions": [[20, 3, 1, "", "return_value"]], "ELDAmwl.errors.exceptions.NoCalibrWindowFound": [[20, 3, 1, "", "return_value"]], "ELDAmwl.errors.exceptions.NoValidDataPointsForCalibration": [[20, 3, 1, "", "return_value"]], "ELDAmwl.errors.exceptions.NotEnoughMCIterations": [[20, 3, 1, "", "return_value"]], "ELDAmwl.errors.exceptions.NotFoundInStorage": [[20, 3, 1, "", "return_value"]], "ELDAmwl.errors.exceptions.OnlyOneOverrideAllowed": [[20, 3, 1, "", "return_value"]], "ELDAmwl.errors.exceptions.UseCaseNotImplemented": [[20, 3, 1, "", "return_value"]], "ELDAmwl.errors.exceptions.WrongCommandLineParameter": [[20, 3, 1, "", "return_value"]], "ELDAmwl.extinction": [[21, 0, 0, "-", "operation"], [21, 0, 0, "-", "params"], [21, 0, 0, "-", "product"], [22, 0, 0, "-", "tools"], [23, 0, 0, "-", "vertical_resolution"]], "ELDAmwl.extinction.operation": [[21, 1, 1, "", "CalcExtinction"], [21, 1, 1, "", "CalcExtinctionDefault"], [21, 1, 1, "", "ExtinctionFactory"], [21, 1, 1, "", "ExtinctionFactoryDefault"]], "ELDAmwl.extinction.operation.CalcExtinction": [[21, 2, 1, "", "get_classname_from_db"], [21, 3, 1, "", "name"]], "ELDAmwl.extinction.operation.CalcExtinctionDefault": [[21, 2, 1, "", "calc_single_profile"], [21, 2, 1, "", "calc_slope"], [21, 3, 1, "", "ext_params"], [21, 3, 1, "", "name"], [21, 2, 1, "", "prepare_data"], [21, 3, 1, "", "qf_data"], [21, 3, 1, "", "result"], [21, 2, 1, "", "run"], [21, 3, 1, "", "signal"], [21, 3, 1, "", "slope_routine"], [21, 3, 1, "", "slope_to_ext_routine"], [21, 3, 1, "", "x_data"], [21, 3, 1, "", "y_data"], [21, 3, 1, "", "yerr_data"]], "ELDAmwl.extinction.operation.ExtinctionFactory": [[21, 2, 1, "", "get_classname_from_db"], [21, 3, 1, "", "name"]], "ELDAmwl.extinction.operation.ExtinctionFactoryDefault": [[21, 3, 1, "", "empty_ext"], [21, 2, 1, "", "get_non_merge_product"], [21, 2, 1, "", "get_product"], [21, 2, 1, "", "get_smooth_res"], [21, 3, 1, "", "name"], [21, 3, 1, "", "param"], [21, 2, 1, "", "prepare"], [21, 3, 1, "", "prod_id"], [21, 3, 1, "", "raman_sig"], [21, 3, 1, "", "resolution"], [21, 3, 1, "", "smooth_res"]], "ELDAmwl.extinction.params": [[21, 1, 1, "", "ExtinctionParams"]], "ELDAmwl.extinction.params.ExtinctionParams": [[21, 2, 1, "", "add_signal_role"], [21, 4, 1, "", "ang_exp_asDataArray"], [21, 2, 1, "", "from_db"], [21, 4, 1, "", "smooth_params_auto"], [21, 2, 1, "", "to_meta_ds_dict"]], "ELDAmwl.extinction.product": [[21, 1, 1, "", "Extinctions"]], "ELDAmwl.extinction.product.Extinctions": [[21, 2, 1, "", "init"], [21, 2, 1, "", "to_meta_ds_dict"]], "ELDAmwl.extinction.tools": [[22, 0, 0, "-", "operation"]], "ELDAmwl.extinction.tools.operation": [[22, 1, 1, "", "ExtinctionAutosmooth"], [22, 1, 1, "", "ExtinctionAutosmoothDefault"], [22, 1, 1, "", "LinFit"], [22, 1, 1, "", "NonWeightedLinearFit"], [22, 1, 1, "", "SignalSlope"], [22, 1, 1, "", "SlopeToExtinction"], [22, 1, 1, "", "SlopeToExtinctionDefault"], [22, 1, 1, "", "WeightedLinearFit"]], "ELDAmwl.extinction.tools.operation.ExtinctionAutosmooth": [[22, 2, 1, "", "get_classname_from_db"], [22, 3, 1, "", "name"]], "ELDAmwl.extinction.tools.operation.ExtinctionAutosmoothDefault": [[22, 2, 1, "", "max_smooth"], [22, 3, 1, "", "name"], [22, 2, 1, "", "run"], [22, 3, 1, "", "signal"], [22, 3, 1, "", "smooth_params"]], "ELDAmwl.extinction.tools.operation.LinFit": [[22, 3, 1, "", "data"], [22, 3, 1, "", "name"], [22, 2, 1, "", "run"]], "ELDAmwl.extinction.tools.operation.NonWeightedLinearFit": [[22, 3, 1, "", "name"], [22, 2, 1, "", "run"]], "ELDAmwl.extinction.tools.operation.SignalSlope": [[22, 2, 1, "", "get_classname_from_db"], [22, 3, 1, "", "name"], [22, 3, 1, "", "prod_id"]], "ELDAmwl.extinction.tools.operation.SlopeToExtinction": [[22, 2, 1, "", "get_classname_from_db"], [22, 3, 1, "", "name"]], "ELDAmwl.extinction.tools.operation.SlopeToExtinctionDefault": [[22, 3, 1, "", "name"], [22, 2, 1, "", "run"]], "ELDAmwl.extinction.tools.operation.WeightedLinearFit": [[22, 3, 1, "", "name"], [22, 2, 1, "", "run"]], "ELDAmwl.extinction.vertical_resolution": [[23, 0, 0, "-", "operation"]], "ELDAmwl.extinction.vertical_resolution.operation": [[23, 1, 1, "", "ExtEffBinRes"], [23, 1, 1, "", "ExtUsedBinRes"], [23, 1, 1, "", "LinFitEffBinRes"], [23, 1, 1, "", "LinFitUsedBinRes"]], "ELDAmwl.extinction.vertical_resolution.operation.ExtEffBinRes": [[23, 2, 1, "", "get_classname_from_db"], [23, 3, 1, "", "name"], [23, 3, 1, "", "prod_id"]], "ELDAmwl.extinction.vertical_resolution.operation.ExtUsedBinRes": [[23, 2, 1, "", "get_classname_from_db"], [23, 3, 1, "", "name"], [23, 3, 1, "", "prod_id"]], "ELDAmwl.extinction.vertical_resolution.operation.LinFitEffBinRes": [[23, 3, 1, "", "name"], [23, 2, 1, "", "run"]], "ELDAmwl.extinction.vertical_resolution.operation.LinFitUsedBinRes": [[23, 3, 1, "", "name"], [23, 2, 1, "", "run"]], "ELDAmwl.header": [[3, 1, 1, "", "Header"], [3, 1, 1, "", "Person"]], "ELDAmwl.header.Header": [[3, 4, 1, "", "altitude"], [3, 2, 1, "", "append"], [3, 3, 1, "", "attrs"], [3, 3, 1, "", "class_attrs"], [3, 3, 1, "", "end_time"], [3, 2, 1, "", "from_nc_file"], [3, 4, 1, "", "latitude"], [3, 4, 1, "", "longitude"], [3, 3, 1, "", "start_time"], [3, 2, 1, "", "to_ds_dict"], [3, 3, 1, "", "vars"]], "ELDAmwl.header.Person": [[3, 2, 1, "", "from_nc_file"], [3, 3, 1, "", "name"], [3, 2, 1, "", "to_ds_dict"]], "ELDAmwl.lidar_ratio": [[24, 0, 0, "-", "operation"], [24, 0, 0, "-", "params"], [24, 0, 0, "-", "product"]], "ELDAmwl.lidar_ratio.operation": [[24, 1, 1, "", "CalcLidarRatio"], [24, 1, 1, "", "CalcLidarRatioDefault"], [24, 1, 1, "", "LidarRatioFactory"], [24, 1, 1, "", "LidarRatioFactoryDefault"]], "ELDAmwl.lidar_ratio.operation.CalcLidarRatio": [[24, 2, 1, "", "get_classname_from_db"], [24, 3, 1, "", "name"]], "ELDAmwl.lidar_ratio.operation.CalcLidarRatioDefault": [[24, 3, 1, "", "bsc"], [24, 3, 1, "", "ext"], [24, 3, 1, "", "name"], [24, 3, 1, "", "result"], [24, 2, 1, "", "run"]], "ELDAmwl.lidar_ratio.operation.LidarRatioFactory": [[24, 2, 1, "", "get_classname_from_db"], [24, 3, 1, "", "name"]], "ELDAmwl.lidar_ratio.operation.LidarRatioFactoryDefault": [[24, 3, 1, "", "bsc"], [24, 3, 1, "", "empty_lr"], [24, 3, 1, "", "ext"], [24, 2, 1, "", "get_non_merge_product"], [24, 2, 1, "", "get_product"], [24, 3, 1, "", "name"], [24, 3, 1, "", "param"], [24, 2, 1, "", "prepare"], [24, 3, 1, "", "prod_id"], [24, 3, 1, "", "resolution"], [24, 3, 1, "", "result"]], "ELDAmwl.lidar_ratio.params": [[24, 1, 1, "", "LidarRatioParams"]], "ELDAmwl.lidar_ratio.params.LidarRatioParams": [[24, 2, 1, "", "assign_to_product_list"], [24, 2, 1, "", "from_db"], [24, 2, 1, "", "to_meta_ds_dict"]], "ELDAmwl.lidar_ratio.product": [[24, 1, 1, "", "LidarRatios"]], "ELDAmwl.lidar_ratio.product.LidarRatios": [[24, 2, 1, "", "init"], [24, 2, 1, "", "to_meta_ds_dict"]], "ELDAmwl.log": [[25, 0, 0, "-", "log"]], "ELDAmwl.log.log": [[25, 1, 1, "", "Logger"], [25, 5, 1, "", "register_db_logger"], [25, 5, 1, "", "register_logger"]], "ELDAmwl.log.log.Logger": [[25, 4, 1, "", "cfg"], [25, 2, 1, "", "critical"], [25, 2, 1, "", "db_log"], [25, 3, 1, "", "db_log_func"], [25, 3, 1, "", "db_log_level"], [25, 2, 1, "", "debug"], [25, 2, 1, "", "error"], [25, 2, 1, "", "fatal"], [25, 2, 1, "", "get_logger_formatter"], [25, 2, 1, "", "info"], [25, 2, 1, "", "log_message"], [25, 3, 1, "", "logger"], [25, 2, 1, "", "setLevel"], [25, 2, 1, "", "setup_console_logger"], [25, 2, 1, "", "setup_db_logger"], [25, 2, 1, "", "setup_file_logger"], [25, 2, 1, "", "setup_logger"], [25, 2, 1, "", "warning"]], "ELDAmwl.main": [[3, 1, 1, "", "Main"], [3, 5, 1, "", "elda_setup_components"], [3, 5, 1, "", "run"]], "ELDAmwl.main.Main": [[3, 4, 1, "", "cfg"], [3, 2, 1, "", "elda"], [3, 2, 1, "", "elda_cmdline"], [3, 2, 1, "", "handle_args"], [3, 4, 1, "", "logger"], [3, 4, 1, "", "params"], [3, 2, 1, "", "run"]], "ELDAmwl.monte_carlo": [[26, 0, 0, "-", "operation"], [26, 0, 0, "-", "parallel_funcs"]], "ELDAmwl.monte_carlo.operation": [[26, 1, 1, "", "CreateMCCopies"], [26, 1, 1, "", "CreateMCCopiesDefault"], [26, 1, 1, "", "MonteCarlo"], [26, 1, 1, "", "MonteCarloElastBscAdapter"], [26, 1, 1, "", "MonteCarloExtAdapter"], [26, 5, 1, "", "register_monte_carlo"]], "ELDAmwl.monte_carlo.operation.CreateMCCopies": [[26, 2, 1, "", "get_classname_from_db"], [26, 3, 1, "", "name"]], "ELDAmwl.monte_carlo.operation.CreateMCCopiesDefault": [[26, 3, 1, "", "name"], [26, 2, 1, "", "run"]], "ELDAmwl.monte_carlo.operation.MonteCarlo": [[26, 2, 1, "", "calc_mc_error"], [26, 4, 1, "", "cfg"], [26, 2, 1, "", "get_sample_inputs"], [26, 2, 1, "", "get_sample_results"], [26, 4, 1, "", "logger"], [26, 3, 1, "", "sample_inputs"], [26, 3, 1, "", "sample_results"]], "ELDAmwl.monte_carlo.operation.MonteCarloElastBscAdapter": [[26, 2, 1, "", "get_data"], [26, 2, 1, "", "get_sample_inputs"], [26, 2, 1, "", "run"]], "ELDAmwl.monte_carlo.operation.MonteCarloExtAdapter": [[26, 2, 1, "", "get_data"], [26, 2, 1, "", "run"]], "ELDAmwl.monte_carlo.parallel_funcs": [[26, 1, 1, "", "BaseDispatcher"]], "ELDAmwl.monte_carlo.parallel_funcs.BaseDispatcher": [[26, 2, 1, "", "dispatch_jobs_parallel"]], "ELDAmwl.output": [[27, 0, 0, "-", "mwl_file_structure"], [27, 0, 0, "-", "write_mwl_output"]], "ELDAmwl.output.mwl_file_structure": [[27, 1, 1, "", "MWLFileStructure"], [27, 1, 1, "", "MWLFileVarsFromDB"]], "ELDAmwl.output.mwl_file_structure.MWLFileStructure": [[27, 3, 1, "", "ANC_VAR_ATT"], [27, 3, 1, "", "COO_ATTR"], [27, 3, 1, "", "GENERAL"], [27, 3, 1, "", "GROUP_NAME"], [27, 3, 1, "", "HEADER_ATTRS"], [27, 3, 1, "", "HEADER_VARS"], [27, 3, 1, "", "HIGHRES_PRODUCTS"], [27, 3, 1, "", "LONG_NAMES"], [27, 3, 1, "", "LOWRES_PRODUCTS"], [27, 3, 1, "", "MAIN_GROUPS"], [27, 3, 1, "", "META_DATA"], [27, 3, 1, "", "NC_VAR_NAMES"], [27, 3, 1, "", "PROCESSOR_NAME"], [27, 3, 1, "", "REFERENCES"], [27, 3, 1, "", "RES_GROUP"], [27, 3, 1, "", "TITLE"], [27, 3, 1, "", "UNITS"], [27, 3, 1, "", "WRITE_MODE"], [27, 2, 1, "", "bsc_calibr_value_var"], [27, 2, 1, "", "cal_search_range_var"], [27, 2, 1, "", "data_attrs"], [27, 2, 1, "", "err_attrs"], [27, 2, 1, "", "error_method_var"]], "ELDAmwl.output.mwl_file_structure.MWLFileVarsFromDB": [[27, 2, 1, "", "bsc_calibr_method_var"], [27, 2, 1, "", "bsc_method_var"], [27, 4, 1, "", "db_func"], [27, 2, 1, "", "elast_bsc_algorithm_var"], [27, 2, 1, "", "ext_algorithm_var"], [27, 2, 1, "", "method_var_from_db"], [27, 2, 1, "", "ram_bsc_algorithm_var"]], "ELDAmwl.output.write_mwl_output": [[27, 1, 1, "", "WriteMWLOutput"], [27, 1, 1, "", "WriteMWLOutputDefault"]], "ELDAmwl.output.write_mwl_output.WriteMWLOutput": [[27, 2, 1, "", "get_classname_from_db"], [27, 3, 1, "", "name"]], "ELDAmwl.output.write_mwl_output.WriteMWLOutputDefault": [[27, 2, 1, "", "collect_header_info"], [27, 2, 1, "", "collect_meta_data"], [27, 3, 1, "", "data"], [27, 3, 1, "", "data_storage"], [27, 3, 1, "", "meta_data"], [27, 2, 1, "", "mwl_filename"], [27, 3, 1, "", "out_filename"], [27, 3, 1, "", "product_params"], [27, 2, 1, "", "register_to_db"], [27, 2, 1, "", "run"], [27, 2, 1, "", "write_groups"]], "ELDAmwl.plugins": [[28, 0, 0, "-", "PrepareExtSignalsBetter"], [28, 0, 0, "-", "SavitzkyGolaySlope"]], "ELDAmwl.plugins.PrepareExtSignalsBetter": [[28, 1, 1, "", "PrepareExtSignalsBetter"]], "ELDAmwl.plugins.PrepareExtSignalsBetter.PrepareExtSignalsBetter": [[28, 3, 1, "", "name"], [28, 2, 1, "", "run"]], "ELDAmwl.plugins.SavitzkyGolaySlope": [[28, 1, 1, "", "SavGolaySlope"]], "ELDAmwl.plugins.SavitzkyGolaySlope.SavGolaySlope": [[28, 3, 1, "", "name"], [28, 2, 1, "", "run"]], "ELDAmwl.prepare_signals": [[3, 1, 1, "", "PrepareBscSignals"], [3, 1, 1, "", "PrepareBscSignalsDefault"], [3, 1, 1, "", "PrepareExtSignals"], [3, 1, 1, "", "PrepareExtSignalsDefault"], [3, 1, 1, "", "PrepareSignals"], [3, 1, 1, "", "PrepareSignalsDefault"]], "ELDAmwl.prepare_signals.PrepareBscSignals": [[3, 2, 1, "", "get_classname_from_db"], [3, 3, 1, "", "name"]], "ELDAmwl.prepare_signals.PrepareBscSignalsDefault": [[3, 3, 1, "", "bsc_param"], [3, 2, 1, "", "combine_depol_components"], [3, 3, 1, "", "data_storage"], [3, 2, 1, "", "run"]], "ELDAmwl.prepare_signals.PrepareExtSignals": [[3, 2, 1, "", "get_classname_from_db"], [3, 3, 1, "", "name"]], "ELDAmwl.prepare_signals.PrepareExtSignalsDefault": [[3, 3, 1, "", "data_storage"], [3, 3, 1, "", "ext_param"], [3, 2, 1, "", "run"]], "ELDAmwl.prepare_signals.PrepareSignals": [[3, 2, 1, "", "get_classname_from_db"], [3, 3, 1, "", "name"]], "ELDAmwl.prepare_signals.PrepareSignalsDefault": [[3, 3, 1, "", "data_storage"], [3, 2, 1, "", "run"]], "ELDAmwl.products": [[3, 1, 1, "", "GeneralProductParams"], [3, 1, 1, "", "MCParams"], [3, 1, 1, "", "ProductParams"], [3, 1, 1, "", "Products"], [3, 1, 1, "", "QualityParams"], [3, 1, 1, "", "SmoothParams"], [3, 1, 1, "", "SmoothRoutine"], [3, 1, 1, "", "SmoothSavGolay"], [3, 1, 1, "", "SmoothSlidingAverage"]], "ELDAmwl.products.GeneralProductParams": [[3, 2, 1, "", "from_extended_query"], [3, 2, 1, "", "from_id"], [3, 2, 1, "", "from_short_query"]], "ELDAmwl.products.MCParams": [[3, 2, 1, "", "from_db"], [3, 3, 1, "", "nb_of_iterations"]], "ELDAmwl.products.ProductParams": [[3, 2, 1, "", "add_signal_role"], [3, 2, 1, "", "assign_to_product_list"], [3, 2, 1, "", "calc_with_res"], [3, 4, 1, "", "det_limit_asDataArray"], [3, 2, 1, "", "ensure_same_wavelength"], [3, 4, 1, "", "error_method"], [3, 4, 1, "", "error_threshold_high_asDataArray"], [3, 4, 1, "", "error_threshold_low_asDataArray"], [3, 2, 1, "", "from_db"], [3, 2, 1, "", "get_error_params"], [3, 2, 1, "", "get_valid_alt_range"], [3, 2, 1, "", "harmonize_resolution_settings"], [3, 2, 1, "", "includes_product_merging"], [3, 2, 1, "", "is_bsc_from_depol_components"], [3, 4, 1, "", "prod_id_str"], [3, 4, 1, "", "smooth_method"], [3, 4, 1, "", "smooth_params_auto"], [3, 4, 1, "", "smooth_type"], [3, 2, 1, "", "to_meta_ds_dict"]], "ELDAmwl.products.Products": [[3, 2, 1, "", "from_signal"], [3, 3, 1, "", "mwl_meta_id"], [3, 3, 1, "", "num_scan_angles"], [3, 3, 1, "", "p_params"], [3, 3, 1, "", "params"], [3, 2, 1, "", "save_to_netcdf"], [3, 2, 1, "", "smooth"], [3, 3, 1, "", "smooth_routine"], [3, 2, 1, "", "to_meta_ds_dict"], [3, 2, 1, "", "write_data_in_ds"]], "ELDAmwl.products.QualityParams": [[3, 2, 1, "", "from_db"], [3, 2, 1, "", "from_query"]], "ELDAmwl.products.SmoothParams": [[3, 2, 1, "", "from_db"], [3, 2, 1, "", "from_query"]], "ELDAmwl.products.SmoothRoutine": [[3, 2, 1, "", "get_classname_from_db"], [3, 3, 1, "", "method_id"], [3, 3, 1, "", "name"]], "ELDAmwl.products.SmoothSavGolay": [[3, 3, 1, "", "name"], [3, 2, 1, "", "run"]], "ELDAmwl.products.SmoothSlidingAverage": [[3, 3, 1, "", "name"], [3, 2, 1, "", "run"]], "ELDAmwl.rayleigh": [[3, 1, 1, "", "RayleighLidarRatio"], [3, 1, 1, "", "RayleighLidarRatioFromConst"]], "ELDAmwl.rayleigh.RayleighLidarRatio": [[3, 2, 1, "", "get_classname_from_db"], [3, 3, 1, "", "name"]], "ELDAmwl.rayleigh.RayleighLidarRatioFromConst": [[3, 3, 1, "", "name"], [3, 2, 1, "", "run"]], "ELDAmwl.signals": [[3, 1, 1, "", "CombineDepolComponents"], [3, 1, 1, "", "CombineDepolComponentsDefault"], [3, 1, 1, "", "DepolarizationCalibration"], [3, 1, 1, "", "ElppData"], [3, 1, 1, "", "Signals"]], "ELDAmwl.signals.CombineDepolComponents": [[3, 2, 1, "", "get_classname_from_db"], [3, 3, 1, "", "name"]], "ELDAmwl.signals.CombineDepolComponentsDefault": [[3, 2, 1, "", "run"]], "ELDAmwl.signals.DepolarizationCalibration": [[3, 2, 1, "", "from_nc_file"], [3, 3, 1, "", "gain_factor"], [3, 3, 1, "", "gain_factor_correction"]], "ELDAmwl.signals.ElppData": [[3, 4, 1, "", "cfg"], [3, 2, 1, "", "read_nc_file"]], "ELDAmwl.signals.Signals": [[3, 3, 1, "", "alt_range"], [3, 2, 1, "", "as_sig_ratio"], [3, 3, 1, "", "calc_eff_bin_res_routine"], [3, 2, 1, "", "calc_mol_backscatter"], [3, 3, 1, "", "calc_used_bin_res_routine"], [3, 3, 1, "", "channel_id"], [3, 4, 1, "", "channel_id_str"], [3, 3, 1, "", "channel_idx_in_ncfile"], [3, 2, 1, "", "correct_for_mol_transmission"], [3, 2, 1, "", "data_in_vertical_range"], [3, 3, 1, "", "detection_type"], [3, 3, 1, "", "detection_wavelength"], [3, 2, 1, "", "eff_to_used_binres"], [3, 3, 1, "", "emission_wavelength"], [3, 2, 1, "", "from_depol_components"], [3, 2, 1, "", "from_nc_file"], [3, 3, 1, "", "g"], [3, 2, 1, "", "get_binres_from_fixed_smooth"], [3, 2, 1, "", "get_raw_heightres"], [3, 3, 1, "", "h"], [3, 2, 1, "", "height_to_levels"], [3, 2, 1, "", "heightres_to_bins"], [3, 2, 1, "", "heights_to_levels"], [3, 4, 1, "", "is_Raman_sig"], [3, 4, 1, "", "is_WV_sig"], [3, 4, 1, "", "is_all_range_signal"], [3, 4, 1, "", "is_cross_sig"], [3, 4, 1, "", "is_elast_sig"], [3, 4, 1, "", "is_fr_signal"], [3, 4, 1, "", "is_nr_signal"], [3, 4, 1, "", "is_parallel_sig"], [3, 4, 1, "", "is_refl_sig"], [3, 4, 1, "", "is_total_sig"], [3, 4, 1, "", "is_transm_sig"], [3, 4, 1, "", "name"], [3, 2, 1, "", "normalize_by_shots"], [3, 3, 1, "", "pol_calibr"], [3, 3, 1, "", "pol_channel_conf"], [3, 3, 1, "", "pol_channel_geometry"], [3, 2, 1, "", "prepare_for_extinction"], [3, 4, 1, "", "range"], [3, 3, 1, "", "raw_heightres"], [3, 2, 1, "", "register"], [3, 3, 1, "", "scale_factor_shots"], [3, 3, 1, "", "scatterer"], [3, 2, 1, "", "set_valid_height_range"], [3, 3, 1, "", "station_altitude"]], "ELDAmwl.storage": [[29, 0, 0, "-", "cached_functions"], [29, 0, 0, "-", "data_storage"]], "ELDAmwl.storage.cached_functions": [[29, 5, 1, "", "sg_coeffs"], [29, 5, 1, "", "sg_used_binres"], [29, 5, 1, "", "smooth_routine_from_db"]], "ELDAmwl.storage.data_storage": [[29, 1, 1, "", "DataStorage"], [29, 5, 1, "", "register_datastorage"]], "ELDAmwl.storage.data_storage.DataStorage": [[29, 2, 1, "", "_get_prod_res_entry"], [29, 2, 1, "", "basic_product_auto_smooth"], [29, 2, 1, "", "basic_product_common_smooth"], [29, 2, 1, "", "basic_product_raw"], [29, 2, 1, "", "binres_auto_smooth"], [29, 2, 1, "", "binres_common_smooth"], [29, 4, 1, "", "cloud_mask"], [29, 2, 1, "", "derived_product_common_smooth"], [29, 2, 1, "", "elpp_signal"], [29, 2, 1, "", "elpp_signals"], [29, 2, 1, "", "final_product_matrix"], [29, 2, 1, "", "get_common_cloud_mask"], [29, 2, 1, "", "get_max_binres"], [29, 4, 1, "", "header"], [29, 3, 1, "", "name"], [29, 2, 1, "", "prepared_signal"], [29, 2, 1, "", "prepared_signals"], [29, 2, 1, "", "product_common_smooth"], [29, 2, 1, "", "set_basic_product_auto_smooth"], [29, 2, 1, "", "set_basic_product_common_smooth"], [29, 2, 1, "", "set_basic_product_raw"], [29, 2, 1, "", "set_binres_auto_smooth"], [29, 2, 1, "", "set_binres_common_smooth"], [29, 2, 1, "", "set_derived_products"], [29, 2, 1, "", "set_elpp_signal"], [29, 2, 1, "", "set_final_product_matrix"], [29, 2, 1, "", "set_lidar_constant"], [29, 2, 1, "", "set_prepared_signal"]], "ELDAmwl.tests": [[30, 0, 0, "-", "config"], [31, 0, 0, "-", "database"], [30, 0, 0, "-", "disable_test_elda_mwl_factories"], [32, 0, 0, "-", "factories"], [30, 0, 0, "-", "pickle_data"], [30, 0, 0, "-", "test_factory"], [33, 0, 0, "-", "test_integration"], [30, 0, 0, "-", "test_params"], [30, 0, 0, "-", "test_registry"], [30, 0, 0, "-", "test_signals"], [30, 0, 0, "-", "test_wrapper"]], "ELDAmwl.tests.database": [[31, 0, 0, "-", "create_test_db"]], "ELDAmwl.tests.database.create_test_db": [[31, 1, 1, "", "DBConstructor"], [31, 5, 1, "", "register_dbconstructor"]], "ELDAmwl.tests.database.create_test_db.DBConstructor": [[31, 2, 1, "", "create_tables"], [31, 2, 1, "", "csv_data"], [31, 2, 1, "", "fill_table"], [31, 2, 1, "", "fill_tables"], [31, 2, 1, "", "refine_data"], [31, 2, 1, "", "remove_db"], [31, 2, 1, "", "run"]], "ELDAmwl.tests.disable_test_elda_mwl_factories": [[30, 5, 1, "", "test_MeasurementParams"]], "ELDAmwl.tests.factories": [[32, 0, 0, "-", "test_FindBscCalibrWindowAsInELDA"]], "ELDAmwl.tests.factories.test_FindBscCalibrWindowAsInELDA": [[32, 1, 1, "", "Test"]], "ELDAmwl.tests.factories.test_FindBscCalibrWindowAsInELDA.Test": [[32, 3, 1, "", "data_name"], [32, 2, 1, "", "setUp"], [32, 2, 1, "", "test_get_bp_calibration_window"]], "ELDAmwl.tests.pickle_data": [[30, 5, 1, "", "get_unpicklable"], [30, 5, 1, "", "pickle_data"], [30, 5, 1, "", "un_pickle_data"], [30, 5, 1, "", "write_test_data"]], "ELDAmwl.tests.test_factory": [[30, 1, 1, "", "Factory"], [30, 1, 1, "", "OperationA"], [30, 1, 1, "", "OperationB"], [30, 1, 1, "", "TestFactory"], [30, 5, 1, "", "test_factory_registration"]], "ELDAmwl.tests.test_factory.TestFactory": [[30, 2, 1, "", "test_factory"]], "ELDAmwl.tests.test_integration": [[33, 0, 0, "-", "test_integration"]], "ELDAmwl.tests.test_integration.test_integration": [[33, 1, 1, "", "Test"], [33, 1, 1, "", "TestTestDB"]], "ELDAmwl.tests.test_integration.test_integration.Test": [[33, 2, 1, "", "setUp"], [33, 2, 1, "", "test_20181017oh00"]], "ELDAmwl.tests.test_integration.test_integration.TestTestDB": [[33, 2, 1, "", "setUp"], [33, 2, 1, "", "test_test_db"]], "ELDAmwl.tests.test_params": [[30, 1, 1, "", "ParamsA"], [30, 5, 1, "", "test_params"]], "ELDAmwl.tests.test_params.ParamsA": [[30, 4, 1, "", "aplusb"], [30, 2, 1, "", "funcaplusb"], [30, 4, 1, "", "getb"]], "ELDAmwl.tests.test_registry": [[30, 1, 1, "", "Factory"], [30, 1, 1, "", "OperationA"], [30, 1, 1, "", "OperationB"], [30, 5, 1, "", "test_registry_register"]], "ELDAmwl.tests.test_registry.Factory": [[30, 3, 1, "", "name"]], "ELDAmwl.tests.test_signals": [[30, 1, 1, "", "Test"], [30, 5, 1, "", "test_Signals_from_nc_file"]], "ELDAmwl.tests.test_signals.Test": [[30, 2, 1, "", "test_signals_register"]], "ELDAmwl.tests.test_wrapper": [[30, 1, 1, "", "TestWrapper"], [30, 5, 1, "", "scipy_func"]], "ELDAmwl.tests.test_wrapper.TestWrapper": [[30, 2, 1, "", "test_bad_tupel"], [30, 2, 1, "", "test_good_tupel"], [30, 2, 1, "", "test_int"], [30, 2, 1, "", "test_other_type"]], "ELDAmwl.utils": [[34, 0, 0, "-", "constants"], [34, 0, 0, "-", "numerical"], [34, 0, 0, "-", "path_utils"], [34, 0, 0, "-", "wrapper"]], "ELDAmwl.utils.numerical": [[34, 5, 1, "", "calc_rolling_means_sems"], [34, 5, 1, "", "closest_bin"], [34, 5, 1, "", "find_minimum_window"], [34, 5, 1, "", "integral_profile"], [34, 5, 1, "", "np_datetime64_to_datetime"], [34, 5, 1, "", "rolling_mean_sem"]], "ELDAmwl.utils.path_utils": [[34, 5, 1, "", "abs_file_path"], [34, 5, 1, "", "dir_not_found_hint"]], "ELDAmwl.utils.wrapper": [[34, 5, 1, "", "scipy_reduce_wrapper"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"klett": 0, "fernald": 0, "algorithm": [1, 38, 42, 43, 45, 47], "flow": 1, "chart": 1, "prepar": 2, "signal": [2, 3], "eldamwl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 51], "packag": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "subpackag": [3, 5, 6, 9, 11, 15, 17, 21, 30], "submodul": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "config": [3, 30], "modul": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 56], "header": 3, "main": 3, "prepare_sign": 3, "product": [3, 4, 6, 9, 11, 17, 21, 24, 55], "rayleigh": 3, "content": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "backscatt": [5, 6, 7, 8, 9, 10, 11, 12, 16], "common": [6, 7, 8], "oper": [4, 6, 7, 8, 9, 10, 11, 12, 17, 18, 21, 22, 23, 24, 26], "param": [4, 6, 7, 9, 11, 17, 21, 24], "calibr": 7, "vertical_resolut": [8, 18, 23], "elast": [9, 10], "tool": [10, 12, 22], "raman": [11, 12], "base": 13, "column": 13, "factori": [13, 32], "compon": 14, "interfac": 14, "plugin": [14, 28], "registri": [14, 48], "databas": [15, 16, 31], "db": 15, "db_function": 15, "tabl": [16, 51], "channel": 16, "db_base": 16, "eldamwl_class_nam": 16, "eldamwl_product": 16, "extinct": [16, 21, 22, 23], "gener": 16, "lidar_const": 16, "lidar_ratio": [16, 24], "measur": 16, "system_product": 16, "elda_mwl": 19, "get_basic_product": 19, "get_derived_product": 19, "get_lidar_const": 19, "mwl_product": 19, "error": 20, "error_cod": 20, "except": 20, "log": 25, "monte_carlo": 26, "parallel_func": 26, "output": 27, "mwl_file_structur": 27, "write_mwl_output": 27, "prepareextsignalsbett": 28, "savitzkygolayslop": 28, "storag": 29, "cached_funct": 29, "data_storag": 29, "test": [30, 31, 32, 33, 49], "disable_test_elda_mwl_factori": 30, "pickle_data": 30, "test_factori": 30, "test_param": 30, "test_registri": 30, "test_sign": 30, "test_wrapp": 30, "create_test_db": 31, "test_findbsccalibrwindowasinelda": 32, "test_integr": 33, "util": 34, "constant": 34, "numer": 34, "path_util": 34, "wrapper": 34, "contribut": 36, "global": 37, "data": 37, "structur": 37, "provid": 38, "an": [38, 42, 43, 47], "addit": [38, 43], "user": [38, 43, 55], "select": [38, 43], "subsystem": [38, 42, 43, 45, 47], "step": [38, 47], "1": [38, 47], "2": [38, 47], "3": 38, "basic": 39, "baseoper": [39, 40, 41, 45], "class": [39, 40, 41, 48], "complex": 40, "fundament": 41, "exampl": [42, 43, 44], "altern": 42, "overview": 45, "modular": [45, 46], "list": 45, "baseoperationfactori": 45, "correspond": 45, "overwrit": 47, "exist": 47, "The": 48, "index": [50, 56], "welcom": 51, "": 51, "document": 51, "indic": 51, "api": 51, "configur": 52, "instal": [53, 55], "setup": 53, "requir": 54, "system": 55, "updat": 55, "new": 55, "version": 55, "develop": 55, "check": 55, "whether": 55, "wa": 55, "successful": 55, "usag": 57, "angstroem_expon": 4, "depol": [17, 18]}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Klett-Fernald": [[0, "klett-fernald"]], "ELDAmwl package": [[3, "eldamwl-package"]], "Subpackages": [[3, "subpackages"], [5, "subpackages"], [6, "subpackages"], [9, "subpackages"], [11, "subpackages"], [15, "subpackages"], [21, "subpackages"], [30, "subpackages"], [17, "subpackages"]], "Submodules": [[3, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"], [12, "submodules"], [13, "submodules"], [14, "submodules"], [15, "submodules"], [16, "submodules"], [19, "submodules"], [20, "submodules"], [21, "submodules"], [22, "submodules"], [23, "submodules"], [24, "submodules"], [25, "submodules"], [26, "submodules"], [27, "submodules"], [28, "submodules"], [29, "submodules"], [30, "submodules"], [31, "submodules"], [32, "submodules"], [33, "submodules"], [34, "submodules"], [4, "submodules"], [17, "submodules"], [18, "submodules"]], "ELDAmwl.config module": [[3, "module-ELDAmwl.config"]], "ELDAmwl.header module": [[3, "module-ELDAmwl.header"]], "ELDAmwl.main module": [[3, "module-ELDAmwl.main"]], "ELDAmwl.prepare_signals module": [[3, "module-ELDAmwl.prepare_signals"]], "ELDAmwl.products module": [[3, "module-ELDAmwl.products"]], "ELDAmwl.rayleigh module": [[3, "module-ELDAmwl.rayleigh"]], "ELDAmwl.signals module": [[3, "module-ELDAmwl.signals"]], "Module contents": [[3, "module-ELDAmwl"], [5, "module-ELDAmwl.backscatter"], [6, "module-ELDAmwl.backscatter.common"], [7, "module-ELDAmwl.backscatter.common.calibration"], [8, "module-ELDAmwl.backscatter.common.vertical_resolution"], [9, "module-ELDAmwl.backscatter.elastic"], [10, "module-ELDAmwl.backscatter.elastic.tools"], [11, "module-ELDAmwl.backscatter.raman"], [12, "module-ELDAmwl.backscatter.raman.tools"], [13, "module-ELDAmwl.bases"], [14, "module-ELDAmwl.component"], [15, "module-ELDAmwl.database"], [16, "module-ELDAmwl.database.tables"], [19, "module-ELDAmwl.elda_mwl"], [20, "module-ELDAmwl.errors"], [21, "module-ELDAmwl.extinction"], [22, "module-ELDAmwl.extinction.tools"], [23, "module-ELDAmwl.extinction.vertical_resolution"], [24, "module-ELDAmwl.lidar_ratio"], [25, "module-ELDAmwl.log"], [26, "module-ELDAmwl.monte_carlo"], [27, "module-ELDAmwl.output"], [28, "module-ELDAmwl.plugins"], [29, "module-ELDAmwl.storage"], [30, "module-ELDAmwl.tests"], [31, "module-ELDAmwl.tests.database"], [32, "module-ELDAmwl.tests.factories"], [33, "module-ELDAmwl.tests.test_integration"], [34, "module-ELDAmwl.utils"], [4, "module-ELDAmwl.angstroem_exponent"], [17, "module-ELDAmwl.depol"], [18, "module-ELDAmwl.depol.vertical_resolution"]], "ELDAmwl.backscatter package": [[5, "eldamwl-backscatter-package"]], "ELDAmwl.backscatter.common package": [[6, "eldamwl-backscatter-common-package"]], "ELDAmwl.backscatter.common.operation module": [[6, "module-ELDAmwl.backscatter.common.operation"]], "ELDAmwl.backscatter.common.params module": [[6, "module-ELDAmwl.backscatter.common.params"]], "ELDAmwl.backscatter.common.product module": [[6, "module-ELDAmwl.backscatter.common.product"]], "ELDAmwl.backscatter.common.calibration package": [[7, "eldamwl-backscatter-common-calibration-package"]], "ELDAmwl.backscatter.common.calibration.operation module": [[7, "module-ELDAmwl.backscatter.common.calibration.operation"]], "ELDAmwl.backscatter.common.calibration.params module": [[7, "module-ELDAmwl.backscatter.common.calibration.params"]], "ELDAmwl.backscatter.common.vertical_resolution package": [[8, "eldamwl-backscatter-common-vertical-resolution-package"]], "ELDAmwl.backscatter.common.vertical_resolution.operation module": [[8, "module-ELDAmwl.backscatter.common.vertical_resolution.operation"]], "ELDAmwl.backscatter.elastic package": [[9, "eldamwl-backscatter-elastic-package"]], "ELDAmwl.backscatter.elastic.operation module": [[9, "module-ELDAmwl.backscatter.elastic.operation"]], "ELDAmwl.backscatter.elastic.params module": [[9, "module-ELDAmwl.backscatter.elastic.params"]], "ELDAmwl.backscatter.elastic.product module": [[9, "module-ELDAmwl.backscatter.elastic.product"]], "ELDAmwl.backscatter.elastic.tools package": [[10, "eldamwl-backscatter-elastic-tools-package"]], "ELDAmwl.backscatter.elastic.tools.operation module": [[10, "module-ELDAmwl.backscatter.elastic.tools.operation"]], "ELDAmwl.backscatter.raman package": [[11, "eldamwl-backscatter-raman-package"]], "ELDAmwl.backscatter.raman.operation module": [[11, "module-ELDAmwl.backscatter.raman.operation"]], "ELDAmwl.backscatter.raman.params module": [[11, "module-ELDAmwl.backscatter.raman.params"]], "ELDAmwl.backscatter.raman.product module": [[11, "module-ELDAmwl.backscatter.raman.product"]], "ELDAmwl.backscatter.raman.tools package": [[12, "eldamwl-backscatter-raman-tools-package"]], "ELDAmwl.backscatter.raman.tools.operation module": [[12, "module-ELDAmwl.backscatter.raman.tools.operation"]], "ELDAmwl.bases package": [[13, "eldamwl-bases-package"]], "ELDAmwl.bases.base module": [[13, "module-ELDAmwl.bases.base"]], "ELDAmwl.bases.columns module": [[13, "module-ELDAmwl.bases.columns"]], "ELDAmwl.bases.factory module": [[13, "module-ELDAmwl.bases.factory"]], "ELDAmwl.component package": [[14, "eldamwl-component-package"]], "ELDAmwl.component.interface module": [[14, "module-ELDAmwl.component.interface"]], "ELDAmwl.component.plugins module": [[14, "module-ELDAmwl.component.plugins"]], "ELDAmwl.component.registry module": [[14, "module-ELDAmwl.component.registry"]], "ELDAmwl.database package": [[15, "eldamwl-database-package"]], "ELDAmwl.database.db module": [[15, "module-ELDAmwl.database.db"]], "ELDAmwl.database.db_functions module": [[15, "module-ELDAmwl.database.db_functions"]], "ELDAmwl.database.tables package": [[16, "eldamwl-database-tables-package"]], "ELDAmwl.database.tables.backscatter module": [[16, "module-ELDAmwl.database.tables.backscatter"]], "ELDAmwl.database.tables.channels module": [[16, "module-ELDAmwl.database.tables.channels"]], "ELDAmwl.database.tables.db_base module": [[16, "module-ELDAmwl.database.tables.db_base"]], "ELDAmwl.database.tables.eldamwl_class_names module": [[16, "module-ELDAmwl.database.tables.eldamwl_class_names"]], "ELDAmwl.database.tables.eldamwl_products module": [[16, "module-ELDAmwl.database.tables.eldamwl_products"]], "ELDAmwl.database.tables.extinction module": [[16, "module-ELDAmwl.database.tables.extinction"]], "ELDAmwl.database.tables.general module": [[16, "module-ELDAmwl.database.tables.general"]], "ELDAmwl.database.tables.lidar_constants module": [[16, "module-ELDAmwl.database.tables.lidar_constants"]], "ELDAmwl.database.tables.lidar_ratio module": [[16, "module-ELDAmwl.database.tables.lidar_ratio"]], "ELDAmwl.database.tables.measurements module": [[16, "module-ELDAmwl.database.tables.measurements"]], "ELDAmwl.database.tables.system_product module": [[16, "module-ELDAmwl.database.tables.system_product"]], "ELDAmwl.elda_mwl package": [[19, "eldamwl-elda-mwl-package"]], "ELDAmwl.elda_mwl.elda_mwl module": [[19, "module-ELDAmwl.elda_mwl.elda_mwl"]], "ELDAmwl.elda_mwl.get_basic_products module": [[19, "module-ELDAmwl.elda_mwl.get_basic_products"]], "ELDAmwl.elda_mwl.get_derived_products module": [[19, "module-ELDAmwl.elda_mwl.get_derived_products"]], "ELDAmwl.elda_mwl.get_lidar_constants module": [[19, "module-ELDAmwl.elda_mwl.get_lidar_constants"]], "ELDAmwl.elda_mwl.mwl_products module": [[19, "module-ELDAmwl.elda_mwl.mwl_products"]], "ELDAmwl.errors package": [[20, "eldamwl-errors-package"]], "ELDAmwl.errors.error_codes module": [[20, "module-ELDAmwl.errors.error_codes"]], "ELDAmwl.errors.exceptions module": [[20, "module-ELDAmwl.errors.exceptions"]], "ELDAmwl.extinction package": [[21, "eldamwl-extinction-package"]], "ELDAmwl.extinction.operation module": [[21, "module-ELDAmwl.extinction.operation"]], "ELDAmwl.extinction.params module": [[21, "module-ELDAmwl.extinction.params"]], "ELDAmwl.extinction.product module": [[21, "module-ELDAmwl.extinction.product"]], "ELDAmwl.extinction.tools package": [[22, "eldamwl-extinction-tools-package"]], "ELDAmwl.extinction.tools.operation module": [[22, "module-ELDAmwl.extinction.tools.operation"]], "ELDAmwl.extinction.vertical_resolution package": [[23, "eldamwl-extinction-vertical-resolution-package"]], "ELDAmwl.extinction.vertical_resolution.operation module": [[23, "module-ELDAmwl.extinction.vertical_resolution.operation"]], "ELDAmwl.lidar_ratio package": [[24, "eldamwl-lidar-ratio-package"]], "ELDAmwl.lidar_ratio.operation module": [[24, "module-ELDAmwl.lidar_ratio.operation"]], "ELDAmwl.lidar_ratio.params module": [[24, "module-ELDAmwl.lidar_ratio.params"]], "ELDAmwl.lidar_ratio.product module": [[24, "module-ELDAmwl.lidar_ratio.product"]], "ELDAmwl.log package": [[25, "eldamwl-log-package"]], "ELDAmwl.log.log module": [[25, "module-ELDAmwl.log.log"]], "ELDAmwl.monte_carlo package": [[26, "eldamwl-monte-carlo-package"]], "ELDAmwl.monte_carlo.operation module": [[26, "module-ELDAmwl.monte_carlo.operation"]], "ELDAmwl.monte_carlo.parallel_funcs module": [[26, "module-ELDAmwl.monte_carlo.parallel_funcs"]], "ELDAmwl.output package": [[27, "eldamwl-output-package"]], "ELDAmwl.output.mwl_file_structure module": [[27, "module-ELDAmwl.output.mwl_file_structure"]], "ELDAmwl.output.write_mwl_output module": [[27, "module-ELDAmwl.output.write_mwl_output"]], "ELDAmwl.plugins package": [[28, "eldamwl-plugins-package"]], "ELDAmwl.plugins.PrepareExtSignalsBetter module": [[28, "module-ELDAmwl.plugins.PrepareExtSignalsBetter"]], "ELDAmwl.plugins.SavitzkyGolaySlope module": [[28, "module-ELDAmwl.plugins.SavitzkyGolaySlope"]], "ELDAmwl.storage package": [[29, "eldamwl-storage-package"]], "ELDAmwl.storage.cached_functions module": [[29, "module-ELDAmwl.storage.cached_functions"]], "ELDAmwl.storage.data_storage module": [[29, "module-ELDAmwl.storage.data_storage"]], "ELDAmwl.tests package": [[30, "eldamwl-tests-package"]], "ELDAmwl.tests.config module": [[30, "module-ELDAmwl.tests.config"]], "ELDAmwl.tests.disable_test_elda_mwl_factories module": [[30, "module-ELDAmwl.tests.disable_test_elda_mwl_factories"]], "ELDAmwl.tests.pickle_data module": [[30, "module-ELDAmwl.tests.pickle_data"]], "ELDAmwl.tests.test_factory module": [[30, "module-ELDAmwl.tests.test_factory"]], "ELDAmwl.tests.test_params module": [[30, "module-ELDAmwl.tests.test_params"]], "ELDAmwl.tests.test_registry module": [[30, "module-ELDAmwl.tests.test_registry"]], "ELDAmwl.tests.test_signals module": [[30, "module-ELDAmwl.tests.test_signals"]], "ELDAmwl.tests.test_wrapper module": [[30, "module-ELDAmwl.tests.test_wrapper"]], "ELDAmwl.tests.database package": [[31, "eldamwl-tests-database-package"]], "ELDAmwl.tests.database.create_test_db module": [[31, "module-ELDAmwl.tests.database.create_test_db"]], "ELDAmwl.tests.factories package": [[32, "eldamwl-tests-factories-package"]], "ELDAmwl.tests.factories.test_FindBscCalibrWindowAsInELDA module": [[32, "module-ELDAmwl.tests.factories.test_FindBscCalibrWindowAsInELDA"]], "ELDAmwl.tests.test_integration package": [[33, "eldamwl-tests-test-integration-package"]], "ELDAmwl.tests.test_integration.test_integration module": [[33, "module-ELDAmwl.tests.test_integration.test_integration"]], "ELDAmwl.utils package": [[34, "eldamwl-utils-package"]], "ELDAmwl.utils.constants module": [[34, "module-ELDAmwl.utils.constants"]], "ELDAmwl.utils.numerical module": [[34, "module-ELDAmwl.utils.numerical"]], "ELDAmwl.utils.path_utils module": [[34, "module-ELDAmwl.utils.path_utils"]], "ELDAmwl.utils.wrapper module": [[34, "module-ELDAmwl.utils.wrapper"]], "ELDAmwl": [[35, "eldamwl"]], "Contributing": [[36, "contributing"]], "Global data structures": [[37, "global-data-structures"]], "Provide an additional user-selectable algorithm subsystem": [[38, "provide-an-additional-user-selectable-algorithm-subsystem"]], "Step 1": [[38, "step-1"], [47, "step-1"]], "Step 2": [[38, "step-2"], [47, "step-2"]], "Step 3": [[38, "step-3"]], "Basic BaseOperation classes": [[39, "basic-baseoperation-classes"]], "Complex BaseOperation classes": [[40, "complex-baseoperation-classes"]], "Fundamental BaseOperation classes": [[41, "fundamental-baseoperation-classes"]], "Example for an algorithm subsystem with no alternatives": [[42, "example-for-an-algorithm-subsystem-with-no-alternatives"]], "Examples": [[44, "examples"]], "Overview on modularized algorithm subsystems": [[45, "overview-on-modularized-algorithm-subsystems"]], "list of BaseOperationFactories and corresponding BaseOperations": [[45, "id1"]], "Modularity": [[46, "modularity"]], "Overwrite an existing algorithm subsystem": [[47, "overwrite-an-existing-algorithm-subsystem"]], "The Registry class": [[48, "the-registry-class"]], "Testing": [[49, "testing"]], "Index": [[50, "index"]], "Welcome to ELDAmwl\u2019s documentation!": [[51, "welcome-to-eldamwl-s-documentation"]], "ELDAmwl Documentation": [[51, null]], "Indices and tables": [[51, null]], "API documentation": [[51, null]], "Configuration": [[52, "configuration"]], "Installation and setup": [[53, "installation-and-setup"]], "Requirements": [[54, "requirements"]], "Installation": [[55, "installation"]], "Installation on production system as user": [[55, "installation-on-production-system-as-user"]], "update a new version on production system": [[55, "update-a-new-version-on-production-system"]], "installation of a development system": [[55, "installation-of-a-development-system"]], "check whether installation was successfull": [[55, "check-whether-installation-was-successfull"]], "Module Index": [[56, "module-index"]], "Usage": [[57, "usage"]], "Algorithms and Flow Charts": [[1, "algorithms-and-flow-charts"]], "prepare signals": [[2, "prepare-signals"]], "ELDAmwl.angstroem_exponent package": [[4, "eldamwl-angstroem-exponent-package"]], "ELDAmwl.angstroem_exponent.operation module": [[4, "module-ELDAmwl.angstroem_exponent.operation"]], "ELDAmwl.angstroem_exponent.params module": [[4, "module-ELDAmwl.angstroem_exponent.params"]], "ELDAmwl.angstroem_exponent.product module": [[4, "module-ELDAmwl.angstroem_exponent.product"]], "ELDAmwl.depol package": [[17, "eldamwl-depol-package"]], "ELDAmwl.depol.operation module": [[17, "module-ELDAmwl.depol.operation"]], "ELDAmwl.depol.params module": [[17, "module-ELDAmwl.depol.params"]], "ELDAmwl.depol.product module": [[17, "module-ELDAmwl.depol.product"]], "ELDAmwl.depol.vertical_resolution package": [[18, "eldamwl-depol-vertical-resolution-package"]], "ELDAmwl.depol.vertical_resolution.operation module": [[18, "module-ELDAmwl.depol.vertical_resolution.operation"]], "Example of an additional user-selectable algorithm subsystem": [[43, "example-of-an-additional-user-selectable-algorithm-subsystem"]]}, "indexentries": {"combinedepolcomponents (class in eldamwl.signals)": [[3, "ELDAmwl.signals.CombineDepolComponents"]], "combinedepolcomponentsdefault (class in eldamwl.signals)": [[3, "ELDAmwl.signals.CombineDepolComponentsDefault"]], "depolarizationcalibration (class in eldamwl.signals)": [[3, "ELDAmwl.signals.DepolarizationCalibration"]], "eldamwl": [[3, "module-ELDAmwl"]], "eldamwl.config": [[3, "module-ELDAmwl.config"]], "eldamwl.header": [[3, "module-ELDAmwl.header"]], "eldamwl.main": [[3, "module-ELDAmwl.main"]], "eldamwl.prepare_signals": [[3, "module-ELDAmwl.prepare_signals"]], "eldamwl.products": [[3, "module-ELDAmwl.products"]], "eldamwl.rayleigh": [[3, "module-ELDAmwl.rayleigh"]], "eldamwl.signals": [[3, "module-ELDAmwl.signals"]], "elppdata (class in eldamwl.signals)": [[3, "ELDAmwl.signals.ElppData"]], "generalproductparams (class in eldamwl.products)": [[3, "ELDAmwl.products.GeneralProductParams"]], "header (class in eldamwl.header)": [[3, "ELDAmwl.header.Header"]], "mcparams (class in eldamwl.products)": [[3, "ELDAmwl.products.MCParams"]], "main (class in eldamwl.main)": [[3, "ELDAmwl.main.Main"]], "person (class in eldamwl.header)": [[3, "ELDAmwl.header.Person"]], "preparebscsignals (class in eldamwl.prepare_signals)": [[3, "ELDAmwl.prepare_signals.PrepareBscSignals"]], "preparebscsignalsdefault (class in eldamwl.prepare_signals)": [[3, "ELDAmwl.prepare_signals.PrepareBscSignalsDefault"]], "prepareextsignals (class in eldamwl.prepare_signals)": [[3, "ELDAmwl.prepare_signals.PrepareExtSignals"]], "prepareextsignalsdefault (class in eldamwl.prepare_signals)": [[3, "ELDAmwl.prepare_signals.PrepareExtSignalsDefault"]], "preparesignals (class in eldamwl.prepare_signals)": [[3, "ELDAmwl.prepare_signals.PrepareSignals"]], "preparesignalsdefault (class in eldamwl.prepare_signals)": [[3, "ELDAmwl.prepare_signals.PrepareSignalsDefault"]], "productparams (class in eldamwl.products)": [[3, "ELDAmwl.products.ProductParams"]], "products (class in eldamwl.products)": [[3, "ELDAmwl.products.Products"]], "qualityparams (class in eldamwl.products)": [[3, "ELDAmwl.products.QualityParams"]], "rayleighlidarratio (class in eldamwl.rayleigh)": [[3, "ELDAmwl.rayleigh.RayleighLidarRatio"]], "rayleighlidarratiofromconst (class in eldamwl.rayleigh)": [[3, "ELDAmwl.rayleigh.RayleighLidarRatioFromConst"]], "signals (class in eldamwl.signals)": [[3, "ELDAmwl.signals.Signals"]], "smoothparams (class in eldamwl.products)": [[3, "ELDAmwl.products.SmoothParams"]], "smoothroutine (class in eldamwl.products)": [[3, "ELDAmwl.products.SmoothRoutine"]], "smoothsavgolay (class in eldamwl.products)": [[3, "ELDAmwl.products.SmoothSavGolay"]], "smoothslidingaverage (class in eldamwl.products)": [[3, "ELDAmwl.products.SmoothSlidingAverage"]], "add_signal_role() (eldamwl.products.productparams method)": [[3, "ELDAmwl.products.ProductParams.add_signal_role"]], "alt_range (eldamwl.signals.signals attribute)": [[3, "ELDAmwl.signals.Signals.alt_range"]], "altitude (eldamwl.header.header property)": [[3, "ELDAmwl.header.Header.altitude"]], "append() (eldamwl.header.header method)": [[3, "ELDAmwl.header.Header.append"]], "as_sig_ratio() (eldamwl.signals.signals class method)": [[3, "ELDAmwl.signals.Signals.as_sig_ratio"]], "assign_to_product_list() (eldamwl.products.productparams method)": [[3, "ELDAmwl.products.ProductParams.assign_to_product_list"]], "attrs (eldamwl.header.header attribute)": [[3, "ELDAmwl.header.Header.attrs"]], "bsc_param (eldamwl.prepare_signals.preparebscsignalsdefault attribute)": [[3, "ELDAmwl.prepare_signals.PrepareBscSignalsDefault.bsc_param"]], "calc_eff_bin_res_routine (eldamwl.signals.signals attribute)": [[3, "ELDAmwl.signals.Signals.calc_eff_bin_res_routine"]], "calc_mol_backscatter() (eldamwl.signals.signals method)": [[3, "ELDAmwl.signals.Signals.calc_mol_backscatter"]], "calc_used_bin_res_routine (eldamwl.signals.signals attribute)": [[3, "ELDAmwl.signals.Signals.calc_used_bin_res_routine"]], "calc_with_res() (eldamwl.products.productparams method)": [[3, "ELDAmwl.products.ProductParams.calc_with_res"]], "cfg (eldamwl.main.main property)": [[3, "ELDAmwl.main.Main.cfg"]], "cfg (eldamwl.signals.elppdata property)": [[3, "ELDAmwl.signals.ElppData.cfg"]], "channel_id (eldamwl.signals.signals attribute)": [[3, "ELDAmwl.signals.Signals.channel_id"]], "channel_id_str (eldamwl.signals.signals property)": [[3, "ELDAmwl.signals.Signals.channel_id_str"]], "channel_idx_in_ncfile (eldamwl.signals.signals attribute)": [[3, "ELDAmwl.signals.Signals.channel_idx_in_ncfile"]], "class_attrs (eldamwl.header.header attribute)": [[3, "ELDAmwl.header.Header.class_attrs"]], "combine_depol_components() (eldamwl.prepare_signals.preparebscsignalsdefault method)": [[3, "ELDAmwl.prepare_signals.PrepareBscSignalsDefault.combine_depol_components"]], "correct_for_mol_transmission() (eldamwl.signals.signals method)": [[3, "ELDAmwl.signals.Signals.correct_for_mol_transmission"]], "data_in_vertical_range() (eldamwl.signals.signals method)": [[3, "ELDAmwl.signals.Signals.data_in_vertical_range"]], "data_storage (eldamwl.prepare_signals.preparebscsignalsdefault attribute)": [[3, "ELDAmwl.prepare_signals.PrepareBscSignalsDefault.data_storage"]], "data_storage (eldamwl.prepare_signals.prepareextsignalsdefault attribute)": [[3, "ELDAmwl.prepare_signals.PrepareExtSignalsDefault.data_storage"]], "data_storage (eldamwl.prepare_signals.preparesignalsdefault attribute)": [[3, "ELDAmwl.prepare_signals.PrepareSignalsDefault.data_storage"]], "det_limit_asdataarray (eldamwl.products.productparams property)": [[3, "ELDAmwl.products.ProductParams.det_limit_asDataArray"]], "detection_type (eldamwl.signals.signals attribute)": [[3, "ELDAmwl.signals.Signals.detection_type"]], "detection_wavelength (eldamwl.signals.signals attribute)": [[3, "ELDAmwl.signals.Signals.detection_wavelength"]], "eff_to_used_binres() (eldamwl.signals.signals method)": [[3, "ELDAmwl.signals.Signals.eff_to_used_binres"]], "elda() (eldamwl.main.main method)": [[3, "ELDAmwl.main.Main.elda"]], "elda_cmdline() (eldamwl.main.main method)": [[3, "ELDAmwl.main.Main.elda_cmdline"]], "elda_setup_components() (in module eldamwl.main)": [[3, "ELDAmwl.main.elda_setup_components"]], "emission_wavelength (eldamwl.signals.signals attribute)": [[3, "ELDAmwl.signals.Signals.emission_wavelength"]], "end_time (eldamwl.header.header attribute)": [[3, "ELDAmwl.header.Header.end_time"]], "ensure_same_wavelength() (eldamwl.products.productparams method)": [[3, "ELDAmwl.products.ProductParams.ensure_same_wavelength"]], "error_method (eldamwl.products.productparams property)": [[3, "ELDAmwl.products.ProductParams.error_method"]], "error_threshold_high_asdataarray (eldamwl.products.productparams property)": [[3, "ELDAmwl.products.ProductParams.error_threshold_high_asDataArray"]], "error_threshold_low_asdataarray (eldamwl.products.productparams property)": [[3, "ELDAmwl.products.ProductParams.error_threshold_low_asDataArray"]], "ext_param (eldamwl.prepare_signals.prepareextsignalsdefault attribute)": [[3, "ELDAmwl.prepare_signals.PrepareExtSignalsDefault.ext_param"]], "from_db() (eldamwl.products.mcparams class method)": [[3, "ELDAmwl.products.MCParams.from_db"]], "from_db() (eldamwl.products.productparams method)": [[3, "ELDAmwl.products.ProductParams.from_db"]], "from_db() (eldamwl.products.qualityparams class method)": [[3, "ELDAmwl.products.QualityParams.from_db"]], "from_db() (eldamwl.products.smoothparams class method)": [[3, "ELDAmwl.products.SmoothParams.from_db"]], "from_depol_components() (eldamwl.signals.signals class method)": [[3, "ELDAmwl.signals.Signals.from_depol_components"]], "from_extended_query() (eldamwl.products.generalproductparams class method)": [[3, "ELDAmwl.products.GeneralProductParams.from_extended_query"]], "from_id() (eldamwl.products.generalproductparams class method)": [[3, "ELDAmwl.products.GeneralProductParams.from_id"]], "from_nc_file() (eldamwl.header.header class method)": [[3, "ELDAmwl.header.Header.from_nc_file"]], "from_nc_file() (eldamwl.header.person class method)": [[3, "ELDAmwl.header.Person.from_nc_file"]], "from_nc_file() (eldamwl.signals.depolarizationcalibration class method)": [[3, "ELDAmwl.signals.DepolarizationCalibration.from_nc_file"]], "from_nc_file() (eldamwl.signals.signals class method)": [[3, "ELDAmwl.signals.Signals.from_nc_file"]], "from_query() (eldamwl.products.qualityparams class method)": [[3, "ELDAmwl.products.QualityParams.from_query"]], "from_query() (eldamwl.products.smoothparams class method)": [[3, "ELDAmwl.products.SmoothParams.from_query"]], "from_short_query() (eldamwl.products.generalproductparams class method)": [[3, "ELDAmwl.products.GeneralProductParams.from_short_query"]], "from_signal() (eldamwl.products.products class method)": [[3, "ELDAmwl.products.Products.from_signal"]], "g (eldamwl.signals.signals attribute)": [[3, "ELDAmwl.signals.Signals.g"]], "gain_factor (eldamwl.signals.depolarizationcalibration attribute)": [[3, "ELDAmwl.signals.DepolarizationCalibration.gain_factor"]], "gain_factor_correction (eldamwl.signals.depolarizationcalibration attribute)": [[3, "ELDAmwl.signals.DepolarizationCalibration.gain_factor_correction"]], "get_binres_from_fixed_smooth() (eldamwl.signals.signals method)": [[3, "ELDAmwl.signals.Signals.get_binres_from_fixed_smooth"]], "get_classname_from_db() (eldamwl.prepare_signals.preparebscsignals method)": [[3, "ELDAmwl.prepare_signals.PrepareBscSignals.get_classname_from_db"]], "get_classname_from_db() (eldamwl.prepare_signals.prepareextsignals method)": [[3, "ELDAmwl.prepare_signals.PrepareExtSignals.get_classname_from_db"]], "get_classname_from_db() (eldamwl.prepare_signals.preparesignals method)": [[3, "ELDAmwl.prepare_signals.PrepareSignals.get_classname_from_db"]], "get_classname_from_db() (eldamwl.products.smoothroutine method)": [[3, "ELDAmwl.products.SmoothRoutine.get_classname_from_db"]], "get_classname_from_db() (eldamwl.rayleigh.rayleighlidarratio method)": [[3, "ELDAmwl.rayleigh.RayleighLidarRatio.get_classname_from_db"]], "get_classname_from_db() (eldamwl.signals.combinedepolcomponents method)": [[3, "ELDAmwl.signals.CombineDepolComponents.get_classname_from_db"]], "get_error_params() (eldamwl.products.productparams method)": [[3, "ELDAmwl.products.ProductParams.get_error_params"]], "get_raw_heightres() (eldamwl.signals.signals method)": [[3, "ELDAmwl.signals.Signals.get_raw_heightres"]], "get_valid_alt_range() (eldamwl.products.productparams method)": [[3, "ELDAmwl.products.ProductParams.get_valid_alt_range"]], "h (eldamwl.signals.signals attribute)": [[3, "ELDAmwl.signals.Signals.h"]], "handle_args() (eldamwl.main.main method)": [[3, "ELDAmwl.main.Main.handle_args"]], "harmonize_resolution_settings() (eldamwl.products.productparams method)": [[3, "ELDAmwl.products.ProductParams.harmonize_resolution_settings"]], "height_to_levels() (eldamwl.signals.signals method)": [[3, "ELDAmwl.signals.Signals.height_to_levels"]], "heightres_to_bins() (eldamwl.signals.signals method)": [[3, "ELDAmwl.signals.Signals.heightres_to_bins"]], "heights_to_levels() (eldamwl.signals.signals method)": [[3, "ELDAmwl.signals.Signals.heights_to_levels"]], "includes_product_merging() (eldamwl.products.productparams method)": [[3, "ELDAmwl.products.ProductParams.includes_product_merging"]], "is_raman_sig (eldamwl.signals.signals property)": [[3, "ELDAmwl.signals.Signals.is_Raman_sig"]], "is_wv_sig (eldamwl.signals.signals property)": [[3, "ELDAmwl.signals.Signals.is_WV_sig"]], "is_all_range_signal (eldamwl.signals.signals property)": [[3, "ELDAmwl.signals.Signals.is_all_range_signal"]], "is_bsc_from_depol_components() (eldamwl.products.productparams method)": [[3, "ELDAmwl.products.ProductParams.is_bsc_from_depol_components"]], "is_cross_sig (eldamwl.signals.signals property)": [[3, "ELDAmwl.signals.Signals.is_cross_sig"]], "is_elast_sig (eldamwl.signals.signals property)": [[3, "ELDAmwl.signals.Signals.is_elast_sig"]], "is_fr_signal (eldamwl.signals.signals property)": [[3, "ELDAmwl.signals.Signals.is_fr_signal"]], "is_nr_signal (eldamwl.signals.signals property)": [[3, "ELDAmwl.signals.Signals.is_nr_signal"]], "is_parallel_sig (eldamwl.signals.signals property)": [[3, "ELDAmwl.signals.Signals.is_parallel_sig"]], "is_refl_sig (eldamwl.signals.signals property)": [[3, "ELDAmwl.signals.Signals.is_refl_sig"]], "is_total_sig (eldamwl.signals.signals property)": [[3, "ELDAmwl.signals.Signals.is_total_sig"]], "is_transm_sig (eldamwl.signals.signals property)": [[3, "ELDAmwl.signals.Signals.is_transm_sig"]], "latitude (eldamwl.header.header property)": [[3, "ELDAmwl.header.Header.latitude"]], "logger (eldamwl.main.main property)": [[3, "ELDAmwl.main.Main.logger"]], "longitude (eldamwl.header.header property)": [[3, "ELDAmwl.header.Header.longitude"]], "method_id (eldamwl.products.smoothroutine attribute)": [[3, "ELDAmwl.products.SmoothRoutine.method_id"]], "module": [[3, "module-ELDAmwl"], [3, "module-ELDAmwl.config"], [3, "module-ELDAmwl.header"], [3, "module-ELDAmwl.main"], [3, "module-ELDAmwl.prepare_signals"], [3, "module-ELDAmwl.products"], [3, "module-ELDAmwl.rayleigh"], [3, "module-ELDAmwl.signals"], [4, "module-ELDAmwl.angstroem_exponent"], [4, "module-ELDAmwl.angstroem_exponent.operation"], [4, "module-ELDAmwl.angstroem_exponent.params"], [4, "module-ELDAmwl.angstroem_exponent.product"], [5, "module-ELDAmwl.backscatter"], [6, "module-ELDAmwl.backscatter.common"], [6, "module-ELDAmwl.backscatter.common.operation"], [6, "module-ELDAmwl.backscatter.common.params"], [6, "module-ELDAmwl.backscatter.common.product"], [7, "module-ELDAmwl.backscatter.common.calibration"], [7, "module-ELDAmwl.backscatter.common.calibration.operation"], [7, "module-ELDAmwl.backscatter.common.calibration.params"], [8, "module-ELDAmwl.backscatter.common.vertical_resolution"], [8, "module-ELDAmwl.backscatter.common.vertical_resolution.operation"], [9, "module-ELDAmwl.backscatter.elastic"], [9, "module-ELDAmwl.backscatter.elastic.operation"], [9, "module-ELDAmwl.backscatter.elastic.params"], [9, "module-ELDAmwl.backscatter.elastic.product"], [10, "module-ELDAmwl.backscatter.elastic.tools"], [10, "module-ELDAmwl.backscatter.elastic.tools.operation"], [11, "module-ELDAmwl.backscatter.raman"], [11, "module-ELDAmwl.backscatter.raman.operation"], [11, "module-ELDAmwl.backscatter.raman.params"], [11, "module-ELDAmwl.backscatter.raman.product"], [12, "module-ELDAmwl.backscatter.raman.tools"], [12, "module-ELDAmwl.backscatter.raman.tools.operation"], [13, "module-ELDAmwl.bases"], [13, "module-ELDAmwl.bases.base"], [13, "module-ELDAmwl.bases.columns"], [13, "module-ELDAmwl.bases.factory"], [14, "module-ELDAmwl.component"], [14, "module-ELDAmwl.component.interface"], [14, "module-ELDAmwl.component.plugins"], [14, "module-ELDAmwl.component.registry"], [15, "module-ELDAmwl.database"], [15, "module-ELDAmwl.database.db"], [15, "module-ELDAmwl.database.db_functions"], [16, "module-ELDAmwl.database.tables"], [16, "module-ELDAmwl.database.tables.backscatter"], [16, "module-ELDAmwl.database.tables.channels"], [16, "module-ELDAmwl.database.tables.db_base"], [16, "module-ELDAmwl.database.tables.eldamwl_class_names"], [16, "module-ELDAmwl.database.tables.eldamwl_products"], [16, "module-ELDAmwl.database.tables.extinction"], [16, "module-ELDAmwl.database.tables.general"], [16, "module-ELDAmwl.database.tables.lidar_constants"], [16, "module-ELDAmwl.database.tables.lidar_ratio"], [16, "module-ELDAmwl.database.tables.measurements"], [16, "module-ELDAmwl.database.tables.system_product"], [17, "module-ELDAmwl.depol"], [17, "module-ELDAmwl.depol.operation"], [17, "module-ELDAmwl.depol.params"], [17, "module-ELDAmwl.depol.product"], [18, "module-ELDAmwl.depol.vertical_resolution"], [18, "module-ELDAmwl.depol.vertical_resolution.operation"], [19, "module-ELDAmwl.elda_mwl"], [19, "module-ELDAmwl.elda_mwl.elda_mwl"], [19, "module-ELDAmwl.elda_mwl.get_basic_products"], [19, "module-ELDAmwl.elda_mwl.get_derived_products"], [19, "module-ELDAmwl.elda_mwl.get_lidar_constants"], [19, "module-ELDAmwl.elda_mwl.mwl_products"], [20, "module-ELDAmwl.errors"], [20, "module-ELDAmwl.errors.error_codes"], [20, "module-ELDAmwl.errors.exceptions"], [21, "module-ELDAmwl.extinction"], [21, "module-ELDAmwl.extinction.operation"], [21, "module-ELDAmwl.extinction.params"], [21, "module-ELDAmwl.extinction.product"], [22, "module-ELDAmwl.extinction.tools"], [22, "module-ELDAmwl.extinction.tools.operation"], [23, "module-ELDAmwl.extinction.vertical_resolution"], [23, "module-ELDAmwl.extinction.vertical_resolution.operation"], [24, "module-ELDAmwl.lidar_ratio"], [24, "module-ELDAmwl.lidar_ratio.operation"], [24, "module-ELDAmwl.lidar_ratio.params"], [24, "module-ELDAmwl.lidar_ratio.product"], [25, "module-ELDAmwl.log"], [25, "module-ELDAmwl.log.log"], [26, "module-ELDAmwl.monte_carlo"], [26, "module-ELDAmwl.monte_carlo.operation"], [26, "module-ELDAmwl.monte_carlo.parallel_funcs"], [27, "module-ELDAmwl.output"], [27, "module-ELDAmwl.output.mwl_file_structure"], [27, "module-ELDAmwl.output.write_mwl_output"], [28, "module-ELDAmwl.plugins"], [28, "module-ELDAmwl.plugins.PrepareExtSignalsBetter"], [28, "module-ELDAmwl.plugins.SavitzkyGolaySlope"], [29, "module-ELDAmwl.storage"], [29, "module-ELDAmwl.storage.cached_functions"], [29, "module-ELDAmwl.storage.data_storage"], [30, "module-ELDAmwl.tests"], [30, "module-ELDAmwl.tests.config"], [30, "module-ELDAmwl.tests.disable_test_elda_mwl_factories"], [30, "module-ELDAmwl.tests.pickle_data"], [30, "module-ELDAmwl.tests.test_factory"], [30, "module-ELDAmwl.tests.test_params"], [30, "module-ELDAmwl.tests.test_registry"], [30, "module-ELDAmwl.tests.test_signals"], [30, "module-ELDAmwl.tests.test_wrapper"], [31, "module-ELDAmwl.tests.database"], [31, "module-ELDAmwl.tests.database.create_test_db"], [32, "module-ELDAmwl.tests.factories"], [32, "module-ELDAmwl.tests.factories.test_FindBscCalibrWindowAsInELDA"], [33, "module-ELDAmwl.tests.test_integration"], [33, "module-ELDAmwl.tests.test_integration.test_integration"], [34, "module-ELDAmwl.utils"], [34, "module-ELDAmwl.utils.constants"], [34, "module-ELDAmwl.utils.numerical"], [34, "module-ELDAmwl.utils.path_utils"], [34, "module-ELDAmwl.utils.wrapper"]], "mwl_meta_id (eldamwl.products.products attribute)": [[3, "ELDAmwl.products.Products.mwl_meta_id"]], "name (eldamwl.header.person attribute)": [[3, "ELDAmwl.header.Person.name"]], "name (eldamwl.prepare_signals.preparebscsignals attribute)": [[3, "ELDAmwl.prepare_signals.PrepareBscSignals.name"]], "name (eldamwl.prepare_signals.prepareextsignals attribute)": [[3, "ELDAmwl.prepare_signals.PrepareExtSignals.name"]], "name (eldamwl.prepare_signals.preparesignals attribute)": [[3, "ELDAmwl.prepare_signals.PrepareSignals.name"]], "name (eldamwl.products.smoothroutine attribute)": [[3, "ELDAmwl.products.SmoothRoutine.name"]], "name (eldamwl.products.smoothsavgolay attribute)": [[3, "ELDAmwl.products.SmoothSavGolay.name"]], "name (eldamwl.products.smoothslidingaverage attribute)": [[3, "ELDAmwl.products.SmoothSlidingAverage.name"]], "name (eldamwl.rayleigh.rayleighlidarratio attribute)": [[3, "ELDAmwl.rayleigh.RayleighLidarRatio.name"]], "name (eldamwl.rayleigh.rayleighlidarratiofromconst attribute)": [[3, "ELDAmwl.rayleigh.RayleighLidarRatioFromConst.name"]], "name (eldamwl.signals.combinedepolcomponents attribute)": [[3, "ELDAmwl.signals.CombineDepolComponents.name"]], "name (eldamwl.signals.signals property)": [[3, "ELDAmwl.signals.Signals.name"]], "nb_of_iterations (eldamwl.products.mcparams attribute)": [[3, "ELDAmwl.products.MCParams.nb_of_iterations"]], "normalize_by_shots() (eldamwl.signals.signals method)": [[3, "ELDAmwl.signals.Signals.normalize_by_shots"]], "num_scan_angles (eldamwl.products.products attribute)": [[3, "ELDAmwl.products.Products.num_scan_angles"]], "p_params (eldamwl.products.products attribute)": [[3, "ELDAmwl.products.Products.p_params"]], "params (eldamwl.main.main property)": [[3, "ELDAmwl.main.Main.params"]], "params (eldamwl.products.products attribute)": [[3, "ELDAmwl.products.Products.params"]], "pol_calibr (eldamwl.signals.signals attribute)": [[3, "ELDAmwl.signals.Signals.pol_calibr"]], "pol_channel_conf (eldamwl.signals.signals attribute)": [[3, "ELDAmwl.signals.Signals.pol_channel_conf"]], "pol_channel_geometry (eldamwl.signals.signals attribute)": [[3, "ELDAmwl.signals.Signals.pol_channel_geometry"]], "prepare_for_extinction() (eldamwl.signals.signals method)": [[3, "ELDAmwl.signals.Signals.prepare_for_extinction"]], "prod_id_str (eldamwl.products.productparams property)": [[3, "ELDAmwl.products.ProductParams.prod_id_str"]], "range (eldamwl.signals.signals property)": [[3, "ELDAmwl.signals.Signals.range"]], "raw_heightres (eldamwl.signals.signals attribute)": [[3, "ELDAmwl.signals.Signals.raw_heightres"]], "read_nc_file() (eldamwl.signals.elppdata method)": [[3, "ELDAmwl.signals.ElppData.read_nc_file"]], "register() (eldamwl.signals.signals method)": [[3, "ELDAmwl.signals.Signals.register"]], "register_config() (in module eldamwl.config)": [[3, "ELDAmwl.config.register_config"]], "run() (eldamwl.main.main method)": [[3, "ELDAmwl.main.Main.run"]], "run() (eldamwl.prepare_signals.preparebscsignalsdefault method)": [[3, "ELDAmwl.prepare_signals.PrepareBscSignalsDefault.run"]], "run() (eldamwl.prepare_signals.prepareextsignalsdefault method)": [[3, "ELDAmwl.prepare_signals.PrepareExtSignalsDefault.run"]], "run() (eldamwl.prepare_signals.preparesignalsdefault method)": [[3, "ELDAmwl.prepare_signals.PrepareSignalsDefault.run"]], "run() (eldamwl.products.smoothsavgolay method)": [[3, "ELDAmwl.products.SmoothSavGolay.run"]], "run() (eldamwl.products.smoothslidingaverage method)": [[3, "ELDAmwl.products.SmoothSlidingAverage.run"]], "run() (eldamwl.rayleigh.rayleighlidarratiofromconst method)": [[3, "ELDAmwl.rayleigh.RayleighLidarRatioFromConst.run"]], "run() (eldamwl.signals.combinedepolcomponentsdefault method)": [[3, "ELDAmwl.signals.CombineDepolComponentsDefault.run"]], "run() (in module eldamwl.main)": [[3, "ELDAmwl.main.run"]], "save_to_netcdf() (eldamwl.products.products method)": [[3, "ELDAmwl.products.Products.save_to_netcdf"]], "scale_factor_shots (eldamwl.signals.signals attribute)": [[3, "ELDAmwl.signals.Signals.scale_factor_shots"]], "scatterer (eldamwl.signals.signals attribute)": [[3, "ELDAmwl.signals.Signals.scatterer"]], "set_valid_height_range() (eldamwl.signals.signals method)": [[3, "ELDAmwl.signals.Signals.set_valid_height_range"]], "smooth() (eldamwl.products.products method)": [[3, "ELDAmwl.products.Products.smooth"]], "smooth_method (eldamwl.products.productparams property)": [[3, "ELDAmwl.products.ProductParams.smooth_method"]], "smooth_params_auto (eldamwl.products.productparams property)": [[3, "ELDAmwl.products.ProductParams.smooth_params_auto"]], "smooth_routine (eldamwl.products.products attribute)": [[3, "ELDAmwl.products.Products.smooth_routine"]], "smooth_type (eldamwl.products.productparams property)": [[3, "ELDAmwl.products.ProductParams.smooth_type"]], "start_time (eldamwl.header.header attribute)": [[3, "ELDAmwl.header.Header.start_time"]], "station_altitude (eldamwl.signals.signals attribute)": [[3, "ELDAmwl.signals.Signals.station_altitude"]], "to_ds_dict() (eldamwl.header.header method)": [[3, "ELDAmwl.header.Header.to_ds_dict"]], "to_ds_dict() (eldamwl.header.person method)": [[3, "ELDAmwl.header.Person.to_ds_dict"]], "to_meta_ds_dict() (eldamwl.products.productparams method)": [[3, "ELDAmwl.products.ProductParams.to_meta_ds_dict"]], "to_meta_ds_dict() (eldamwl.products.products method)": [[3, "ELDAmwl.products.Products.to_meta_ds_dict"]], "vars (eldamwl.header.header attribute)": [[3, "ELDAmwl.header.Header.vars"]], "write_data_in_ds() (eldamwl.products.products method)": [[3, "ELDAmwl.products.Products.write_data_in_ds"]], "angstroemexpfactory (class in eldamwl.angstroem_exponent.operation)": [[4, "ELDAmwl.angstroem_exponent.operation.AngstroemExpFactory"]], "angstroemexpfactorydefault (class in eldamwl.angstroem_exponent.operation)": [[4, "ELDAmwl.angstroem_exponent.operation.AngstroemExpFactoryDefault"]], "angstroemexpparams (class in eldamwl.angstroem_exponent.params)": [[4, "ELDAmwl.angstroem_exponent.params.AngstroemExpParams"]], "angstroemexps (class in eldamwl.angstroem_exponent.product)": [[4, "ELDAmwl.angstroem_exponent.product.AngstroemExps"]], "calcangstroemexp (class in eldamwl.angstroem_exponent.operation)": [[4, "ELDAmwl.angstroem_exponent.operation.CalcAngstroemExp"]], "calcangstroemexpdefault (class in eldamwl.angstroem_exponent.operation)": [[4, "ELDAmwl.angstroem_exponent.operation.CalcAngstroemExpDefault"]], "eldamwl.angstroem_exponent": [[4, "module-ELDAmwl.angstroem_exponent"]], "eldamwl.angstroem_exponent.operation": [[4, "module-ELDAmwl.angstroem_exponent.operation"]], "eldamwl.angstroem_exponent.params": [[4, "module-ELDAmwl.angstroem_exponent.params"]], "eldamwl.angstroem_exponent.product": [[4, "module-ELDAmwl.angstroem_exponent.product"]], "assign_to_product_list() (eldamwl.angstroem_exponent.params.angstroemexpparams method)": [[4, "ELDAmwl.angstroem_exponent.params.AngstroemExpParams.assign_to_product_list"]], "bsc (eldamwl.angstroem_exponent.operation.angstroemexpfactorydefault attribute)": [[4, "ELDAmwl.angstroem_exponent.operation.AngstroemExpFactoryDefault.bsc"]], "empty_lr (eldamwl.angstroem_exponent.operation.angstroemexpfactorydefault attribute)": [[4, "ELDAmwl.angstroem_exponent.operation.AngstroemExpFactoryDefault.empty_lr"]], "ext (eldamwl.angstroem_exponent.operation.angstroemexpfactorydefault attribute)": [[4, "ELDAmwl.angstroem_exponent.operation.AngstroemExpFactoryDefault.ext"]], "from_db() (eldamwl.angstroem_exponent.params.angstroemexpparams method)": [[4, "ELDAmwl.angstroem_exponent.params.AngstroemExpParams.from_db"]], "get_classname_from_db() (eldamwl.angstroem_exponent.operation.angstroemexpfactory method)": [[4, "ELDAmwl.angstroem_exponent.operation.AngstroemExpFactory.get_classname_from_db"]], "get_classname_from_db() (eldamwl.angstroem_exponent.operation.calcangstroemexp method)": [[4, "ELDAmwl.angstroem_exponent.operation.CalcAngstroemExp.get_classname_from_db"]], "get_non_merge_product() (eldamwl.angstroem_exponent.operation.angstroemexpfactorydefault method)": [[4, "ELDAmwl.angstroem_exponent.operation.AngstroemExpFactoryDefault.get_non_merge_product"]], "get_product() (eldamwl.angstroem_exponent.operation.angstroemexpfactorydefault method)": [[4, "ELDAmwl.angstroem_exponent.operation.AngstroemExpFactoryDefault.get_product"]], "hwvl (eldamwl.angstroem_exponent.operation.calcangstroemexpdefault attribute)": [[4, "ELDAmwl.angstroem_exponent.operation.CalcAngstroemExpDefault.hwvl"]], "init() (eldamwl.angstroem_exponent.product.angstroemexps class method)": [[4, "ELDAmwl.angstroem_exponent.product.AngstroemExps.init"]], "lwvl (eldamwl.angstroem_exponent.operation.calcangstroemexpdefault attribute)": [[4, "ELDAmwl.angstroem_exponent.operation.CalcAngstroemExpDefault.lwvl"]], "name (eldamwl.angstroem_exponent.operation.angstroemexpfactory attribute)": [[4, "ELDAmwl.angstroem_exponent.operation.AngstroemExpFactory.name"]], "name (eldamwl.angstroem_exponent.operation.angstroemexpfactorydefault attribute)": [[4, "ELDAmwl.angstroem_exponent.operation.AngstroemExpFactoryDefault.name"]], "name (eldamwl.angstroem_exponent.operation.calcangstroemexp attribute)": [[4, "ELDAmwl.angstroem_exponent.operation.CalcAngstroemExp.name"]], "name (eldamwl.angstroem_exponent.operation.calcangstroemexpdefault attribute)": [[4, "ELDAmwl.angstroem_exponent.operation.CalcAngstroemExpDefault.name"]], "param (eldamwl.angstroem_exponent.operation.angstroemexpfactorydefault attribute)": [[4, "ELDAmwl.angstroem_exponent.operation.AngstroemExpFactoryDefault.param"]], "prepare() (eldamwl.angstroem_exponent.operation.angstroemexpfactorydefault method)": [[4, "ELDAmwl.angstroem_exponent.operation.AngstroemExpFactoryDefault.prepare"]], "prod_id (eldamwl.angstroem_exponent.operation.angstroemexpfactorydefault attribute)": [[4, "ELDAmwl.angstroem_exponent.operation.AngstroemExpFactoryDefault.prod_id"]], "resolution (eldamwl.angstroem_exponent.operation.angstroemexpfactorydefault attribute)": [[4, "ELDAmwl.angstroem_exponent.operation.AngstroemExpFactoryDefault.resolution"]], "result (eldamwl.angstroem_exponent.operation.angstroemexpfactorydefault attribute)": [[4, "ELDAmwl.angstroem_exponent.operation.AngstroemExpFactoryDefault.result"]], "result (eldamwl.angstroem_exponent.operation.calcangstroemexpdefault attribute)": [[4, "ELDAmwl.angstroem_exponent.operation.CalcAngstroemExpDefault.result"]], "run() (eldamwl.angstroem_exponent.operation.calcangstroemexpdefault method)": [[4, "ELDAmwl.angstroem_exponent.operation.CalcAngstroemExpDefault.run"]], "to_meta_ds_dict() (eldamwl.angstroem_exponent.params.angstroemexpparams method)": [[4, "ELDAmwl.angstroem_exponent.params.AngstroemExpParams.to_meta_ds_dict"]], "to_meta_ds_dict() (eldamwl.angstroem_exponent.product.angstroemexps method)": [[4, "ELDAmwl.angstroem_exponent.product.AngstroemExps.to_meta_ds_dict"]], "eldamwl.backscatter": [[5, "module-ELDAmwl.backscatter"]], "backscatterfactory (class in eldamwl.backscatter.common.operation)": [[6, "ELDAmwl.backscatter.common.operation.BackscatterFactory"]], "backscatterfactorydefault (class in eldamwl.backscatter.common.operation)": [[6, "ELDAmwl.backscatter.common.operation.BackscatterFactoryDefault"]], "backscatterparams (class in eldamwl.backscatter.common.params)": [[6, "ELDAmwl.backscatter.common.params.BackscatterParams"]], "backscatters (class in eldamwl.backscatter.common.product)": [[6, "ELDAmwl.backscatter.common.product.Backscatters"]], "eldamwl.backscatter.common": [[6, "module-ELDAmwl.backscatter.common"]], "eldamwl.backscatter.common.operation": [[6, "module-ELDAmwl.backscatter.common.operation"]], "eldamwl.backscatter.common.params": [[6, "module-ELDAmwl.backscatter.common.params"]], "eldamwl.backscatter.common.product": [[6, "module-ELDAmwl.backscatter.common.product"]], "iterbscparams (class in eldamwl.backscatter.common.params)": [[6, "ELDAmwl.backscatter.common.params.IterBscParams"]], "add_signal_role() (eldamwl.backscatter.common.params.backscatterparams method)": [[6, "ELDAmwl.backscatter.common.params.BackscatterParams.add_signal_role"]], "bsc_ratio (eldamwl.backscatter.common.product.backscatters property)": [[6, "ELDAmwl.backscatter.common.product.Backscatters.bsc_ratio"]], "calibr_window (eldamwl.backscatter.common.operation.backscatterfactorydefault attribute)": [[6, "ELDAmwl.backscatter.common.operation.BackscatterFactoryDefault.calibr_window"]], "calibr_window (eldamwl.backscatter.common.product.backscatters attribute)": [[6, "ELDAmwl.backscatter.common.product.Backscatters.calibr_window"]], "conv_crit (eldamwl.backscatter.common.params.iterbscparams attribute)": [[6, "ELDAmwl.backscatter.common.params.IterBscParams.conv_crit"]], "data_storage (eldamwl.backscatter.common.operation.backscatterfactorydefault attribute)": [[6, "ELDAmwl.backscatter.common.operation.BackscatterFactoryDefault.data_storage"]], "elast_sig (eldamwl.backscatter.common.operation.backscatterfactorydefault attribute)": [[6, "ELDAmwl.backscatter.common.operation.BackscatterFactoryDefault.elast_sig"]], "empty_bsc (eldamwl.backscatter.common.operation.backscatterfactorydefault attribute)": [[6, "ELDAmwl.backscatter.common.operation.BackscatterFactoryDefault.empty_bsc"]], "from_db() (eldamwl.backscatter.common.params.backscatterparams method)": [[6, "ELDAmwl.backscatter.common.params.BackscatterParams.from_db"]], "from_db() (eldamwl.backscatter.common.params.iterbscparams class method)": [[6, "ELDAmwl.backscatter.common.params.IterBscParams.from_db"]], "get_classname_from_db() (eldamwl.backscatter.common.operation.backscatterfactory method)": [[6, "ELDAmwl.backscatter.common.operation.BackscatterFactory.get_classname_from_db"]], "get_non_merge_product() (eldamwl.backscatter.common.operation.backscatterfactorydefault method)": [[6, "ELDAmwl.backscatter.common.operation.BackscatterFactoryDefault.get_non_merge_product"]], "get_product() (eldamwl.backscatter.common.operation.backscatterfactorydefault method)": [[6, "ELDAmwl.backscatter.common.operation.BackscatterFactoryDefault.get_product"]], "init() (eldamwl.backscatter.common.product.backscatters class method)": [[6, "ELDAmwl.backscatter.common.product.Backscatters.init"]], "max_iteration_count (eldamwl.backscatter.common.params.iterbscparams attribute)": [[6, "ELDAmwl.backscatter.common.params.IterBscParams.max_iteration_count"]], "name (eldamwl.backscatter.common.operation.backscatterfactory attribute)": [[6, "ELDAmwl.backscatter.common.operation.BackscatterFactory.name"]], "name (eldamwl.backscatter.common.operation.backscatterfactorydefault attribute)": [[6, "ELDAmwl.backscatter.common.operation.BackscatterFactoryDefault.name"]], "param (eldamwl.backscatter.common.operation.backscatterfactorydefault attribute)": [[6, "ELDAmwl.backscatter.common.operation.BackscatterFactoryDefault.param"]], "prepare() (eldamwl.backscatter.common.operation.backscatterfactorydefault method)": [[6, "ELDAmwl.backscatter.common.operation.BackscatterFactoryDefault.prepare"]], "prod_id (eldamwl.backscatter.common.operation.backscatterfactorydefault attribute)": [[6, "ELDAmwl.backscatter.common.operation.BackscatterFactoryDefault.prod_id"]], "ram_bsc_method (eldamwl.backscatter.common.params.iterbscparams attribute)": [[6, "ELDAmwl.backscatter.common.params.IterBscParams.ram_bsc_method"]], "to_meta_ds_dict() (eldamwl.backscatter.common.params.backscatterparams method)": [[6, "ELDAmwl.backscatter.common.params.BackscatterParams.to_meta_ds_dict"]], "to_meta_ds_dict() (eldamwl.backscatter.common.params.iterbscparams method)": [[6, "ELDAmwl.backscatter.common.params.IterBscParams.to_meta_ds_dict"]], "to_meta_ds_dict() (eldamwl.backscatter.common.product.backscatters method)": [[6, "ELDAmwl.backscatter.common.product.Backscatters.to_meta_ds_dict"]], "bsccalibrationparams (class in eldamwl.backscatter.common.calibration.params)": [[7, "ELDAmwl.backscatter.common.calibration.params.BscCalibrationParams"]], "eldamwl.backscatter.common.calibration": [[7, "module-ELDAmwl.backscatter.common.calibration"]], "eldamwl.backscatter.common.calibration.operation": [[7, "module-ELDAmwl.backscatter.common.calibration.operation"]], "eldamwl.backscatter.common.calibration.params": [[7, "module-ELDAmwl.backscatter.common.calibration.params"]], "findbsccalibrwindowasinelda (class in eldamwl.backscatter.common.calibration.operation)": [[7, "ELDAmwl.backscatter.common.calibration.operation.FindBscCalibrWindowAsInELDA"]], "findcommonbsccalibrwindow (class in eldamwl.backscatter.common.calibration.operation)": [[7, "ELDAmwl.backscatter.common.calibration.operation.FindCommonBscCalibrWindow"]], "bsc_params (eldamwl.backscatter.common.calibration.operation.findbsccalibrwindowasinelda attribute)": [[7, "ELDAmwl.backscatter.common.calibration.operation.FindBscCalibrWindowAsInELDA.bsc_params"]], "create_calibration_window_datarray() (eldamwl.backscatter.common.calibration.operation.findbsccalibrwindowasinelda method)": [[7, "ELDAmwl.backscatter.common.calibration.operation.FindBscCalibrWindowAsInELDA.create_calibration_window_datarray"]], "data_storage (eldamwl.backscatter.common.calibration.operation.findbsccalibrwindowasinelda attribute)": [[7, "ELDAmwl.backscatter.common.calibration.operation.FindBscCalibrWindowAsInELDA.data_storage"]], "equal() (eldamwl.backscatter.common.calibration.params.bsccalibrationparams method)": [[7, "ELDAmwl.backscatter.common.calibration.params.BscCalibrationParams.equal"]], "find_calibration_window() (eldamwl.backscatter.common.calibration.operation.findbsccalibrwindowasinelda method)": [[7, "ELDAmwl.backscatter.common.calibration.operation.FindBscCalibrWindowAsInELDA.find_calibration_window"]], "from_db() (eldamwl.backscatter.common.calibration.params.bsccalibrationparams class method)": [[7, "ELDAmwl.backscatter.common.calibration.params.BscCalibrationParams.from_db"]], "get_classname_from_db() (eldamwl.backscatter.common.calibration.operation.findcommonbsccalibrwindow method)": [[7, "ELDAmwl.backscatter.common.calibration.operation.FindCommonBscCalibrWindow.get_classname_from_db"]], "get_rolling_window_properties() (eldamwl.backscatter.common.calibration.operation.findbsccalibrwindowasinelda method)": [[7, "ELDAmwl.backscatter.common.calibration.operation.FindBscCalibrWindowAsInELDA.get_rolling_window_properties"]], "init() (eldamwl.backscatter.common.calibration.operation.findbsccalibrwindowasinelda method)": [[7, "ELDAmwl.backscatter.common.calibration.operation.FindBscCalibrWindowAsInELDA.init"]], "name (eldamwl.backscatter.common.calibration.operation.findbsccalibrwindowasinelda attribute)": [[7, "ELDAmwl.backscatter.common.calibration.operation.FindBscCalibrWindowAsInELDA.name"]], "name (eldamwl.backscatter.common.calibration.operation.findcommonbsccalibrwindow attribute)": [[7, "ELDAmwl.backscatter.common.calibration.operation.FindCommonBscCalibrWindow.name"]], "run() (eldamwl.backscatter.common.calibration.operation.findbsccalibrwindowasinelda method)": [[7, "ELDAmwl.backscatter.common.calibration.operation.FindBscCalibrWindowAsInELDA.run"]], "to_meta_ds_dict() (eldamwl.backscatter.common.calibration.params.bsccalibrationparams method)": [[7, "ELDAmwl.backscatter.common.calibration.params.BscCalibrationParams.to_meta_ds_dict"]], "eldamwl.backscatter.common.vertical_resolution": [[8, "module-ELDAmwl.backscatter.common.vertical_resolution"]], "eldamwl.backscatter.common.vertical_resolution.operation": [[8, "module-ELDAmwl.backscatter.common.vertical_resolution.operation"]], "elastbsceffbinres (class in eldamwl.backscatter.common.vertical_resolution.operation)": [[8, "ELDAmwl.backscatter.common.vertical_resolution.operation.ElastBscEffBinRes"]], "elastbscusedbinres (class in eldamwl.backscatter.common.vertical_resolution.operation)": [[8, "ELDAmwl.backscatter.common.vertical_resolution.operation.ElastBscUsedBinRes"]], "rambsceffbinres (class in eldamwl.backscatter.common.vertical_resolution.operation)": [[8, "ELDAmwl.backscatter.common.vertical_resolution.operation.RamBscEffBinRes"]], "rambscusedbinres (class in eldamwl.backscatter.common.vertical_resolution.operation)": [[8, "ELDAmwl.backscatter.common.vertical_resolution.operation.RamBscUsedBinRes"]], "savgolayeffbinres (class in eldamwl.backscatter.common.vertical_resolution.operation)": [[8, "ELDAmwl.backscatter.common.vertical_resolution.operation.SavGolayEffBinRes"]], "savgolayusedbinres (class in eldamwl.backscatter.common.vertical_resolution.operation)": [[8, "ELDAmwl.backscatter.common.vertical_resolution.operation.SavGolayUsedBinRes"]], "get_classname_from_db() (eldamwl.backscatter.common.vertical_resolution.operation.elastbsceffbinres method)": [[8, "ELDAmwl.backscatter.common.vertical_resolution.operation.ElastBscEffBinRes.get_classname_from_db"]], "get_classname_from_db() (eldamwl.backscatter.common.vertical_resolution.operation.elastbscusedbinres method)": [[8, "ELDAmwl.backscatter.common.vertical_resolution.operation.ElastBscUsedBinRes.get_classname_from_db"]], "get_classname_from_db() (eldamwl.backscatter.common.vertical_resolution.operation.rambsceffbinres method)": [[8, "ELDAmwl.backscatter.common.vertical_resolution.operation.RamBscEffBinRes.get_classname_from_db"]], "get_classname_from_db() (eldamwl.backscatter.common.vertical_resolution.operation.rambscusedbinres method)": [[8, "ELDAmwl.backscatter.common.vertical_resolution.operation.RamBscUsedBinRes.get_classname_from_db"]], "name (eldamwl.backscatter.common.vertical_resolution.operation.elastbsceffbinres attribute)": [[8, "ELDAmwl.backscatter.common.vertical_resolution.operation.ElastBscEffBinRes.name"]], "name (eldamwl.backscatter.common.vertical_resolution.operation.elastbscusedbinres attribute)": [[8, "ELDAmwl.backscatter.common.vertical_resolution.operation.ElastBscUsedBinRes.name"]], "name (eldamwl.backscatter.common.vertical_resolution.operation.rambsceffbinres attribute)": [[8, "ELDAmwl.backscatter.common.vertical_resolution.operation.RamBscEffBinRes.name"]], "name (eldamwl.backscatter.common.vertical_resolution.operation.rambscusedbinres attribute)": [[8, "ELDAmwl.backscatter.common.vertical_resolution.operation.RamBscUsedBinRes.name"]], "name (eldamwl.backscatter.common.vertical_resolution.operation.savgolayeffbinres attribute)": [[8, "ELDAmwl.backscatter.common.vertical_resolution.operation.SavGolayEffBinRes.name"]], "name (eldamwl.backscatter.common.vertical_resolution.operation.savgolayusedbinres attribute)": [[8, "ELDAmwl.backscatter.common.vertical_resolution.operation.SavGolayUsedBinRes.name"]], "prod_id (eldamwl.backscatter.common.vertical_resolution.operation.elastbsceffbinres attribute)": [[8, "ELDAmwl.backscatter.common.vertical_resolution.operation.ElastBscEffBinRes.prod_id"]], "prod_id (eldamwl.backscatter.common.vertical_resolution.operation.elastbscusedbinres attribute)": [[8, "ELDAmwl.backscatter.common.vertical_resolution.operation.ElastBscUsedBinRes.prod_id"]], "prod_id (eldamwl.backscatter.common.vertical_resolution.operation.rambsceffbinres attribute)": [[8, "ELDAmwl.backscatter.common.vertical_resolution.operation.RamBscEffBinRes.prod_id"]], "prod_id (eldamwl.backscatter.common.vertical_resolution.operation.rambscusedbinres attribute)": [[8, "ELDAmwl.backscatter.common.vertical_resolution.operation.RamBscUsedBinRes.prod_id"]], "run() (eldamwl.backscatter.common.vertical_resolution.operation.savgolayeffbinres method)": [[8, "ELDAmwl.backscatter.common.vertical_resolution.operation.SavGolayEffBinRes.run"]], "run() (eldamwl.backscatter.common.vertical_resolution.operation.savgolayusedbinres method)": [[8, "ELDAmwl.backscatter.common.vertical_resolution.operation.SavGolayUsedBinRes.run"]], "calcelastbackscatter (class in eldamwl.backscatter.elastic.operation)": [[9, "ELDAmwl.backscatter.elastic.operation.CalcElastBackscatter"]], "calcelastbackscatterdefault (class in eldamwl.backscatter.elastic.operation)": [[9, "ELDAmwl.backscatter.elastic.operation.CalcElastBackscatterDefault"]], "eldamwl.backscatter.elastic": [[9, "module-ELDAmwl.backscatter.elastic"]], "eldamwl.backscatter.elastic.operation": [[9, "module-ELDAmwl.backscatter.elastic.operation"]], "eldamwl.backscatter.elastic.params": [[9, "module-ELDAmwl.backscatter.elastic.params"]], "eldamwl.backscatter.elastic.product": [[9, "module-ELDAmwl.backscatter.elastic.product"]], "elastbackscatterfactory (class in eldamwl.backscatter.elastic.operation)": [[9, "ELDAmwl.backscatter.elastic.operation.ElastBackscatterFactory"]], "elastbackscatterfactorydefault (class in eldamwl.backscatter.elastic.operation)": [[9, "ELDAmwl.backscatter.elastic.operation.ElastBackscatterFactoryDefault"]], "elastbackscatters (class in eldamwl.backscatter.elastic.product)": [[9, "ELDAmwl.backscatter.elastic.product.ElastBackscatters"]], "elastbscparams (class in eldamwl.backscatter.elastic.params)": [[9, "ELDAmwl.backscatter.elastic.params.ElastBscParams"]], "bsc_params (eldamwl.backscatter.elastic.operation.calcelastbackscatterdefault attribute)": [[9, "ELDAmwl.backscatter.elastic.operation.CalcElastBackscatterDefault.bsc_params"]], "calc_routine (eldamwl.backscatter.elastic.operation.calcelastbackscatterdefault attribute)": [[9, "ELDAmwl.backscatter.elastic.operation.CalcElastBackscatterDefault.calc_routine"]], "calibr_window (eldamwl.backscatter.elastic.operation.calcelastbackscatterdefault attribute)": [[9, "ELDAmwl.backscatter.elastic.operation.CalcElastBackscatterDefault.calibr_window"]], "elast_sig (eldamwl.backscatter.elastic.operation.calcelastbackscatterdefault attribute)": [[9, "ELDAmwl.backscatter.elastic.operation.CalcElastBackscatterDefault.elast_sig"]], "from_db() (eldamwl.backscatter.elastic.params.elastbscparams method)": [[9, "ELDAmwl.backscatter.elastic.params.ElastBscParams.from_db"]], "get_classname_from_db() (eldamwl.backscatter.elastic.operation.calcelastbackscatter method)": [[9, "ELDAmwl.backscatter.elastic.operation.CalcElastBackscatter.get_classname_from_db"]], "get_classname_from_db() (eldamwl.backscatter.elastic.operation.elastbackscatterfactory method)": [[9, "ELDAmwl.backscatter.elastic.operation.ElastBackscatterFactory.get_classname_from_db"]], "get_non_merge_product() (eldamwl.backscatter.elastic.operation.elastbackscatterfactorydefault method)": [[9, "ELDAmwl.backscatter.elastic.operation.ElastBackscatterFactoryDefault.get_non_merge_product"]], "init() (eldamwl.backscatter.elastic.product.elastbackscatters class method)": [[9, "ELDAmwl.backscatter.elastic.product.ElastBackscatters.init"]], "name (eldamwl.backscatter.elastic.operation.calcelastbackscatter attribute)": [[9, "ELDAmwl.backscatter.elastic.operation.CalcElastBackscatter.name"]], "name (eldamwl.backscatter.elastic.operation.calcelastbackscatterdefault attribute)": [[9, "ELDAmwl.backscatter.elastic.operation.CalcElastBackscatterDefault.name"]], "name (eldamwl.backscatter.elastic.operation.elastbackscatterfactory attribute)": [[9, "ELDAmwl.backscatter.elastic.operation.ElastBackscatterFactory.name"]], "name (eldamwl.backscatter.elastic.operation.elastbackscatterfactorydefault attribute)": [[9, "ELDAmwl.backscatter.elastic.operation.ElastBackscatterFactoryDefault.name"]], "prepare() (eldamwl.backscatter.elastic.operation.elastbackscatterfactorydefault method)": [[9, "ELDAmwl.backscatter.elastic.operation.ElastBackscatterFactoryDefault.prepare"]], "result (eldamwl.backscatter.elastic.operation.calcelastbackscatterdefault attribute)": [[9, "ELDAmwl.backscatter.elastic.operation.CalcElastBackscatterDefault.result"]], "run() (eldamwl.backscatter.elastic.operation.calcelastbackscatterdefault method)": [[9, "ELDAmwl.backscatter.elastic.operation.CalcElastBackscatterDefault.run"]], "to_meta_ds_dict() (eldamwl.backscatter.elastic.params.elastbscparams method)": [[9, "ELDAmwl.backscatter.elastic.params.ElastBscParams.to_meta_ds_dict"]], "to_meta_ds_dict() (eldamwl.backscatter.elastic.product.elastbackscatters method)": [[9, "ELDAmwl.backscatter.elastic.product.ElastBackscatters.to_meta_ds_dict"]], "calcbscprofileiter (class in eldamwl.backscatter.elastic.tools.operation)": [[10, "ELDAmwl.backscatter.elastic.tools.operation.CalcBscProfileIter"]], "calcbscprofilekf (class in eldamwl.backscatter.elastic.tools.operation)": [[10, "ELDAmwl.backscatter.elastic.tools.operation.CalcBscProfileKF"]], "calcelastbscprofile (class in eldamwl.backscatter.elastic.tools.operation)": [[10, "ELDAmwl.backscatter.elastic.tools.operation.CalcElastBscProfile"]], "eldamwl.backscatter.elastic.tools": [[10, "module-ELDAmwl.backscatter.elastic.tools"]], "eldamwl.backscatter.elastic.tools.operation": [[10, "module-ELDAmwl.backscatter.elastic.tools.operation"]], "calibration (eldamwl.backscatter.elastic.tools.operation.calcbscprofilekf attribute)": [[10, "ELDAmwl.backscatter.elastic.tools.operation.CalcBscProfileKF.calibration"]], "elast_sig (eldamwl.backscatter.elastic.tools.operation.calcbscprofilekf attribute)": [[10, "ELDAmwl.backscatter.elastic.tools.operation.CalcBscProfileKF.elast_sig"]], "error_params (eldamwl.backscatter.elastic.tools.operation.calcbscprofilekf attribute)": [[10, "ELDAmwl.backscatter.elastic.tools.operation.CalcBscProfileKF.error_params"]], "get_classname_from_db() (eldamwl.backscatter.elastic.tools.operation.calcelastbscprofile method)": [[10, "ELDAmwl.backscatter.elastic.tools.operation.CalcElastBscProfile.get_classname_from_db"]], "name (eldamwl.backscatter.elastic.tools.operation.calcbscprofilekf attribute)": [[10, "ELDAmwl.backscatter.elastic.tools.operation.CalcBscProfileKF.name"]], "range_axis (eldamwl.backscatter.elastic.tools.operation.calcbscprofilekf attribute)": [[10, "ELDAmwl.backscatter.elastic.tools.operation.CalcBscProfileKF.range_axis"]], "rayl_scat (eldamwl.backscatter.elastic.tools.operation.calcbscprofilekf attribute)": [[10, "ELDAmwl.backscatter.elastic.tools.operation.CalcBscProfileKF.rayl_scat"]], "run() (eldamwl.backscatter.elastic.tools.operation.calcbscprofilekf method)": [[10, "ELDAmwl.backscatter.elastic.tools.operation.CalcBscProfileKF.run"]], "calcramanbackscatter (class in eldamwl.backscatter.raman.operation)": [[11, "ELDAmwl.backscatter.raman.operation.CalcRamanBackscatter"]], "calcramanbackscatterdefault (class in eldamwl.backscatter.raman.operation)": [[11, "ELDAmwl.backscatter.raman.operation.CalcRamanBackscatterDefault"]], "eldamwl.backscatter.raman": [[11, "module-ELDAmwl.backscatter.raman"]], "eldamwl.backscatter.raman.operation": [[11, "module-ELDAmwl.backscatter.raman.operation"]], "eldamwl.backscatter.raman.params": [[11, "module-ELDAmwl.backscatter.raman.params"]], "eldamwl.backscatter.raman.product": [[11, "module-ELDAmwl.backscatter.raman.product"]], "ramanbackscatterfactory (class in eldamwl.backscatter.raman.operation)": [[11, "ELDAmwl.backscatter.raman.operation.RamanBackscatterFactory"]], "ramanbackscatterfactorydefault (class in eldamwl.backscatter.raman.operation)": [[11, "ELDAmwl.backscatter.raman.operation.RamanBackscatterFactoryDefault"]], "ramanbackscatters (class in eldamwl.backscatter.raman.product)": [[11, "ELDAmwl.backscatter.raman.product.RamanBackscatters"]], "ramanbscparams (class in eldamwl.backscatter.raman.params)": [[11, "ELDAmwl.backscatter.raman.params.RamanBscParams"]], "add_signal_role() (eldamwl.backscatter.raman.params.ramanbscparams method)": [[11, "ELDAmwl.backscatter.raman.params.RamanBscParams.add_signal_role"]], "bsc_params (eldamwl.backscatter.raman.operation.calcramanbackscatterdefault attribute)": [[11, "ELDAmwl.backscatter.raman.operation.CalcRamanBackscatterDefault.bsc_params"]], "calc_routine (eldamwl.backscatter.raman.operation.calcramanbackscatterdefault attribute)": [[11, "ELDAmwl.backscatter.raman.operation.CalcRamanBackscatterDefault.calc_routine"]], "calibr_window (eldamwl.backscatter.raman.operation.calcramanbackscatterdefault attribute)": [[11, "ELDAmwl.backscatter.raman.operation.CalcRamanBackscatterDefault.calibr_window"]], "from_db() (eldamwl.backscatter.raman.params.ramanbscparams method)": [[11, "ELDAmwl.backscatter.raman.params.RamanBscParams.from_db"]], "get_classname_from_db() (eldamwl.backscatter.raman.operation.calcramanbackscatter method)": [[11, "ELDAmwl.backscatter.raman.operation.CalcRamanBackscatter.get_classname_from_db"]], "get_classname_from_db() (eldamwl.backscatter.raman.operation.ramanbackscatterfactory method)": [[11, "ELDAmwl.backscatter.raman.operation.RamanBackscatterFactory.get_classname_from_db"]], "get_non_merge_product() (eldamwl.backscatter.raman.operation.ramanbackscatterfactorydefault method)": [[11, "ELDAmwl.backscatter.raman.operation.RamanBackscatterFactoryDefault.get_non_merge_product"]], "init() (eldamwl.backscatter.raman.product.ramanbackscatters class method)": [[11, "ELDAmwl.backscatter.raman.product.RamanBackscatters.init"]], "name (eldamwl.backscatter.raman.operation.calcramanbackscatter attribute)": [[11, "ELDAmwl.backscatter.raman.operation.CalcRamanBackscatter.name"]], "name (eldamwl.backscatter.raman.operation.calcramanbackscatterdefault attribute)": [[11, "ELDAmwl.backscatter.raman.operation.CalcRamanBackscatterDefault.name"]], "name (eldamwl.backscatter.raman.operation.ramanbackscatterfactory attribute)": [[11, "ELDAmwl.backscatter.raman.operation.RamanBackscatterFactory.name"]], "name (eldamwl.backscatter.raman.operation.ramanbackscatterfactorydefault attribute)": [[11, "ELDAmwl.backscatter.raman.operation.RamanBackscatterFactoryDefault.name"]], "prepare() (eldamwl.backscatter.raman.operation.ramanbackscatterfactorydefault method)": [[11, "ELDAmwl.backscatter.raman.operation.RamanBackscatterFactoryDefault.prepare"]], "raman_sig (eldamwl.backscatter.raman.operation.ramanbackscatterfactorydefault attribute)": [[11, "ELDAmwl.backscatter.raman.operation.RamanBackscatterFactoryDefault.raman_sig"]], "result (eldamwl.backscatter.raman.operation.calcramanbackscatterdefault attribute)": [[11, "ELDAmwl.backscatter.raman.operation.CalcRamanBackscatterDefault.result"]], "run() (eldamwl.backscatter.raman.operation.calcramanbackscatterdefault method)": [[11, "ELDAmwl.backscatter.raman.operation.CalcRamanBackscatterDefault.run"]], "sig_ratio (eldamwl.backscatter.raman.operation.ramanbackscatterfactorydefault attribute)": [[11, "ELDAmwl.backscatter.raman.operation.RamanBackscatterFactoryDefault.sig_ratio"]], "sigratio (eldamwl.backscatter.raman.operation.calcramanbackscatterdefault attribute)": [[11, "ELDAmwl.backscatter.raman.operation.CalcRamanBackscatterDefault.sigratio"]], "to_meta_ds_dict() (eldamwl.backscatter.raman.params.ramanbscparams method)": [[11, "ELDAmwl.backscatter.raman.params.RamanBscParams.to_meta_ds_dict"]], "calcramanbscprofile (class in eldamwl.backscatter.raman.tools.operation)": [[12, "ELDAmwl.backscatter.raman.tools.operation.CalcRamanBscProfile"]], "calcramanbscprofileviabr (class in eldamwl.backscatter.raman.tools.operation)": [[12, "ELDAmwl.backscatter.raman.tools.operation.CalcRamanBscProfileViaBR"]], "eldamwl.backscatter.raman.tools": [[12, "module-ELDAmwl.backscatter.raman.tools"]], "eldamwl.backscatter.raman.tools.operation": [[12, "module-ELDAmwl.backscatter.raman.tools.operation"]], "calibration (eldamwl.backscatter.raman.tools.operation.calcramanbscprofileviabr attribute)": [[12, "ELDAmwl.backscatter.raman.tools.operation.CalcRamanBscProfileViaBR.calibration"]], "error_params (eldamwl.backscatter.raman.tools.operation.calcramanbscprofileviabr attribute)": [[12, "ELDAmwl.backscatter.raman.tools.operation.CalcRamanBscProfileViaBR.error_params"]], "get_classname_from_db() (eldamwl.backscatter.raman.tools.operation.calcramanbscprofile method)": [[12, "ELDAmwl.backscatter.raman.tools.operation.CalcRamanBscProfile.get_classname_from_db"]], "name (eldamwl.backscatter.raman.tools.operation.calcramanbscprofile attribute)": [[12, "ELDAmwl.backscatter.raman.tools.operation.CalcRamanBscProfile.name"]], "name (eldamwl.backscatter.raman.tools.operation.calcramanbscprofileviabr attribute)": [[12, "ELDAmwl.backscatter.raman.tools.operation.CalcRamanBscProfileViaBR.name"]], "prod_id (eldamwl.backscatter.raman.tools.operation.calcramanbscprofile attribute)": [[12, "ELDAmwl.backscatter.raman.tools.operation.CalcRamanBscProfile.prod_id"]], "run() (eldamwl.backscatter.raman.tools.operation.calcramanbscprofileviabr method)": [[12, "ELDAmwl.backscatter.raman.tools.operation.CalcRamanBscProfileViaBR.run"]], "sigratio (eldamwl.backscatter.raman.tools.operation.calcramanbscprofileviabr attribute)": [[12, "ELDAmwl.backscatter.raman.tools.operation.CalcRamanBscProfileViaBR.sigratio"]], "baseoperation (class in eldamwl.bases.factory)": [[13, "ELDAmwl.bases.factory.BaseOperation"]], "baseoperationfactory (class in eldamwl.bases.factory)": [[13, "ELDAmwl.bases.factory.BaseOperationFactory"]], "columns (class in eldamwl.bases.columns)": [[13, "ELDAmwl.bases.columns.Columns"]], "datapoint (class in eldamwl.bases.base)": [[13, "ELDAmwl.bases.base.DataPoint"]], "eldabase (class in eldamwl.bases.base)": [[13, "ELDAmwl.bases.base.ELDABase"]], "eldamwl.bases": [[13, "module-ELDAmwl.bases"]], "eldamwl.bases.base": [[13, "module-ELDAmwl.bases.base"]], "eldamwl.bases.columns": [[13, "module-ELDAmwl.bases.columns"]], "eldamwl.bases.factory": [[13, "module-ELDAmwl.bases.factory"]], "params (class in eldamwl.bases.base)": [[13, "ELDAmwl.bases.base.Params"]], "altitude (eldamwl.bases.columns.columns property)": [[13, "ELDAmwl.bases.columns.Columns.altitude"]], "angle_to_time_dependent_var() (eldamwl.bases.columns.columns method)": [[13, "ELDAmwl.bases.columns.Columns.angle_to_time_dependent_var"]], "binres (eldamwl.bases.columns.columns property)": [[13, "ELDAmwl.bases.columns.Columns.binres"]], "cfg (eldamwl.bases.factory.baseoperation property)": [[13, "ELDAmwl.bases.factory.BaseOperation.cfg"]], "data (eldamwl.bases.columns.columns property)": [[13, "ELDAmwl.bases.columns.Columns.data"]], "db_func (eldamwl.bases.base.params property)": [[13, "ELDAmwl.bases.base.Params.db_func"]], "db_func (eldamwl.bases.factory.baseoperation property)": [[13, "ELDAmwl.bases.factory.BaseOperation.db_func"]], "db_func (eldamwl.bases.factory.baseoperationfactory property)": [[13, "ELDAmwl.bases.factory.BaseOperationFactory.db_func"]], "err (eldamwl.bases.columns.columns property)": [[13, "ELDAmwl.bases.columns.Columns.err"]], "first_valid_bin() (eldamwl.bases.columns.columns method)": [[13, "ELDAmwl.bases.columns.Columns.first_valid_bin"]], "from_data() (eldamwl.bases.base.datapoint class method)": [[13, "ELDAmwl.bases.base.DataPoint.from_data"]], "from_nc_file() (eldamwl.bases.base.datapoint class method)": [[13, "ELDAmwl.bases.base.DataPoint.from_nc_file"]], "get_class() (eldamwl.bases.factory.baseoperationfactory method)": [[13, "ELDAmwl.bases.factory.BaseOperationFactory.get_class"]], "get_classname_from_db() (eldamwl.bases.factory.baseoperationfactory method)": [[13, "ELDAmwl.bases.factory.BaseOperationFactory.get_classname_from_db"]], "height (eldamwl.bases.columns.columns property)": [[13, "ELDAmwl.bases.columns.Columns.height"]], "init() (eldamwl.bases.factory.baseoperation method)": [[13, "ELDAmwl.bases.factory.BaseOperation.init"]], "last_valid_bin() (eldamwl.bases.columns.columns method)": [[13, "ELDAmwl.bases.columns.Columns.last_valid_bin"]], "logger (eldamwl.bases.base.eldabase property)": [[13, "ELDAmwl.bases.base.ELDABase.logger"]], "logger (eldamwl.bases.base.params property)": [[13, "ELDAmwl.bases.base.Params.logger"]], "logger (eldamwl.bases.columns.columns property)": [[13, "ELDAmwl.bases.columns.Columns.logger"]], "logger (eldamwl.bases.factory.baseoperation property)": [[13, "ELDAmwl.bases.factory.BaseOperation.logger"]], "name (eldamwl.bases.factory.baseoperationfactory attribute)": [[13, "ELDAmwl.bases.factory.BaseOperationFactory.name"]], "num_levels (eldamwl.bases.columns.columns property)": [[13, "ELDAmwl.bases.columns.Columns.num_levels"]], "num_times (eldamwl.bases.columns.columns property)": [[13, "ELDAmwl.bases.columns.Columns.num_times"]], "params (eldamwl.bases.factory.baseoperation property)": [[13, "ELDAmwl.bases.factory.BaseOperation.params"]], "qf (eldamwl.bases.columns.columns property)": [[13, "ELDAmwl.bases.columns.Columns.qf"]], "rel_err (eldamwl.bases.columns.columns property)": [[13, "ELDAmwl.bases.columns.Columns.rel_err"]], "rel_error (eldamwl.bases.base.datapoint property)": [[13, "ELDAmwl.bases.base.DataPoint.rel_error"]], "set_invalid_point() (eldamwl.bases.columns.columns method)": [[13, "ELDAmwl.bases.columns.Columns.set_invalid_point"]], "stat_error (eldamwl.bases.base.datapoint property)": [[13, "ELDAmwl.bases.base.DataPoint.stat_error"]], "sys_error (eldamwl.bases.base.datapoint property)": [[13, "ELDAmwl.bases.base.DataPoint.sys_error"]], "value (eldamwl.bases.base.datapoint property)": [[13, "ELDAmwl.bases.base.DataPoint.value"]], "eldamwl.component": [[14, "module-ELDAmwl.component"]], "eldamwl.component.interface": [[14, "module-ELDAmwl.component.interface"]], "eldamwl.component.plugins": [[14, "module-ELDAmwl.component.plugins"]], "eldamwl.component.registry": [[14, "module-ELDAmwl.component.registry"]], "factoryregistry (class in eldamwl.component.registry)": [[14, "ELDAmwl.component.registry.FactoryRegistry"]], "registry (class in eldamwl.component.registry)": [[14, "ELDAmwl.component.registry.Registry"]], "find_class_by_name() (eldamwl.component.registry.factoryregistry method)": [[14, "ELDAmwl.component.registry.FactoryRegistry.find_class_by_name"]], "find_class_by_name() (eldamwl.component.registry.registry method)": [[14, "ELDAmwl.component.registry.Registry.find_class_by_name"]], "get_factory_registration() (eldamwl.component.registry.registry method)": [[14, "ELDAmwl.component.registry.Registry.get_factory_registration"]], "register_class() (eldamwl.component.registry.factoryregistry method)": [[14, "ELDAmwl.component.registry.FactoryRegistry.register_class"]], "register_class() (eldamwl.component.registry.registry method)": [[14, "ELDAmwl.component.registry.Registry.register_class"]], "register_plugins() (in module eldamwl.component.plugins)": [[14, "ELDAmwl.component.plugins.register_plugins"]], "status() (eldamwl.component.registry.registry method)": [[14, "ELDAmwl.component.registry.Registry.status"]], "dbfunc (class in eldamwl.database.db_functions)": [[15, "ELDAmwl.database.db_functions.DBFunc"]], "dbutils (class in eldamwl.database.db)": [[15, "ELDAmwl.database.db.DBUtils"]], "eldamwl.database": [[15, "module-ELDAmwl.database"]], "eldamwl.database.db": [[15, "module-ELDAmwl.database.db"]], "eldamwl.database.db_functions": [[15, "module-ELDAmwl.database.db_functions"]], "cfg (eldamwl.database.db.dbutils property)": [[15, "ELDAmwl.database.db.DBUtils.cfg"]], "db_log() (eldamwl.database.db_functions.dbfunc method)": [[15, "ELDAmwl.database.db_functions.DBFunc.db_log"]], "engine (eldamwl.database.db.dbutils attribute)": [[15, "ELDAmwl.database.db.DBUtils.engine"]], "get_basic_products_query() (eldamwl.database.db_functions.dbfunc method)": [[15, "ELDAmwl.database.db_functions.DBFunc.get_basic_products_query"]], "get_bsc_cal_params_query() (eldamwl.database.db_functions.dbfunc method)": [[15, "ELDAmwl.database.db_functions.DBFunc.get_bsc_cal_params_query"]], "get_connect_string() (eldamwl.database.db.dbutils method)": [[15, "ELDAmwl.database.db.DBUtils.get_connect_string"]], "get_derived_products_query() (eldamwl.database.db_functions.dbfunc method)": [[15, "ELDAmwl.database.db_functions.DBFunc.get_derived_products_query"]], "get_extended_general_params_query() (eldamwl.database.db_functions.dbfunc method)": [[15, "ELDAmwl.database.db_functions.DBFunc.get_extended_general_params_query"]], "get_mc_params_query() (eldamwl.database.db_functions.dbfunc method)": [[15, "ELDAmwl.database.db_functions.DBFunc.get_mc_params_query"]], "get_products_resolution_query() (eldamwl.database.db_functions.dbfunc method)": [[15, "ELDAmwl.database.db_functions.DBFunc.get_products_resolution_query"]], "get_quality_params_query() (eldamwl.database.db_functions.dbfunc method)": [[15, "ELDAmwl.database.db_functions.DBFunc.get_quality_params_query"]], "get_smooth_params_query() (eldamwl.database.db_functions.dbfunc method)": [[15, "ELDAmwl.database.db_functions.DBFunc.get_smooth_params_query"]], "init_engine() (eldamwl.database.db.dbutils method)": [[15, "ELDAmwl.database.db.DBUtils.init_engine"]], "logger (eldamwl.database.db.dbutils property)": [[15, "ELDAmwl.database.db.DBUtils.logger"]], "read_algorithm() (eldamwl.database.db_functions.dbfunc method)": [[15, "ELDAmwl.database.db_functions.DBFunc.read_algorithm"]], "read_algorithm_options() (eldamwl.database.db_functions.dbfunc method)": [[15, "ELDAmwl.database.db_functions.DBFunc.read_algorithm_options"]], "read_angstroem_exp_params() (eldamwl.database.db_functions.dbfunc method)": [[15, "ELDAmwl.database.db_functions.DBFunc.read_angstroem_exp_params"]], "read_classname() (eldamwl.database.db_functions.dbfunc method)": [[15, "ELDAmwl.database.db_functions.DBFunc.read_classname"]], "read_effbin_algorithm() (eldamwl.database.db_functions.dbfunc method)": [[15, "ELDAmwl.database.db_functions.DBFunc.read_effbin_algorithm"]], "read_elast_bsc_algorithm() (eldamwl.database.db_functions.dbfunc method)": [[15, "ELDAmwl.database.db_functions.DBFunc.read_elast_bsc_algorithm"]], "read_elast_bsc_effbin_algorithm() (eldamwl.database.db_functions.dbfunc method)": [[15, "ELDAmwl.database.db_functions.DBFunc.read_elast_bsc_effbin_algorithm"]], "read_elast_bsc_method_id() (eldamwl.database.db_functions.dbfunc method)": [[15, "ELDAmwl.database.db_functions.DBFunc.read_elast_bsc_method_id"]], "read_elast_bsc_params() (eldamwl.database.db_functions.dbfunc method)": [[15, "ELDAmwl.database.db_functions.DBFunc.read_elast_bsc_params"]], "read_elast_bsc_smooth_method_id() (eldamwl.database.db_functions.dbfunc method)": [[15, "ELDAmwl.database.db_functions.DBFunc.read_elast_bsc_smooth_method_id"]], "read_elast_bsc_usedbin_algorithm() (eldamwl.database.db_functions.dbfunc method)": [[15, "ELDAmwl.database.db_functions.DBFunc.read_elast_bsc_usedbin_algorithm"]], "read_ext_effbin_algorithm() (eldamwl.database.db_functions.dbfunc method)": [[15, "ELDAmwl.database.db_functions.DBFunc.read_ext_effbin_algorithm"]], "read_ext_method_id() (eldamwl.database.db_functions.dbfunc method)": [[15, "ELDAmwl.database.db_functions.DBFunc.read_ext_method_id"]], "read_ext_usedbin_algorithm() (eldamwl.database.db_functions.dbfunc method)": [[15, "ELDAmwl.database.db_functions.DBFunc.read_ext_usedbin_algorithm"]], "read_extinction_algorithm() (eldamwl.database.db_functions.dbfunc method)": [[15, "ELDAmwl.database.db_functions.DBFunc.read_extinction_algorithm"]], "read_extinction_params() (eldamwl.database.db_functions.dbfunc method)": [[15, "ELDAmwl.database.db_functions.DBFunc.read_extinction_params"]], "read_full_overlap() (eldamwl.database.db_functions.dbfunc method)": [[15, "ELDAmwl.database.db_functions.DBFunc.read_full_overlap"]], "read_iter_bsc_params() (eldamwl.database.db_functions.dbfunc method)": [[15, "ELDAmwl.database.db_functions.DBFunc.read_iter_bsc_params"]], "read_lidar_ratio_params() (eldamwl.database.db_functions.dbfunc method)": [[15, "ELDAmwl.database.db_functions.DBFunc.read_lidar_ratio_params"]], "read_mwl_product_id() (eldamwl.database.db_functions.dbfunc method)": [[15, "ELDAmwl.database.db_functions.DBFunc.read_mwl_product_id"]], "read_raman_bsc_algorithm() (eldamwl.database.db_functions.dbfunc method)": [[15, "ELDAmwl.database.db_functions.DBFunc.read_raman_bsc_algorithm"]], "read_raman_bsc_effbin_algorithm() (eldamwl.database.db_functions.dbfunc method)": [[15, "ELDAmwl.database.db_functions.DBFunc.read_raman_bsc_effbin_algorithm"]], "read_raman_bsc_method_id() (eldamwl.database.db_functions.dbfunc method)": [[15, "ELDAmwl.database.db_functions.DBFunc.read_raman_bsc_method_id"]], "read_raman_bsc_params() (eldamwl.database.db_functions.dbfunc method)": [[15, "ELDAmwl.database.db_functions.DBFunc.read_raman_bsc_params"]], "read_raman_bsc_smooth_method_id() (eldamwl.database.db_functions.dbfunc method)": [[15, "ELDAmwl.database.db_functions.DBFunc.read_raman_bsc_smooth_method_id"]], "read_raman_bsc_usedbin_algorithm() (eldamwl.database.db_functions.dbfunc method)": [[15, "ELDAmwl.database.db_functions.DBFunc.read_raman_bsc_usedbin_algorithm"]], "read_smooth_routine() (eldamwl.database.db_functions.dbfunc method)": [[15, "ELDAmwl.database.db_functions.DBFunc.read_smooth_routine"]], "read_system_id() (eldamwl.database.db_functions.dbfunc method)": [[15, "ELDAmwl.database.db_functions.DBFunc.read_system_id"]], "read_usedbin_algorithm() (eldamwl.database.db_functions.dbfunc method)": [[15, "ELDAmwl.database.db_functions.DBFunc.read_usedbin_algorithm"]], "register_db_func() (in module eldamwl.database.db_functions)": [[15, "ELDAmwl.database.db_functions.register_db_func"]], "register_mwl_file_to_db() (eldamwl.database.db_functions.dbfunc method)": [[15, "ELDAmwl.database.db_functions.DBFunc.register_mwl_file_to_db"]], "session (eldamwl.database.db.dbutils attribute)": [[15, "ELDAmwl.database.db.DBUtils.session"]], "test_db() (eldamwl.database.db.dbutils method)": [[15, "ELDAmwl.database.db.DBUtils.test_db"]], "write_lidar_constant_in_db() (eldamwl.database.db_functions.dbfunc method)": [[15, "ELDAmwl.database.db_functions.DBFunc.write_lidar_constant_in_db"]], "bsccalibrlowestheight (class in eldamwl.database.tables.backscatter)": [[16, "ELDAmwl.database.tables.backscatter.BscCalibrLowestHeight"]], "bsccalibrmethod (class in eldamwl.database.tables.backscatter)": [[16, "ELDAmwl.database.tables.backscatter.BscCalibrMethod"]], "bsccalibrrangesearchmethod (class in eldamwl.database.tables.backscatter)": [[16, "ELDAmwl.database.tables.backscatter.BscCalibrRangeSearchMethod"]], "bsccalibrupperheight (class in eldamwl.database.tables.backscatter)": [[16, "ELDAmwl.database.tables.backscatter.BscCalibrUpperHeight"]], "bsccalibrvalue (class in eldamwl.database.tables.backscatter)": [[16, "ELDAmwl.database.tables.backscatter.BscCalibrValue"]], "bsccalibrwindow (class in eldamwl.database.tables.backscatter)": [[16, "ELDAmwl.database.tables.backscatter.BscCalibrWindow"]], "bscmethod (class in eldamwl.database.tables.backscatter)": [[16, "ELDAmwl.database.tables.backscatter.BscMethod"]], "channels (class in eldamwl.database.tables.channels)": [[16, "ELDAmwl.database.tables.channels.Channels"]], "elda_version (eldamwl.database.tables.lidar_constants.lidarconstants attribute)": [[16, "ELDAmwl.database.tables.lidar_constants.LidarConstants.ELDA_version"]], "eldamwl.database.tables": [[16, "module-ELDAmwl.database.tables"]], "eldamwl.database.tables.backscatter": [[16, "module-ELDAmwl.database.tables.backscatter"]], "eldamwl.database.tables.channels": [[16, "module-ELDAmwl.database.tables.channels"]], "eldamwl.database.tables.db_base": [[16, "module-ELDAmwl.database.tables.db_base"]], "eldamwl.database.tables.eldamwl_class_names": [[16, "module-ELDAmwl.database.tables.eldamwl_class_names"]], "eldamwl.database.tables.eldamwl_products": [[16, "module-ELDAmwl.database.tables.eldamwl_products"]], "eldamwl.database.tables.extinction": [[16, "module-ELDAmwl.database.tables.extinction"]], "eldamwl.database.tables.general": [[16, "module-ELDAmwl.database.tables.general"]], "eldamwl.database.tables.lidar_constants": [[16, "module-ELDAmwl.database.tables.lidar_constants"]], "eldamwl.database.tables.lidar_ratio": [[16, "module-ELDAmwl.database.tables.lidar_ratio"]], "eldamwl.database.tables.measurements": [[16, "module-ELDAmwl.database.tables.measurements"]], "eldamwl.database.tables.system_product": [[16, "module-ELDAmwl.database.tables.system_product"]], "eldamwlexitcodes (class in eldamwl.database.tables.general)": [[16, "ELDAmwl.database.tables.general.ELDAmwlExitCodes"]], "eldamwllogs (class in eldamwl.database.tables.general)": [[16, "ELDAmwl.database.tables.general.ELDAmwlLogs"]], "elastbackscatteroption (class in eldamwl.database.tables.backscatter)": [[16, "ELDAmwl.database.tables.backscatter.ElastBackscatterOption"]], "elastbscmethod (class in eldamwl.database.tables.backscatter)": [[16, "ELDAmwl.database.tables.backscatter.ElastBscMethod"]], "eldamwlclassnames (class in eldamwl.database.tables.eldamwl_class_names)": [[16, "ELDAmwl.database.tables.eldamwl_class_names.EldamwlClassNames"]], "eldamwlproducts (class in eldamwl.database.tables.eldamwl_products)": [[16, "ELDAmwl.database.tables.eldamwl_products.EldamwlProducts"]], "errorthresholds (class in eldamwl.database.tables.system_product)": [[16, "ELDAmwl.database.tables.system_product.ErrorThresholds"]], "extbscoption (class in eldamwl.database.tables.lidar_ratio)": [[16, "ELDAmwl.database.tables.lidar_ratio.ExtBscOption"]], "extmethod (class in eldamwl.database.tables.extinction)": [[16, "ELDAmwl.database.tables.extinction.ExtMethod"]], "extinctionoption (class in eldamwl.database.tables.extinction)": [[16, "ELDAmwl.database.tables.extinction.ExtinctionOption"]], "fov (eldamwl.database.tables.channels.channels attribute)": [[16, "ELDAmwl.database.tables.channels.Channels.FOV"]], "id (eldamwl.database.tables.backscatter.bsccalibrlowestheight attribute)": [[16, "ELDAmwl.database.tables.backscatter.BscCalibrLowestHeight.ID"]], "id (eldamwl.database.tables.backscatter.bsccalibrmethod attribute)": [[16, "ELDAmwl.database.tables.backscatter.BscCalibrMethod.ID"]], "id (eldamwl.database.tables.backscatter.bsccalibrrangesearchmethod attribute)": [[16, "ELDAmwl.database.tables.backscatter.BscCalibrRangeSearchMethod.ID"]], "id (eldamwl.database.tables.backscatter.bsccalibrupperheight attribute)": [[16, "ELDAmwl.database.tables.backscatter.BscCalibrUpperHeight.ID"]], "id (eldamwl.database.tables.backscatter.bsccalibrvalue attribute)": [[16, "ELDAmwl.database.tables.backscatter.BscCalibrValue.ID"]], "id (eldamwl.database.tables.backscatter.bsccalibrwindow attribute)": [[16, "ELDAmwl.database.tables.backscatter.BscCalibrWindow.ID"]], "id (eldamwl.database.tables.backscatter.bscmethod attribute)": [[16, "ELDAmwl.database.tables.backscatter.BscMethod.ID"]], "id (eldamwl.database.tables.backscatter.elastbackscatteroption attribute)": [[16, "ELDAmwl.database.tables.backscatter.ElastBackscatterOption.ID"]], "id (eldamwl.database.tables.backscatter.elastbscmethod attribute)": [[16, "ELDAmwl.database.tables.backscatter.ElastBscMethod.ID"]], "id (eldamwl.database.tables.backscatter.iterbackscatteroption attribute)": [[16, "ELDAmwl.database.tables.backscatter.IterBackscatterOption.ID"]], "id (eldamwl.database.tables.backscatter.lrfile attribute)": [[16, "ELDAmwl.database.tables.backscatter.LRFile.ID"]], "id (eldamwl.database.tables.backscatter.ramanbackscatteroption attribute)": [[16, "ELDAmwl.database.tables.backscatter.RamanBackscatterOption.ID"]], "id (eldamwl.database.tables.backscatter.ramanbscmethod attribute)": [[16, "ELDAmwl.database.tables.backscatter.RamanBscMethod.ID"]], "id (eldamwl.database.tables.channels.channels attribute)": [[16, "ELDAmwl.database.tables.channels.Channels.ID"]], "id (eldamwl.database.tables.channels.productchannels attribute)": [[16, "ELDAmwl.database.tables.channels.ProductChannels.ID"]], "id (eldamwl.database.tables.channels.telescopes attribute)": [[16, "ELDAmwl.database.tables.channels.Telescopes.ID"]], "id (eldamwl.database.tables.eldamwl_class_names.eldamwlclassnames attribute)": [[16, "ELDAmwl.database.tables.eldamwl_class_names.EldamwlClassNames.ID"]], "id (eldamwl.database.tables.eldamwl_products.eldamwlproducts attribute)": [[16, "ELDAmwl.database.tables.eldamwl_products.EldamwlProducts.ID"]], "id (eldamwl.database.tables.extinction.extmethod attribute)": [[16, "ELDAmwl.database.tables.extinction.ExtMethod.ID"]], "id (eldamwl.database.tables.extinction.extinctionoption attribute)": [[16, "ELDAmwl.database.tables.extinction.ExtinctionOption.ID"]], "id (eldamwl.database.tables.extinction.overlapfile attribute)": [[16, "ELDAmwl.database.tables.extinction.OverlapFile.ID"]], "id (eldamwl.database.tables.general.eldamwlexitcodes attribute)": [[16, "ELDAmwl.database.tables.general.ELDAmwlExitCodes.ID"]], "id (eldamwl.database.tables.general.eldamwllogs attribute)": [[16, "ELDAmwl.database.tables.general.ELDAmwlLogs.ID"]], "id (eldamwl.database.tables.lidar_constants.lidarconstants attribute)": [[16, "ELDAmwl.database.tables.lidar_constants.LidarConstants.ID"]], "id (eldamwl.database.tables.lidar_ratio.extbscoption attribute)": [[16, "ELDAmwl.database.tables.lidar_ratio.ExtBscOption.ID"]], "id (eldamwl.database.tables.measurements.measurements attribute)": [[16, "ELDAmwl.database.tables.measurements.Measurements.ID"]], "id (eldamwl.database.tables.system_product.errorthresholds attribute)": [[16, "ELDAmwl.database.tables.system_product.ErrorThresholds.ID"]], "id (eldamwl.database.tables.system_product.mcoption attribute)": [[16, "ELDAmwl.database.tables.system_product.MCOption.ID"]], "id (eldamwl.database.tables.system_product.mwlproductproduct attribute)": [[16, "ELDAmwl.database.tables.system_product.MWLproductProduct.ID"]], "id (eldamwl.database.tables.system_product.preprocoptions attribute)": [[16, "ELDAmwl.database.tables.system_product.PreProcOptions.ID"]], "id (eldamwl.database.tables.system_product.preparedsignalfile attribute)": [[16, "ELDAmwl.database.tables.system_product.PreparedSignalFile.ID"]], "id (eldamwl.database.tables.system_product.producttypes attribute)": [[16, "ELDAmwl.database.tables.system_product.ProductTypes.ID"]], "id (eldamwl.database.tables.system_product.products attribute)": [[16, "ELDAmwl.database.tables.system_product.Products.ID"]], "id (eldamwl.database.tables.system_product.smoothmethod attribute)": [[16, "ELDAmwl.database.tables.system_product.SmoothMethod.ID"]], "id (eldamwl.database.tables.system_product.smoothoptions attribute)": [[16, "ELDAmwl.database.tables.system_product.SmoothOptions.ID"]], "id (eldamwl.database.tables.system_product.smoothtypes attribute)": [[16, "ELDAmwl.database.tables.system_product.SmoothTypes.ID"]], "id (eldamwl.database.tables.system_product.systemproduct attribute)": [[16, "ELDAmwl.database.tables.system_product.SystemProduct.ID"]], "if_fwhm (eldamwl.database.tables.channels.channels attribute)": [[16, "ELDAmwl.database.tables.channels.Channels.IF_FWHM"]], "if_center (eldamwl.database.tables.channels.channels attribute)": [[16, "ELDAmwl.database.tables.channels.Channels.IF_center"]], "inscribedat (eldamwl.database.tables.lidar_constants.lidarconstants attribute)": [[16, "ELDAmwl.database.tables.lidar_constants.LidarConstants.InscribedAt"]], "iterbackscatteroption (class in eldamwl.database.tables.backscatter)": [[16, "ELDAmwl.database.tables.backscatter.IterBackscatterOption"]], "lrfile (class in eldamwl.database.tables.backscatter)": [[16, "ELDAmwl.database.tables.backscatter.LRFile"]], "lidarconstants (class in eldamwl.database.tables.lidar_constants)": [[16, "ELDAmwl.database.tables.lidar_constants.LidarConstants"]], "mcoption (class in eldamwl.database.tables.system_product)": [[16, "ELDAmwl.database.tables.system_product.MCOption"]], "mwlproductproduct (class in eldamwl.database.tables.system_product)": [[16, "ELDAmwl.database.tables.system_product.MWLproductProduct"]], "measurements (class in eldamwl.database.tables.measurements)": [[16, "ELDAmwl.database.tables.measurements.Measurements"]], "overlapfile (class in eldamwl.database.tables.extinction)": [[16, "ELDAmwl.database.tables.extinction.OverlapFile"]], "preprocoptions (class in eldamwl.database.tables.system_product)": [[16, "ELDAmwl.database.tables.system_product.PreProcOptions"]], "preparedsignalfile (class in eldamwl.database.tables.system_product)": [[16, "ELDAmwl.database.tables.system_product.PreparedSignalFile"]], "productchannels (class in eldamwl.database.tables.channels)": [[16, "ELDAmwl.database.tables.channels.ProductChannels"]], "producttypes (class in eldamwl.database.tables.system_product)": [[16, "ELDAmwl.database.tables.system_product.ProductTypes"]], "products (class in eldamwl.database.tables.system_product)": [[16, "ELDAmwl.database.tables.system_product.Products"]], "ramanbackscatteroption (class in eldamwl.database.tables.backscatter)": [[16, "ELDAmwl.database.tables.backscatter.RamanBackscatterOption"]], "ramanbscmethod (class in eldamwl.database.tables.backscatter)": [[16, "ELDAmwl.database.tables.backscatter.RamanBscMethod"]], "smoothmethod (class in eldamwl.database.tables.system_product)": [[16, "ELDAmwl.database.tables.system_product.SmoothMethod"]], "smoothoptions (class in eldamwl.database.tables.system_product)": [[16, "ELDAmwl.database.tables.system_product.SmoothOptions"]], "smoothtypes (class in eldamwl.database.tables.system_product)": [[16, "ELDAmwl.database.tables.system_product.SmoothTypes"]], "systemproduct (class in eldamwl.database.tables.system_product)": [[16, "ELDAmwl.database.tables.system_product.SystemProduct"]], "telescopes (class in eldamwl.database.tables.channels)": [[16, "ELDAmwl.database.tables.channels.Telescopes"]], "angstroem (eldamwl.database.tables.extinction.extinctionoption attribute)": [[16, "ELDAmwl.database.tables.extinction.ExtinctionOption.angstroem"]], "background_mode_id (eldamwl.database.tables.channels.channels attribute)": [[16, "ELDAmwl.database.tables.channels.Channels.background_mode_id"]], "bsc_calibration_lowestheight_id (eldamwl.database.tables.backscatter.elastbackscatteroption attribute)": [[16, "ELDAmwl.database.tables.backscatter.ElastBackscatterOption.bsc_calibration_lowestheight_id"]], "bsc_calibration_lowestheight_id (eldamwl.database.tables.backscatter.ramanbackscatteroption attribute)": [[16, "ELDAmwl.database.tables.backscatter.RamanBackscatterOption.bsc_calibration_lowestheight_id"]], "bsc_calibration_range_search_method_id (eldamwl.database.tables.backscatter.elastbackscatteroption attribute)": [[16, "ELDAmwl.database.tables.backscatter.ElastBackscatterOption.bsc_calibration_range_search_method_id"]], "bsc_calibration_range_search_method_id (eldamwl.database.tables.backscatter.ramanbackscatteroption attribute)": [[16, "ELDAmwl.database.tables.backscatter.RamanBackscatterOption.bsc_calibration_range_search_method_id"]], "bsc_calibration_upperheight_id (eldamwl.database.tables.backscatter.elastbackscatteroption attribute)": [[16, "ELDAmwl.database.tables.backscatter.ElastBackscatterOption.bsc_calibration_upperheight_id"]], "bsc_calibration_upperheight_id (eldamwl.database.tables.backscatter.ramanbackscatteroption attribute)": [[16, "ELDAmwl.database.tables.backscatter.RamanBackscatterOption.bsc_calibration_upperheight_id"]], "bsc_calibration_value_id (eldamwl.database.tables.backscatter.elastbackscatteroption attribute)": [[16, "ELDAmwl.database.tables.backscatter.ElastBackscatterOption.bsc_calibration_value_id"]], "bsc_calibration_value_id (eldamwl.database.tables.backscatter.ramanbackscatteroption attribute)": [[16, "ELDAmwl.database.tables.backscatter.RamanBackscatterOption.bsc_calibration_value_id"]], "bsc_calibration_window_id (eldamwl.database.tables.backscatter.elastbackscatteroption attribute)": [[16, "ELDAmwl.database.tables.backscatter.ElastBackscatterOption.bsc_calibration_window_id"]], "bsc_calibration_window_id (eldamwl.database.tables.backscatter.ramanbackscatteroption attribute)": [[16, "ELDAmwl.database.tables.backscatter.RamanBackscatterOption.bsc_calibration_window_id"]], "bsc_ratio (eldamwl.database.tables.backscatter.bsccalibrvalue attribute)": [[16, "ELDAmwl.database.tables.backscatter.BscCalibrValue.bsc_ratio"]], "calibr_factor (eldamwl.database.tables.lidar_constants.lidarconstants attribute)": [[16, "ELDAmwl.database.tables.lidar_constants.LidarConstants.calibr_factor"]], "calibr_factor_stat_err (eldamwl.database.tables.lidar_constants.lidarconstants attribute)": [[16, "ELDAmwl.database.tables.lidar_constants.LidarConstants.calibr_factor_stat_err"]], "calibr_factor_sys_err (eldamwl.database.tables.lidar_constants.lidarconstants attribute)": [[16, "ELDAmwl.database.tables.lidar_constants.LidarConstants.calibr_factor_sys_err"]], "calibr_window_bottom (eldamwl.database.tables.lidar_constants.lidarconstants attribute)": [[16, "ELDAmwl.database.tables.lidar_constants.LidarConstants.calibr_window_bottom"]], "calibr_window_top (eldamwl.database.tables.lidar_constants.lidarconstants attribute)": [[16, "ELDAmwl.database.tables.lidar_constants.LidarConstants.calibr_window_top"]], "calipso (eldamwl.database.tables.measurements.measurements attribute)": [[16, "ELDAmwl.database.tables.measurements.Measurements.calipso"]], "channel_id (eldamwl.database.tables.channels.productchannels attribute)": [[16, "ELDAmwl.database.tables.channels.ProductChannels.channel_id"]], "channel_id (eldamwl.database.tables.lidar_constants.lidarconstants attribute)": [[16, "ELDAmwl.database.tables.lidar_constants.LidarConstants.channel_id"]], "cirrus (eldamwl.database.tables.measurements.measurements attribute)": [[16, "ELDAmwl.database.tables.measurements.Measurements.cirrus"]], "classname (eldamwl.database.tables.eldamwl_class_names.eldamwlclassnames attribute)": [[16, "ELDAmwl.database.tables.eldamwl_class_names.EldamwlClassNames.classname"]], "climatol (eldamwl.database.tables.measurements.measurements attribute)": [[16, "ELDAmwl.database.tables.measurements.Measurements.climatol"]], "cloudmask (eldamwl.database.tables.measurements.measurements attribute)": [[16, "ELDAmwl.database.tables.measurements.Measurements.cloudmask"]], "cloudmask_current_product_id (eldamwl.database.tables.measurements.measurements attribute)": [[16, "ELDAmwl.database.tables.measurements.Measurements.cloudmask_current_product_id"]], "cloudmask_return_code (eldamwl.database.tables.measurements.measurements attribute)": [[16, "ELDAmwl.database.tables.measurements.Measurements.cloudmask_return_code"]], "comment (eldamwl.database.tables.measurements.measurements attribute)": [[16, "ELDAmwl.database.tables.measurements.Measurements.comment"]], "create_with_hr (eldamwl.database.tables.system_product.mwlproductproduct attribute)": [[16, "ELDAmwl.database.tables.system_product.MWLproductProduct.create_with_hr"]], "create_with_lr (eldamwl.database.tables.system_product.mwlproductproduct attribute)": [[16, "ELDAmwl.database.tables.system_product.MWLproductProduct.create_with_lr"]], "creation_auth_user_id (eldamwl.database.tables.measurements.measurements attribute)": [[16, "ELDAmwl.database.tables.measurements.Measurements.creation_auth_user_ID"]], "creation_date (eldamwl.database.tables.measurements.measurements attribute)": [[16, "ELDAmwl.database.tables.measurements.Measurements.creation_date"]], "datetime (eldamwl.database.tables.general.eldamwllogs attribute)": [[16, "ELDAmwl.database.tables.general.ELDAmwlLogs.datetime"]], "dead_time (eldamwl.database.tables.channels.channels attribute)": [[16, "ELDAmwl.database.tables.channels.Channels.dead_time"]], "dead_time_corr_type_id (eldamwl.database.tables.channels.channels attribute)": [[16, "ELDAmwl.database.tables.channels.Channels.dead_time_corr_type_id"]], "description (eldamwl.database.tables.general.eldamwlexitcodes attribute)": [[16, "ELDAmwl.database.tables.general.ELDAmwlExitCodes.description"]], "description (eldamwl.database.tables.system_product.producttypes attribute)": [[16, "ELDAmwl.database.tables.system_product.ProductTypes.description"]], "detection_limit (eldamwl.database.tables.system_product.smoothoptions attribute)": [[16, "ELDAmwl.database.tables.system_product.SmoothOptions.detection_limit"]], "detection_mode_id (eldamwl.database.tables.channels.channels attribute)": [[16, "ELDAmwl.database.tables.channels.Channels.detection_mode_id"]], "detection_wavelength (eldamwl.database.tables.lidar_constants.lidarconstants attribute)": [[16, "ELDAmwl.database.tables.lidar_constants.LidarConstants.detection_wavelength"]], "diameter (eldamwl.database.tables.channels.telescopes attribute)": [[16, "ELDAmwl.database.tables.channels.Telescopes.diameter"]], "dicycles (eldamwl.database.tables.measurements.measurements attribute)": [[16, "ELDAmwl.database.tables.measurements.Measurements.dicycles"]], "elast_bsc_method_id (eldamwl.database.tables.backscatter.elastbackscatteroption attribute)": [[16, "ELDAmwl.database.tables.backscatter.ElastBackscatterOption.elast_bsc_method_id"]], "elda (eldamwl.database.tables.measurements.measurements attribute)": [[16, "ELDAmwl.database.tables.measurements.Measurements.elda"]], "elda_current_product_id (eldamwl.database.tables.measurements.measurements attribute)": [[16, "ELDAmwl.database.tables.measurements.Measurements.elda_current_product_id"]], "elda_return_code (eldamwl.database.tables.measurements.measurements attribute)": [[16, "ELDAmwl.database.tables.measurements.Measurements.elda_return_code"]], "eldec (eldamwl.database.tables.measurements.measurements attribute)": [[16, "ELDAmwl.database.tables.measurements.Measurements.eldec"]], "eldec_current_product_id (eldamwl.database.tables.measurements.measurements attribute)": [[16, "ELDAmwl.database.tables.measurements.Measurements.eldec_current_product_id"]], "eldec_return_code (eldamwl.database.tables.measurements.measurements attribute)": [[16, "ELDAmwl.database.tables.measurements.Measurements.eldec_return_code"]], "elic (eldamwl.database.tables.measurements.measurements attribute)": [[16, "ELDAmwl.database.tables.measurements.Measurements.elic"]], "elic_current_product_id (eldamwl.database.tables.measurements.measurements attribute)": [[16, "ELDAmwl.database.tables.measurements.Measurements.elic_current_product_id"]], "elic_return_code (eldamwl.database.tables.measurements.measurements attribute)": [[16, "ELDAmwl.database.tables.measurements.Measurements.elic_return_code"]], "elpp (eldamwl.database.tables.measurements.measurements attribute)": [[16, "ELDAmwl.database.tables.measurements.Measurements.elpp"]], "elpp_current_product_id (eldamwl.database.tables.measurements.measurements attribute)": [[16, "ELDAmwl.database.tables.measurements.Measurements.elpp_current_product_id"]], "elpp_return_code (eldamwl.database.tables.measurements.measurements attribute)": [[16, "ELDAmwl.database.tables.measurements.Measurements.elpp_return_code"]], "elquick (eldamwl.database.tables.measurements.measurements attribute)": [[16, "ELDAmwl.database.tables.measurements.Measurements.elquick"]], "elquick_current_product_id (eldamwl.database.tables.measurements.measurements attribute)": [[16, "ELDAmwl.database.tables.measurements.Measurements.elquick_current_product_id"]], "elquick_return_code (eldamwl.database.tables.measurements.measurements attribute)": [[16, "ELDAmwl.database.tables.measurements.Measurements.elquick_return_code"]], "emission_wavelength (eldamwl.database.tables.channels.channels attribute)": [[16, "ELDAmwl.database.tables.channels.Channels.emission_wavelength"]], "error_method_id (eldamwl.database.tables.backscatter.elastbackscatteroption attribute)": [[16, "ELDAmwl.database.tables.backscatter.ElastBackscatterOption.error_method_id"]], "error_method_id (eldamwl.database.tables.backscatter.ramanbackscatteroption attribute)": [[16, "ELDAmwl.database.tables.backscatter.RamanBackscatterOption.error_method_id"]], "error_method_id (eldamwl.database.tables.extinction.extinctionoption attribute)": [[16, "ELDAmwl.database.tables.extinction.ExtinctionOption.error_method_id"]], "error_method_id (eldamwl.database.tables.lidar_ratio.extbscoption attribute)": [[16, "ELDAmwl.database.tables.lidar_ratio.ExtBscOption.error_method_id"]], "etna (eldamwl.database.tables.measurements.measurements attribute)": [[16, "ELDAmwl.database.tables.measurements.Measurements.etna"]], "ext_method_id (eldamwl.database.tables.extinction.extinctionoption attribute)": [[16, "ELDAmwl.database.tables.extinction.ExtinctionOption.ext_method_id"]], "extinction_options_product_id (eldamwl.database.tables.lidar_ratio.extbscoption attribute)": [[16, "ELDAmwl.database.tables.lidar_ratio.ExtBscOption.extinction_options_product_id"]], "filename (eldamwl.database.tables.backscatter.lrfile attribute)": [[16, "ELDAmwl.database.tables.backscatter.LRFile.filename"]], "filename (eldamwl.database.tables.eldamwl_products.eldamwlproducts attribute)": [[16, "ELDAmwl.database.tables.eldamwl_products.EldamwlProducts.filename"]], "filename (eldamwl.database.tables.extinction.overlapfile attribute)": [[16, "ELDAmwl.database.tables.extinction.OverlapFile.filename"]], "filename (eldamwl.database.tables.lidar_constants.lidarconstants attribute)": [[16, "ELDAmwl.database.tables.lidar_constants.LidarConstants.filename"]], "filename (eldamwl.database.tables.system_product.preparedsignalfile attribute)": [[16, "ELDAmwl.database.tables.system_product.PreparedSignalFile.filename"]], "fixed_lr (eldamwl.database.tables.backscatter.elastbackscatteroption attribute)": [[16, "ELDAmwl.database.tables.backscatter.ElastBackscatterOption.fixed_lr"]], "fixed_lr_error (eldamwl.database.tables.backscatter.elastbackscatteroption attribute)": [[16, "ELDAmwl.database.tables.backscatter.ElastBackscatterOption.fixed_lr_error"]], "focal_length (eldamwl.database.tables.channels.telescopes attribute)": [[16, "ELDAmwl.database.tables.channels.Telescopes.focal_length"]], "forfires (eldamwl.database.tables.measurements.measurements attribute)": [[16, "ELDAmwl.database.tables.measurements.Measurements.forfires"]], "full_overlap_height_m (eldamwl.database.tables.channels.telescopes attribute)": [[16, "ELDAmwl.database.tables.channels.Telescopes.full_overlap_height_m"]], "height (eldamwl.database.tables.backscatter.bsccalibrlowestheight attribute)": [[16, "ELDAmwl.database.tables.backscatter.BscCalibrLowestHeight.height"]], "height (eldamwl.database.tables.backscatter.bsccalibrupperheight attribute)": [[16, "ELDAmwl.database.tables.backscatter.BscCalibrUpperHeight.height"]], "highrange_error_threshold_id (eldamwl.database.tables.system_product.smoothoptions attribute)": [[16, "ELDAmwl.database.tables.system_product.SmoothOptions.highrange_error_threshold_id"]], "highres_highrange_integration_time (eldamwl.database.tables.system_product.smoothoptions attribute)": [[16, "ELDAmwl.database.tables.system_product.SmoothOptions.highres_highrange_integration_time"]], "highres_highrange_vertical_resolution (eldamwl.database.tables.system_product.smoothoptions attribute)": [[16, "ELDAmwl.database.tables.system_product.SmoothOptions.highres_highrange_vertical_resolution"]], "highres_lowrange_integration_time (eldamwl.database.tables.system_product.smoothoptions attribute)": [[16, "ELDAmwl.database.tables.system_product.SmoothOptions.highres_lowrange_integration_time"]], "highres_lowrange_vertical_resolution (eldamwl.database.tables.system_product.smoothoptions attribute)": [[16, "ELDAmwl.database.tables.system_product.SmoothOptions.highres_lowrange_vertical_resolution"]], "hirelpp (eldamwl.database.tables.measurements.measurements attribute)": [[16, "ELDAmwl.database.tables.measurements.Measurements.hirelpp"]], "hirelpp_current_product_id (eldamwl.database.tables.measurements.measurements attribute)": [[16, "ELDAmwl.database.tables.measurements.Measurements.hirelpp_current_product_id"]], "hirelpp_product_option_id (eldamwl.database.tables.system_product.products attribute)": [[16, "ELDAmwl.database.tables.system_product.Products.hirelpp_product_option_id"]], "hirelpp_return_code (eldamwl.database.tables.measurements.measurements attribute)": [[16, "ELDAmwl.database.tables.measurements.Measurements.hirelpp_return_code"]], "hoi_stations_id (eldamwl.database.tables.backscatter.lrfile attribute)": [[16, "ELDAmwl.database.tables.backscatter.LRFile.hoi_stations_id"]], "hoi_stations_id (eldamwl.database.tables.extinction.overlapfile attribute)": [[16, "ELDAmwl.database.tables.extinction.OverlapFile.hoi_stations_id"]], "hoi_stations_id (eldamwl.database.tables.measurements.measurements attribute)": [[16, "ELDAmwl.database.tables.measurements.Measurements.hoi_stations_id"]], "hoi_stations_id (eldamwl.database.tables.system_product.products attribute)": [[16, "ELDAmwl.database.tables.system_product.Products.hoi_stations_id"]], "hoi_system_id (eldamwl.database.tables.lidar_constants.lidarconstants attribute)": [[16, "ELDAmwl.database.tables.lidar_constants.LidarConstants.hoi_system_id"]], "hoi_system_id (eldamwl.database.tables.measurements.measurements attribute)": [[16, "ELDAmwl.database.tables.measurements.Measurements.hoi_system_id"]], "inscribed_at (eldamwl.database.tables.eldamwl_products.eldamwlproducts attribute)": [[16, "ELDAmwl.database.tables.eldamwl_products.EldamwlProducts.inscribed_at"]], "interface_return_code (eldamwl.database.tables.measurements.measurements attribute)": [[16, "ELDAmwl.database.tables.measurements.Measurements.interface_return_code"]], "interpolation_id (eldamwl.database.tables.backscatter.lrfile attribute)": [[16, "ELDAmwl.database.tables.backscatter.LRFile.interpolation_id"]], "interpolation_id (eldamwl.database.tables.extinction.overlapfile attribute)": [[16, "ELDAmwl.database.tables.extinction.OverlapFile.interpolation_id"]], "interpolation_id (eldamwl.database.tables.system_product.preprocoptions attribute)": [[16, "ELDAmwl.database.tables.system_product.PreProcOptions.interpolation_id"]], "is_basic_product (eldamwl.database.tables.system_product.producttypes attribute)": [[16, "ELDAmwl.database.tables.system_product.ProductTypes.is_basic_product"]], "is_in_mwl_products (eldamwl.database.tables.system_product.producttypes attribute)": [[16, "ELDAmwl.database.tables.system_product.ProductTypes.is_in_mwl_products"]], "is_latest_value (eldamwl.database.tables.lidar_constants.lidarconstants attribute)": [[16, "ELDAmwl.database.tables.lidar_constants.LidarConstants.is_latest_value"]], "is_mwl_only_product (eldamwl.database.tables.system_product.producttypes attribute)": [[16, "ELDAmwl.database.tables.system_product.ProductTypes.is_mwl_only_product"]], "iter_bsc_options_id (eldamwl.database.tables.backscatter.elastbackscatteroption attribute)": [[16, "ELDAmwl.database.tables.backscatter.ElastBackscatterOption.iter_bsc_options_id"]], "iter_conv_crit (eldamwl.database.tables.backscatter.iterbackscatteroption attribute)": [[16, "ELDAmwl.database.tables.backscatter.IterBackscatterOption.iter_conv_crit"]], "iteration_count (eldamwl.database.tables.system_product.mcoption attribute)": [[16, "ELDAmwl.database.tables.system_product.MCOption.iteration_count"]], "laser_id (eldamwl.database.tables.channels.channels attribute)": [[16, "ELDAmwl.database.tables.channels.Channels.laser_id"]], "level (eldamwl.database.tables.general.eldamwllogs attribute)": [[16, "ELDAmwl.database.tables.general.ELDAmwlLogs.level"]], "lidar_const (eldamwl.database.tables.lidar_constants.lidarconstants attribute)": [[16, "ELDAmwl.database.tables.lidar_constants.LidarConstants.lidar_const"]], "lidar_const_stat_err (eldamwl.database.tables.lidar_constants.lidarconstants attribute)": [[16, "ELDAmwl.database.tables.lidar_constants.LidarConstants.lidar_const_stat_err"]], "lidar_const_sys_err (eldamwl.database.tables.lidar_constants.lidarconstants attribute)": [[16, "ELDAmwl.database.tables.lidar_constants.LidarConstants.lidar_const_sys_err"]], "lidar_ratio_file_id (eldamwl.database.tables.measurements.measurements attribute)": [[16, "ELDAmwl.database.tables.measurements.Measurements.lidar_ratio_file_id"]], "locked (eldamwl.database.tables.channels.telescopes attribute)": [[16, "ELDAmwl.database.tables.channels.Telescopes.locked"]], "lowrange_error_threshold_id (eldamwl.database.tables.system_product.smoothoptions attribute)": [[16, "ELDAmwl.database.tables.system_product.SmoothOptions.lowrange_error_threshold_id"]], "lowres_highrange_integration_time (eldamwl.database.tables.system_product.smoothoptions attribute)": [[16, "ELDAmwl.database.tables.system_product.SmoothOptions.lowres_highrange_integration_time"]], "lowres_highrange_vertical_resolution (eldamwl.database.tables.system_product.smoothoptions attribute)": [[16, "ELDAmwl.database.tables.system_product.SmoothOptions.lowres_highrange_vertical_resolution"]], "lowres_lowrange_integration_time (eldamwl.database.tables.system_product.smoothoptions attribute)": [[16, "ELDAmwl.database.tables.system_product.SmoothOptions.lowres_lowrange_integration_time"]], "lowres_lowrange_vertical_resolution (eldamwl.database.tables.system_product.smoothoptions attribute)": [[16, "ELDAmwl.database.tables.system_product.SmoothOptions.lowres_lowrange_vertical_resolution"]], "lr_input_method_id (eldamwl.database.tables.backscatter.elastbackscatteroption attribute)": [[16, "ELDAmwl.database.tables.backscatter.ElastBackscatterOption.lr_input_method_id"]], "max_height (eldamwl.database.tables.system_product.preprocoptions attribute)": [[16, "ELDAmwl.database.tables.system_product.PreProcOptions.max_height"]], "max_iteration_count (eldamwl.database.tables.backscatter.iterbackscatteroption attribute)": [[16, "ELDAmwl.database.tables.backscatter.IterBackscatterOption.max_iteration_count"]], "measurements_id (eldamwl.database.tables.eldamwl_products.eldamwlproducts attribute)": [[16, "ELDAmwl.database.tables.eldamwl_products.EldamwlProducts.measurements_id"]], "measurements_id (eldamwl.database.tables.general.eldamwllogs attribute)": [[16, "ELDAmwl.database.tables.general.ELDAmwlLogs.measurements_id"]], "measurements_id (eldamwl.database.tables.lidar_constants.lidarconstants attribute)": [[16, "ELDAmwl.database.tables.lidar_constants.LidarConstants.measurements_id"]], "measurements_id (eldamwl.database.tables.system_product.preparedsignalfile attribute)": [[16, "ELDAmwl.database.tables.system_product.PreparedSignalFile.measurements_id"]], "message (eldamwl.database.tables.general.eldamwllogs attribute)": [[16, "ELDAmwl.database.tables.general.ELDAmwlLogs.message"]], "method (eldamwl.database.tables.backscatter.bsccalibrmethod attribute)": [[16, "ELDAmwl.database.tables.backscatter.BscCalibrMethod.method"]], "method (eldamwl.database.tables.backscatter.bscmethod attribute)": [[16, "ELDAmwl.database.tables.backscatter.BscMethod.method"]], "method (eldamwl.database.tables.backscatter.elastbscmethod attribute)": [[16, "ELDAmwl.database.tables.backscatter.ElastBscMethod.method"]], "method (eldamwl.database.tables.backscatter.ramanbscmethod attribute)": [[16, "ELDAmwl.database.tables.backscatter.RamanBscMethod.method"]], "method (eldamwl.database.tables.eldamwl_class_names.eldamwlclassnames attribute)": [[16, "ELDAmwl.database.tables.eldamwl_class_names.EldamwlClassNames.method"]], "method (eldamwl.database.tables.extinction.extmethod attribute)": [[16, "ELDAmwl.database.tables.extinction.ExtMethod.method"]], "method (eldamwl.database.tables.system_product.smoothmethod attribute)": [[16, "ELDAmwl.database.tables.system_product.SmoothMethod.method"]], "method_for_getting_effective_binres (eldamwl.database.tables.extinction.extmethod attribute)": [[16, "ELDAmwl.database.tables.extinction.ExtMethod.method_for_getting_effective_binres"]], "method_for_getting_effective_binres (eldamwl.database.tables.system_product.smoothmethod attribute)": [[16, "ELDAmwl.database.tables.system_product.SmoothMethod.method_for_getting_effective_binres"]], "method_for_getting_used_binres (eldamwl.database.tables.extinction.extmethod attribute)": [[16, "ELDAmwl.database.tables.extinction.ExtMethod.method_for_getting_used_binres"]], "method_for_getting_used_binres (eldamwl.database.tables.system_product.smoothmethod attribute)": [[16, "ELDAmwl.database.tables.system_product.SmoothMethod.method_for_getting_used_binres"]], "method_id (eldamwl.database.tables.backscatter.bsccalibrrangesearchmethod attribute)": [[16, "ELDAmwl.database.tables.backscatter.BscCalibrRangeSearchMethod.method_id"]], "min_bscratio_for_lr (eldamwl.database.tables.lidar_ratio.extbscoption attribute)": [[16, "ELDAmwl.database.tables.lidar_ratio.ExtBscOption.min_BscRatio_for_LR"]], "min_height (eldamwl.database.tables.system_product.preprocoptions attribute)": [[16, "ELDAmwl.database.tables.system_product.PreProcOptions.min_height"]], "module_version (eldamwl.database.tables.general.eldamwllogs attribute)": [[16, "ELDAmwl.database.tables.general.ELDAmwlLogs.module_version"]], "mwl_product_id (eldamwl.database.tables.system_product.mwlproductproduct attribute)": [[16, "ELDAmwl.database.tables.system_product.MWLproductProduct.mwl_product_id"]], "name (eldamwl.database.tables.channels.channels attribute)": [[16, "ELDAmwl.database.tables.channels.Channels.name"]], "name (eldamwl.database.tables.system_product.errorthresholds attribute)": [[16, "ELDAmwl.database.tables.system_product.ErrorThresholds.name"]], "nc_file_id (eldamwl.database.tables.system_product.producttypes attribute)": [[16, "ELDAmwl.database.tables.system_product.ProductTypes.nc_file_id"]], "num_id (eldamwl.database.tables.measurements.measurements attribute)": [[16, "ELDAmwl.database.tables.measurements.Measurements.num_id"]], "overlap_file_id (eldamwl.database.tables.extinction.extinctionoption attribute)": [[16, "ELDAmwl.database.tables.extinction.ExtinctionOption.overlap_file_id"]], "overlap_file_id (eldamwl.database.tables.measurements.measurements attribute)": [[16, "ELDAmwl.database.tables.measurements.Measurements.overlap_file_id"]], "photosmog (eldamwl.database.tables.measurements.measurements attribute)": [[16, "ELDAmwl.database.tables.measurements.Measurements.photosmog"]], "preprocessing_integration_time (eldamwl.database.tables.system_product.preprocoptions attribute)": [[16, "ELDAmwl.database.tables.system_product.PreProcOptions.preprocessing_integration_time"]], "preprocessing_vertical_resolution (eldamwl.database.tables.system_product.preprocoptions attribute)": [[16, "ELDAmwl.database.tables.system_product.PreProcOptions.preprocessing_vertical_resolution"]], "processor_id (eldamwl.database.tables.system_product.producttypes attribute)": [[16, "ELDAmwl.database.tables.system_product.ProductTypes.processor_ID"]], "prod_id (eldamwl.database.tables.channels.productchannels attribute)": [[16, "ELDAmwl.database.tables.channels.ProductChannels.prod_id"]], "prod_type_id (eldamwl.database.tables.system_product.products attribute)": [[16, "ELDAmwl.database.tables.system_product.Products.prod_type_id"]], "product_id (eldamwl.database.tables.backscatter.elastbackscatteroption attribute)": [[16, "ELDAmwl.database.tables.backscatter.ElastBackscatterOption.product_id"]], "product_id (eldamwl.database.tables.backscatter.ramanbackscatteroption attribute)": [[16, "ELDAmwl.database.tables.backscatter.RamanBackscatterOption.product_id"]], "product_id (eldamwl.database.tables.eldamwl_products.eldamwlproducts attribute)": [[16, "ELDAmwl.database.tables.eldamwl_products.EldamwlProducts.product_id"]], "product_id (eldamwl.database.tables.extinction.extinctionoption attribute)": [[16, "ELDAmwl.database.tables.extinction.ExtinctionOption.product_id"]], "product_id (eldamwl.database.tables.general.eldamwllogs attribute)": [[16, "ELDAmwl.database.tables.general.ELDAmwlLogs.product_id"]], "product_id (eldamwl.database.tables.lidar_constants.lidarconstants attribute)": [[16, "ELDAmwl.database.tables.lidar_constants.LidarConstants.product_id"]], "product_id (eldamwl.database.tables.lidar_ratio.extbscoption attribute)": [[16, "ELDAmwl.database.tables.lidar_ratio.ExtBscOption.product_id"]], "product_id (eldamwl.database.tables.system_product.mcoption attribute)": [[16, "ELDAmwl.database.tables.system_product.MCOption.product_id"]], "product_id (eldamwl.database.tables.system_product.mwlproductproduct attribute)": [[16, "ELDAmwl.database.tables.system_product.MWLproductProduct.product_id"]], "product_id (eldamwl.database.tables.system_product.preprocoptions attribute)": [[16, "ELDAmwl.database.tables.system_product.PreProcOptions.product_id"]], "product_id (eldamwl.database.tables.system_product.preparedsignalfile attribute)": [[16, "ELDAmwl.database.tables.system_product.PreparedSignalFile.product_id"]], "product_id (eldamwl.database.tables.system_product.smoothoptions attribute)": [[16, "ELDAmwl.database.tables.system_product.SmoothOptions.product_id"]], "product_id (eldamwl.database.tables.system_product.systemproduct attribute)": [[16, "ELDAmwl.database.tables.system_product.SystemProduct.product_id"]], "product_type (eldamwl.database.tables.system_product.producttypes attribute)": [[16, "ELDAmwl.database.tables.system_product.ProductTypes.product_type"]], "profile_end_time (eldamwl.database.tables.lidar_constants.lidarconstants attribute)": [[16, "ELDAmwl.database.tables.lidar_constants.LidarConstants.profile_end_time"]], "profile_start_time (eldamwl.database.tables.lidar_constants.lidarconstants attribute)": [[16, "ELDAmwl.database.tables.lidar_constants.LidarConstants.profile_start_time"]], "ram_bsc_method_id (eldamwl.database.tables.backscatter.iterbackscatteroption attribute)": [[16, "ELDAmwl.database.tables.backscatter.IterBackscatterOption.ram_bsc_method_id"]], "ram_bsc_method_id (eldamwl.database.tables.backscatter.ramanbackscatteroption attribute)": [[16, "ELDAmwl.database.tables.backscatter.RamanBackscatterOption.ram_bsc_method_id"]], "raman_backscatter_options_product_id (eldamwl.database.tables.lidar_ratio.extbscoption attribute)": [[16, "ELDAmwl.database.tables.lidar_ratio.ExtBscOption.raman_backscatter_options_product_id"]], "raw_range_resolution (eldamwl.database.tables.channels.channels attribute)": [[16, "ELDAmwl.database.tables.channels.Channels.raw_range_resolution"]], "rurban (eldamwl.database.tables.measurements.measurements attribute)": [[16, "ELDAmwl.database.tables.measurements.Measurements.rurban"]], "sahadust (eldamwl.database.tables.measurements.measurements attribute)": [[16, "ELDAmwl.database.tables.measurements.Measurements.sahadust"]], "scat_mechanism_id (eldamwl.database.tables.channels.channels attribute)": [[16, "ELDAmwl.database.tables.channels.Channels.scat_mechanism_id"]], "scc_version_id (eldamwl.database.tables.eldamwl_products.eldamwlproducts attribute)": [[16, "ELDAmwl.database.tables.eldamwl_products.EldamwlProducts.scc_version_id"]], "scc_version_id (eldamwl.database.tables.system_product.preparedsignalfile attribute)": [[16, "ELDAmwl.database.tables.system_product.PreparedSignalFile.scc_version_id"]], "signal_type_id (eldamwl.database.tables.channels.channels attribute)": [[16, "ELDAmwl.database.tables.channels.Channels.signal_type_id"]], "signal_type_id (eldamwl.database.tables.channels.productchannels attribute)": [[16, "ELDAmwl.database.tables.channels.ProductChannels.signal_type_id"]], "smooth_method_id (eldamwl.database.tables.backscatter.elastbackscatteroption attribute)": [[16, "ELDAmwl.database.tables.backscatter.ElastBackscatterOption.smooth_method_id"]], "smooth_method_id (eldamwl.database.tables.backscatter.ramanbackscatteroption attribute)": [[16, "ELDAmwl.database.tables.backscatter.RamanBackscatterOption.smooth_method_id"]], "smooth_type (eldamwl.database.tables.system_product.smoothtypes attribute)": [[16, "ELDAmwl.database.tables.system_product.SmoothTypes.smooth_type"]], "smooth_type_id (eldamwl.database.tables.system_product.smoothoptions attribute)": [[16, "ELDAmwl.database.tables.system_product.SmoothOptions.smooth_type_id"]], "sounding_file_id (eldamwl.database.tables.measurements.measurements attribute)": [[16, "ELDAmwl.database.tables.measurements.Measurements.sounding_file_id"]], "start (eldamwl.database.tables.backscatter.lrfile attribute)": [[16, "ELDAmwl.database.tables.backscatter.LRFile.start"]], "start (eldamwl.database.tables.extinction.overlapfile attribute)": [[16, "ELDAmwl.database.tables.extinction.OverlapFile.start"]], "start (eldamwl.database.tables.measurements.measurements attribute)": [[16, "ELDAmwl.database.tables.measurements.Measurements.start"]], "station_id (eldamwl.database.tables.channels.telescopes attribute)": [[16, "ELDAmwl.database.tables.channels.Telescopes.station_id"]], "status (eldamwl.database.tables.backscatter.lrfile attribute)": [[16, "ELDAmwl.database.tables.backscatter.LRFile.status"]], "status (eldamwl.database.tables.extinction.overlapfile attribute)": [[16, "ELDAmwl.database.tables.extinction.OverlapFile.status"]], "stop (eldamwl.database.tables.backscatter.lrfile attribute)": [[16, "ELDAmwl.database.tables.backscatter.LRFile.stop"]], "stop (eldamwl.database.tables.extinction.overlapfile attribute)": [[16, "ELDAmwl.database.tables.extinction.OverlapFile.stop"]], "stop (eldamwl.database.tables.measurements.measurements attribute)": [[16, "ELDAmwl.database.tables.measurements.Measurements.stop"]], "stratos (eldamwl.database.tables.measurements.measurements attribute)": [[16, "ELDAmwl.database.tables.measurements.Measurements.stratos"]], "string_id (eldamwl.database.tables.channels.channels attribute)": [[16, "ELDAmwl.database.tables.channels.Channels.string_ID"]], "submission_date (eldamwl.database.tables.backscatter.lrfile attribute)": [[16, "ELDAmwl.database.tables.backscatter.LRFile.submission_date"]], "submission_date (eldamwl.database.tables.extinction.overlapfile attribute)": [[16, "ELDAmwl.database.tables.extinction.OverlapFile.submission_date"]], "system_id (eldamwl.database.tables.system_product.systemproduct attribute)": [[16, "ELDAmwl.database.tables.system_product.SystemProduct.system_id"]], "telescope_id (eldamwl.database.tables.channels.channels attribute)": [[16, "ELDAmwl.database.tables.channels.Channels.telescope_id"]], "transition_zone_from (eldamwl.database.tables.system_product.smoothoptions attribute)": [[16, "ELDAmwl.database.tables.system_product.SmoothOptions.transition_zone_from"]], "transition_zone_to (eldamwl.database.tables.system_product.smoothoptions attribute)": [[16, "ELDAmwl.database.tables.system_product.SmoothOptions.transition_zone_to"]], "trigger_delay (eldamwl.database.tables.channels.channels attribute)": [[16, "ELDAmwl.database.tables.channels.Channels.trigger_delay"]], "trigger_delay_interp_id (eldamwl.database.tables.channels.channels attribute)": [[16, "ELDAmwl.database.tables.channels.Channels.trigger_delay_interp_id"]], "type (eldamwl.database.tables.channels.telescopes attribute)": [[16, "ELDAmwl.database.tables.channels.Telescopes.type"]], "update_auth_user_id (eldamwl.database.tables.measurements.measurements attribute)": [[16, "ELDAmwl.database.tables.measurements.Measurements.update_auth_user_ID"]], "updated_date (eldamwl.database.tables.measurements.measurements attribute)": [[16, "ELDAmwl.database.tables.measurements.Measurements.updated_date"]], "upload (eldamwl.database.tables.measurements.measurements attribute)": [[16, "ELDAmwl.database.tables.measurements.Measurements.upload"]], "usecase_id (eldamwl.database.tables.system_product.products attribute)": [[16, "ELDAmwl.database.tables.system_product.Products.usecase_id"]], "value (eldamwl.database.tables.system_product.errorthresholds attribute)": [[16, "ELDAmwl.database.tables.system_product.ErrorThresholds.value"]], "width (eldamwl.database.tables.backscatter.bsccalibrwindow attribute)": [[16, "ELDAmwl.database.tables.backscatter.BscCalibrWindow.width"]], "eldamwl.depol": [[17, "module-ELDAmwl.depol"]], "eldamwl.depol.operation": [[17, "module-ELDAmwl.depol.operation"]], "eldamwl.depol.params": [[17, "module-ELDAmwl.depol.params"]], "eldamwl.depol.product": [[17, "module-ELDAmwl.depol.product"]], "vldrparams (class in eldamwl.depol.params)": [[17, "ELDAmwl.depol.params.VLDRParams"]], "vldrs (class in eldamwl.depol.product)": [[17, "ELDAmwl.depol.product.VLDRs"]], "vlrdfactory (class in eldamwl.depol.operation)": [[17, "ELDAmwl.depol.operation.VLRDFactory"]], "add_signal_role() (eldamwl.depol.params.vldrparams method)": [[17, "ELDAmwl.depol.params.VLDRParams.add_signal_role"]], "from_db() (eldamwl.depol.params.vldrparams method)": [[17, "ELDAmwl.depol.params.VLDRParams.from_db"]], "get_classname_from_db() (eldamwl.depol.operation.vlrdfactory method)": [[17, "ELDAmwl.depol.operation.VLRDFactory.get_classname_from_db"]], "init() (eldamwl.depol.product.vldrs class method)": [[17, "ELDAmwl.depol.product.VLDRs.init"]], "name (eldamwl.depol.operation.vlrdfactory attribute)": [[17, "ELDAmwl.depol.operation.VLRDFactory.name"]], "to_meta_ds_dict() (eldamwl.depol.params.vldrparams method)": [[17, "ELDAmwl.depol.params.VLDRParams.to_meta_ds_dict"]], "to_meta_ds_dict() (eldamwl.depol.product.vldrs method)": [[17, "ELDAmwl.depol.product.VLDRs.to_meta_ds_dict"]], "eldamwl.depol.vertical_resolution": [[18, "module-ELDAmwl.depol.vertical_resolution"]], "eldamwl.depol.vertical_resolution.operation": [[18, "module-ELDAmwl.depol.vertical_resolution.operation"]], "vldreffbinres (class in eldamwl.depol.vertical_resolution.operation)": [[18, "ELDAmwl.depol.vertical_resolution.operation.VLDREffBinRes"]], "vldrusedbinres (class in eldamwl.depol.vertical_resolution.operation)": [[18, "ELDAmwl.depol.vertical_resolution.operation.VLDRUsedBinRes"]], "get_classname_from_db() (eldamwl.depol.vertical_resolution.operation.vldreffbinres method)": [[18, "ELDAmwl.depol.vertical_resolution.operation.VLDREffBinRes.get_classname_from_db"]], "get_classname_from_db() (eldamwl.depol.vertical_resolution.operation.vldrusedbinres method)": [[18, "ELDAmwl.depol.vertical_resolution.operation.VLDRUsedBinRes.get_classname_from_db"]], "name (eldamwl.depol.vertical_resolution.operation.vldreffbinres attribute)": [[18, "ELDAmwl.depol.vertical_resolution.operation.VLDREffBinRes.name"]], "name (eldamwl.depol.vertical_resolution.operation.vldrusedbinres attribute)": [[18, "ELDAmwl.depol.vertical_resolution.operation.VLDRUsedBinRes.name"]], "prod_id (eldamwl.depol.vertical_resolution.operation.vldreffbinres attribute)": [[18, "ELDAmwl.depol.vertical_resolution.operation.VLDREffBinRes.prod_id"]], "prod_id (eldamwl.depol.vertical_resolution.operation.vldrusedbinres attribute)": [[18, "ELDAmwl.depol.vertical_resolution.operation.VLDRUsedBinRes.prod_id"]], "eldamwl.elda_mwl": [[19, "module-ELDAmwl.elda_mwl"]], "eldamwl.elda_mwl.elda_mwl": [[19, "module-ELDAmwl.elda_mwl.elda_mwl"]], "eldamwl.elda_mwl.get_basic_products": [[19, "module-ELDAmwl.elda_mwl.get_basic_products"]], "eldamwl.elda_mwl.get_derived_products": [[19, "module-ELDAmwl.elda_mwl.get_derived_products"]], "eldamwl.elda_mwl.get_lidar_constants": [[19, "module-ELDAmwl.elda_mwl.get_lidar_constants"]], "eldamwl.elda_mwl.mwl_products": [[19, "module-ELDAmwl.elda_mwl.mwl_products"]], "getbasicproducts (class in eldamwl.elda_mwl.get_basic_products)": [[19, "ELDAmwl.elda_mwl.get_basic_products.GetBasicProducts"]], "getbasicproductsdefault (class in eldamwl.elda_mwl.get_basic_products)": [[19, "ELDAmwl.elda_mwl.get_basic_products.GetBasicProductsDefault"]], "getderivedproducts (class in eldamwl.elda_mwl.get_derived_products)": [[19, "ELDAmwl.elda_mwl.get_derived_products.GetDerivedProducts"]], "getderivedproductsdefault (class in eldamwl.elda_mwl.get_derived_products)": [[19, "ELDAmwl.elda_mwl.get_derived_products.GetDerivedProductsDefault"]], "getlidarconstants (class in eldamwl.elda_mwl.get_lidar_constants)": [[19, "ELDAmwl.elda_mwl.get_lidar_constants.GetLidarConstants"]], "getlidarconstantsdefault (class in eldamwl.elda_mwl.get_lidar_constants)": [[19, "ELDAmwl.elda_mwl.get_lidar_constants.GetLidarConstantsDefault"]], "getproductmatrix (class in eldamwl.elda_mwl.mwl_products)": [[19, "ELDAmwl.elda_mwl.mwl_products.GetProductMatrix"]], "getproductmatrixdefault (class in eldamwl.elda_mwl.mwl_products)": [[19, "ELDAmwl.elda_mwl.mwl_products.GetProductMatrixDefault"]], "measurementparams (class in eldamwl.elda_mwl.elda_mwl)": [[19, "ELDAmwl.elda_mwl.elda_mwl.MeasurementParams"]], "qualitycontrol (class in eldamwl.elda_mwl.mwl_products)": [[19, "ELDAmwl.elda_mwl.mwl_products.QualityControl"]], "qualitycontroldefault (class in eldamwl.elda_mwl.mwl_products)": [[19, "ELDAmwl.elda_mwl.mwl_products.QualityControlDefault"]], "runeldamwl (class in eldamwl.elda_mwl.elda_mwl)": [[19, "ELDAmwl.elda_mwl.elda_mwl.RunELDAmwl"]], "all_basic_products_of_wl() (eldamwl.elda_mwl.elda_mwl.measurementparams method)": [[19, "ELDAmwl.elda_mwl.elda_mwl.MeasurementParams.all_basic_products_of_wl"]], "all_bsc_products() (eldamwl.elda_mwl.elda_mwl.measurementparams method)": [[19, "ELDAmwl.elda_mwl.elda_mwl.MeasurementParams.all_bsc_products"]], "all_products_of_res() (eldamwl.elda_mwl.elda_mwl.measurementparams method)": [[19, "ELDAmwl.elda_mwl.elda_mwl.MeasurementParams.all_products_of_res"]], "angstroem_exp_products() (eldamwl.elda_mwl.elda_mwl.measurementparams method)": [[19, "ELDAmwl.elda_mwl.elda_mwl.MeasurementParams.angstroem_exp_products"]], "basic_products() (eldamwl.elda_mwl.elda_mwl.measurementparams method)": [[19, "ELDAmwl.elda_mwl.elda_mwl.MeasurementParams.basic_products"]], "bsc_calibr_window (eldamwl.elda_mwl.get_basic_products.getbasicproductsdefault attribute)": [[19, "ELDAmwl.elda_mwl.get_basic_products.GetBasicProductsDefault.bsc_calibr_window"]], "data (eldamwl.elda_mwl.elda_mwl.runeldamwl property)": [[19, "ELDAmwl.elda_mwl.elda_mwl.RunELDAmwl.data"]], "data_storage (eldamwl.elda_mwl.get_basic_products.getbasicproductsdefault attribute)": [[19, "ELDAmwl.elda_mwl.get_basic_products.GetBasicProductsDefault.data_storage"]], "data_storage (eldamwl.elda_mwl.mwl_products.getproductmatrixdefault attribute)": [[19, "ELDAmwl.elda_mwl.mwl_products.GetProductMatrixDefault.data_storage"]], "data_storage (eldamwl.elda_mwl.mwl_products.qualitycontroldefault attribute)": [[19, "ELDAmwl.elda_mwl.mwl_products.QualityControlDefault.data_storage"]], "elast_bsc_products() (eldamwl.elda_mwl.elda_mwl.measurementparams method)": [[19, "ELDAmwl.elda_mwl.elda_mwl.MeasurementParams.elast_bsc_products"]], "extinction_products() (eldamwl.elda_mwl.elda_mwl.measurementparams method)": [[19, "ELDAmwl.elda_mwl.elda_mwl.MeasurementParams.extinction_products"]], "filtered_list() (eldamwl.elda_mwl.elda_mwl.measurementparams method)": [[19, "ELDAmwl.elda_mwl.elda_mwl.MeasurementParams.filtered_list"]], "find_common_smooth() (eldamwl.elda_mwl.get_basic_products.getbasicproductsdefault method)": [[19, "ELDAmwl.elda_mwl.get_basic_products.GetBasicProductsDefault.find_common_smooth"]], "get_auto_smooth_products() (eldamwl.elda_mwl.get_basic_products.getbasicproductsdefault method)": [[19, "ELDAmwl.elda_mwl.get_basic_products.GetBasicProductsDefault.get_auto_smooth_products"]], "get_basic_products() (eldamwl.elda_mwl.elda_mwl.runeldamwl method)": [[19, "ELDAmwl.elda_mwl.elda_mwl.RunELDAmwl.get_basic_products"]], "get_binres_common_smooth() (eldamwl.elda_mwl.get_basic_products.getbasicproductsdefault method)": [[19, "ELDAmwl.elda_mwl.get_basic_products.GetBasicProductsDefault.get_binres_common_smooth"]], "get_classname_from_db() (eldamwl.elda_mwl.get_basic_products.getbasicproducts method)": [[19, "ELDAmwl.elda_mwl.get_basic_products.GetBasicProducts.get_classname_from_db"]], "get_classname_from_db() (eldamwl.elda_mwl.get_derived_products.getderivedproducts method)": [[19, "ELDAmwl.elda_mwl.get_derived_products.GetDerivedProducts.get_classname_from_db"]], "get_classname_from_db() (eldamwl.elda_mwl.get_lidar_constants.getlidarconstants method)": [[19, "ELDAmwl.elda_mwl.get_lidar_constants.GetLidarConstants.get_classname_from_db"]], "get_classname_from_db() (eldamwl.elda_mwl.mwl_products.getproductmatrix method)": [[19, "ELDAmwl.elda_mwl.mwl_products.GetProductMatrix.get_classname_from_db"]], "get_classname_from_db() (eldamwl.elda_mwl.mwl_products.qualitycontrol method)": [[19, "ELDAmwl.elda_mwl.mwl_products.QualityControl.get_classname_from_db"]], "get_common_shape() (eldamwl.elda_mwl.mwl_products.getproductmatrixdefault method)": [[19, "ELDAmwl.elda_mwl.mwl_products.GetProductMatrixDefault.get_common_shape"]], "get_common_smooth_products() (eldamwl.elda_mwl.get_basic_products.getbasicproductsdefault method)": [[19, "ELDAmwl.elda_mwl.get_basic_products.GetBasicProductsDefault.get_common_smooth_products"]], "get_derived_products() (eldamwl.elda_mwl.elda_mwl.runeldamwl method)": [[19, "ELDAmwl.elda_mwl.elda_mwl.RunELDAmwl.get_derived_products"]], "get_derived_products() (eldamwl.elda_mwl.get_derived_products.getderivedproductsdefault method)": [[19, "ELDAmwl.elda_mwl.get_derived_products.GetDerivedProductsDefault.get_derived_products"]], "get_elast_bsc_fixed_smooth() (eldamwl.elda_mwl.get_basic_products.getbasicproductsdefault method)": [[19, "ELDAmwl.elda_mwl.get_basic_products.GetBasicProductsDefault.get_elast_bsc_fixed_smooth"]], "get_extinctions_auto_smooth() (eldamwl.elda_mwl.get_basic_products.getbasicproductsdefault method)": [[19, "ELDAmwl.elda_mwl.get_basic_products.GetBasicProductsDefault.get_extinctions_auto_smooth"]], "get_extinctions_fixed_smooth() (eldamwl.elda_mwl.get_basic_products.getbasicproductsdefault method)": [[19, "ELDAmwl.elda_mwl.get_basic_products.GetBasicProductsDefault.get_extinctions_fixed_smooth"]], "get_lidar_constants() (eldamwl.elda_mwl.elda_mwl.runeldamwl method)": [[19, "ELDAmwl.elda_mwl.elda_mwl.RunELDAmwl.get_lidar_constants"]], "get_lidar_constants() (eldamwl.elda_mwl.get_lidar_constants.getlidarconstantsdefault method)": [[19, "ELDAmwl.elda_mwl.get_lidar_constants.GetLidarConstantsDefault.get_lidar_constants"]], "get_lidar_ratios() (eldamwl.elda_mwl.get_derived_products.getderivedproductsdefault method)": [[19, "ELDAmwl.elda_mwl.get_derived_products.GetDerivedProductsDefault.get_lidar_ratios"]], "get_product_matrix() (eldamwl.elda_mwl.elda_mwl.runeldamwl method)": [[19, "ELDAmwl.elda_mwl.elda_mwl.RunELDAmwl.get_product_matrix"]], "get_products_resolution() (eldamwl.elda_mwl.elda_mwl.measurementparams method)": [[19, "ELDAmwl.elda_mwl.elda_mwl.MeasurementParams.get_products_resolution"]], "get_raman_bsc_auto_smooth() (eldamwl.elda_mwl.get_basic_products.getbasicproductsdefault method)": [[19, "ELDAmwl.elda_mwl.get_basic_products.GetBasicProductsDefault.get_raman_bsc_auto_smooth"]], "get_raman_bsc_fixed_smooth() (eldamwl.elda_mwl.get_basic_products.getbasicproductsdefault method)": [[19, "ELDAmwl.elda_mwl.get_basic_products.GetBasicProductsDefault.get_raman_bsc_fixed_smooth"]], "get_vldr_fixed_smooth() (eldamwl.elda_mwl.get_basic_products.getbasicproductsdefault method)": [[19, "ELDAmwl.elda_mwl.get_basic_products.GetBasicProductsDefault.get_vldr_fixed_smooth"]], "lidar_ratio_products() (eldamwl.elda_mwl.elda_mwl.measurementparams method)": [[19, "ELDAmwl.elda_mwl.elda_mwl.MeasurementParams.lidar_ratio_products"]], "load_from_db() (eldamwl.elda_mwl.elda_mwl.measurementparams method)": [[19, "ELDAmwl.elda_mwl.elda_mwl.MeasurementParams.load_from_db"]], "name (eldamwl.elda_mwl.get_basic_products.getbasicproducts attribute)": [[19, "ELDAmwl.elda_mwl.get_basic_products.GetBasicProducts.name"]], "name (eldamwl.elda_mwl.get_basic_products.getbasicproductsdefault attribute)": [[19, "ELDAmwl.elda_mwl.get_basic_products.GetBasicProductsDefault.name"]], "name (eldamwl.elda_mwl.get_derived_products.getderivedproducts attribute)": [[19, "ELDAmwl.elda_mwl.get_derived_products.GetDerivedProducts.name"]], "name (eldamwl.elda_mwl.get_lidar_constants.getlidarconstants attribute)": [[19, "ELDAmwl.elda_mwl.get_lidar_constants.GetLidarConstants.name"]], "name (eldamwl.elda_mwl.mwl_products.getproductmatrix attribute)": [[19, "ELDAmwl.elda_mwl.mwl_products.GetProductMatrix.name"]], "name (eldamwl.elda_mwl.mwl_products.qualitycontrol attribute)": [[19, "ELDAmwl.elda_mwl.mwl_products.QualityControl.name"]], "prepare_signals() (eldamwl.elda_mwl.elda_mwl.runeldamwl method)": [[19, "ELDAmwl.elda_mwl.elda_mwl.RunELDAmwl.prepare_signals"]], "prod_id() (eldamwl.elda_mwl.elda_mwl.measurementparams method)": [[19, "ELDAmwl.elda_mwl.elda_mwl.MeasurementParams.prod_id"]], "prod_param() (eldamwl.elda_mwl.elda_mwl.measurementparams method)": [[19, "ELDAmwl.elda_mwl.elda_mwl.MeasurementParams.prod_param"]], "prod_params() (eldamwl.elda_mwl.elda_mwl.measurementparams method)": [[19, "ELDAmwl.elda_mwl.elda_mwl.MeasurementParams.prod_params"]], "prod_types() (eldamwl.elda_mwl.elda_mwl.measurementparams method)": [[19, "ELDAmwl.elda_mwl.elda_mwl.MeasurementParams.prod_types"]], "product_params (eldamwl.elda_mwl.get_basic_products.getbasicproductsdefault attribute)": [[19, "ELDAmwl.elda_mwl.get_basic_products.GetBasicProductsDefault.product_params"]], "product_params (eldamwl.elda_mwl.get_derived_products.getderivedproductsdefault attribute)": [[19, "ELDAmwl.elda_mwl.get_derived_products.GetDerivedProductsDefault.product_params"]], "product_params (eldamwl.elda_mwl.get_lidar_constants.getlidarconstantsdefault attribute)": [[19, "ELDAmwl.elda_mwl.get_lidar_constants.GetLidarConstantsDefault.product_params"]], "product_params (eldamwl.elda_mwl.mwl_products.getproductmatrixdefault attribute)": [[19, "ELDAmwl.elda_mwl.mwl_products.GetProductMatrixDefault.product_params"]], "product_params (eldamwl.elda_mwl.mwl_products.qualitycontroldefault attribute)": [[19, "ELDAmwl.elda_mwl.mwl_products.QualityControlDefault.product_params"]], "quality_control() (eldamwl.elda_mwl.elda_mwl.runeldamwl method)": [[19, "ELDAmwl.elda_mwl.elda_mwl.RunELDAmwl.quality_control"]], "raman_bsc_products() (eldamwl.elda_mwl.elda_mwl.measurementparams method)": [[19, "ELDAmwl.elda_mwl.elda_mwl.MeasurementParams.raman_bsc_products"]], "read_elpp_data() (eldamwl.elda_mwl.elda_mwl.runeldamwl method)": [[19, "ELDAmwl.elda_mwl.elda_mwl.RunELDAmwl.read_elpp_data"]], "read_product_list() (eldamwl.elda_mwl.elda_mwl.measurementparams method)": [[19, "ELDAmwl.elda_mwl.elda_mwl.MeasurementParams.read_product_list"]], "read_tasks() (eldamwl.elda_mwl.elda_mwl.runeldamwl method)": [[19, "ELDAmwl.elda_mwl.elda_mwl.RunELDAmwl.read_tasks"]], "register_params() (in module eldamwl.elda_mwl.elda_mwl)": [[19, "ELDAmwl.elda_mwl.elda_mwl.register_params"]], "run() (eldamwl.elda_mwl.get_basic_products.getbasicproductsdefault method)": [[19, "ELDAmwl.elda_mwl.get_basic_products.GetBasicProductsDefault.run"]], "run() (eldamwl.elda_mwl.get_derived_products.getderivedproductsdefault method)": [[19, "ELDAmwl.elda_mwl.get_derived_products.GetDerivedProductsDefault.run"]], "run() (eldamwl.elda_mwl.get_lidar_constants.getlidarconstantsdefault method)": [[19, "ELDAmwl.elda_mwl.get_lidar_constants.GetLidarConstantsDefault.run"]], "run() (eldamwl.elda_mwl.mwl_products.getproductmatrixdefault method)": [[19, "ELDAmwl.elda_mwl.mwl_products.GetProductMatrixDefault.run"]], "run() (eldamwl.elda_mwl.mwl_products.qualitycontroldefault method)": [[19, "ELDAmwl.elda_mwl.mwl_products.QualityControlDefault.run"]], "shape (eldamwl.elda_mwl.mwl_products.getproductmatrixdefault attribute)": [[19, "ELDAmwl.elda_mwl.mwl_products.GetProductMatrixDefault.shape"]], "smooth_type (eldamwl.elda_mwl.get_basic_products.getbasicproducts attribute)": [[19, "ELDAmwl.elda_mwl.get_basic_products.GetBasicProducts.smooth_type"]], "smooth_type (eldamwl.elda_mwl.get_basic_products.getbasicproductsdefault attribute)": [[19, "ELDAmwl.elda_mwl.get_basic_products.GetBasicProductsDefault.smooth_type"]], "vldr_products() (eldamwl.elda_mwl.elda_mwl.measurementparams method)": [[19, "ELDAmwl.elda_mwl.elda_mwl.MeasurementParams.vldr_products"]], "wavelengths() (eldamwl.elda_mwl.elda_mwl.measurementparams method)": [[19, "ELDAmwl.elda_mwl.elda_mwl.MeasurementParams.wavelengths"]], "write_mwl_output() (eldamwl.elda_mwl.elda_mwl.runeldamwl method)": [[19, "ELDAmwl.elda_mwl.elda_mwl.RunELDAmwl.write_mwl_output"]], "write_single_output() (eldamwl.elda_mwl.elda_mwl.runeldamwl method)": [[19, "ELDAmwl.elda_mwl.elda_mwl.RunELDAmwl.write_single_output"]], "bsccalparamsnotequal": [[20, "ELDAmwl.errors.exceptions.BscCalParamsNotEqual"]], "calrangehigherthanvalid": [[20, "ELDAmwl.errors.exceptions.CalRangeHigherThanValid"]], "cannotopenellpfile": [[20, "ELDAmwl.errors.exceptions.CannotOpenELLPFile"]], "configfilenotfound": [[20, "ELDAmwl.errors.exceptions.ConfigFileNotFound"]], "couldnotfindproductsresolution": [[20, "ELDAmwl.errors.exceptions.CouldNotFindProductsResolution"]], "csvfilenotfound": [[20, "ELDAmwl.errors.exceptions.CsvFileNotFound"]], "dberrorterminating": [[20, "ELDAmwl.errors.exceptions.DBErrorTerminating"]], "detectionlimitzero": [[20, "ELDAmwl.errors.exceptions.DetectionLimitZero"]], "differentcloudmaskexists": [[20, "ELDAmwl.errors.exceptions.DifferentCloudMaskExists"]], "differentheaderexists": [[20, "ELDAmwl.errors.exceptions.DifferentHeaderExists"]], "differentproductsresolution": [[20, "ELDAmwl.errors.exceptions.DifferentProductsResolution"]], "differentwlforlr": [[20, "ELDAmwl.errors.exceptions.DifferentWlForLR"]], "eldamwl.errors": [[20, "module-ELDAmwl.errors"]], "eldamwl.errors.error_codes": [[20, "module-ELDAmwl.errors.error_codes"]], "eldamwl.errors.exceptions": [[20, "module-ELDAmwl.errors.exceptions"]], "eldamwlexception": [[20, "ELDAmwl.errors.exceptions.ELDAmwlException"]], "elppfilenotfound": [[20, "ELDAmwl.errors.exceptions.ELPPFileNotFound"]], "filltablefailed": [[20, "ELDAmwl.errors.exceptions.FillTableFailed"]], "logpathnotexists": [[20, "ELDAmwl.errors.exceptions.LogPathNotExists"]], "nomcoptions": [[20, "ELDAmwl.errors.exceptions.NOMCOptions"]], "nobsccaloptions": [[20, "ELDAmwl.errors.exceptions.NoBscCalOptions"]], "nocalibrwindowfound": [[20, "ELDAmwl.errors.exceptions.NoCalibrWindowFound"]], "novaliddatapointsforcalibration": [[20, "ELDAmwl.errors.exceptions.NoValidDataPointsForCalibration"]], "notenoughmciterations": [[20, "ELDAmwl.errors.exceptions.NotEnoughMCIterations"]], "notfoundinstorage": [[20, "ELDAmwl.errors.exceptions.NotFoundInStorage"]], "onlyoneoverrideallowed": [[20, "ELDAmwl.errors.exceptions.OnlyOneOverrideAllowed"]], "productnotunique": [[20, "ELDAmwl.errors.exceptions.ProductNotUnique"]], "scipywrapperaxiserror": [[20, "ELDAmwl.errors.exceptions.SciPyWrapperAxisError"]], "sizemismatch": [[20, "ELDAmwl.errors.exceptions.SizeMismatch"]], "terminating": [[20, "ELDAmwl.errors.exceptions.Terminating"]], "usecasenotimplemented": [[20, "ELDAmwl.errors.exceptions.UseCaseNotImplemented"]], "wrongcommandlineparameter": [[20, "ELDAmwl.errors.exceptions.WrongCommandLineParameter"]], "prod_id (eldamwl.errors.exceptions.eldamwlexception attribute)": [[20, "ELDAmwl.errors.exceptions.ELDAmwlException.prod_id"]], "return_value (eldamwl.errors.exceptions.bsccalparamsnotequal attribute)": [[20, "ELDAmwl.errors.exceptions.BscCalParamsNotEqual.return_value"]], "return_value (eldamwl.errors.exceptions.calrangehigherthanvalid attribute)": [[20, "ELDAmwl.errors.exceptions.CalRangeHigherThanValid.return_value"]], "return_value (eldamwl.errors.exceptions.cannotopenellpfile attribute)": [[20, "ELDAmwl.errors.exceptions.CannotOpenELLPFile.return_value"]], "return_value (eldamwl.errors.exceptions.couldnotfindproductsresolution attribute)": [[20, "ELDAmwl.errors.exceptions.CouldNotFindProductsResolution.return_value"]], "return_value (eldamwl.errors.exceptions.dberrorterminating attribute)": [[20, "ELDAmwl.errors.exceptions.DBErrorTerminating.return_value"]], "return_value (eldamwl.errors.exceptions.detectionlimitzero attribute)": [[20, "ELDAmwl.errors.exceptions.DetectionLimitZero.return_value"]], "return_value (eldamwl.errors.exceptions.differentcloudmaskexists attribute)": [[20, "ELDAmwl.errors.exceptions.DifferentCloudMaskExists.return_value"]], "return_value (eldamwl.errors.exceptions.differentheaderexists attribute)": [[20, "ELDAmwl.errors.exceptions.DifferentHeaderExists.return_value"]], "return_value (eldamwl.errors.exceptions.differentproductsresolution attribute)": [[20, "ELDAmwl.errors.exceptions.DifferentProductsResolution.return_value"]], "return_value (eldamwl.errors.exceptions.differentwlforlr attribute)": [[20, "ELDAmwl.errors.exceptions.DifferentWlForLR.return_value"]], "return_value (eldamwl.errors.exceptions.eldamwlexception attribute)": [[20, "ELDAmwl.errors.exceptions.ELDAmwlException.return_value"]], "return_value (eldamwl.errors.exceptions.elppfilenotfound attribute)": [[20, "ELDAmwl.errors.exceptions.ELPPFileNotFound.return_value"]], "return_value (eldamwl.errors.exceptions.logpathnotexists attribute)": [[20, "ELDAmwl.errors.exceptions.LogPathNotExists.return_value"]], "return_value (eldamwl.errors.exceptions.nomcoptions attribute)": [[20, "ELDAmwl.errors.exceptions.NOMCOptions.return_value"]], "return_value (eldamwl.errors.exceptions.nobsccaloptions attribute)": [[20, "ELDAmwl.errors.exceptions.NoBscCalOptions.return_value"]], "return_value (eldamwl.errors.exceptions.nocalibrwindowfound attribute)": [[20, "ELDAmwl.errors.exceptions.NoCalibrWindowFound.return_value"]], "return_value (eldamwl.errors.exceptions.novaliddatapointsforcalibration attribute)": [[20, "ELDAmwl.errors.exceptions.NoValidDataPointsForCalibration.return_value"]], "return_value (eldamwl.errors.exceptions.notenoughmciterations attribute)": [[20, "ELDAmwl.errors.exceptions.NotEnoughMCIterations.return_value"]], "return_value (eldamwl.errors.exceptions.notfoundinstorage attribute)": [[20, "ELDAmwl.errors.exceptions.NotFoundInStorage.return_value"]], "return_value (eldamwl.errors.exceptions.onlyoneoverrideallowed attribute)": [[20, "ELDAmwl.errors.exceptions.OnlyOneOverrideAllowed.return_value"]], "return_value (eldamwl.errors.exceptions.usecasenotimplemented attribute)": [[20, "ELDAmwl.errors.exceptions.UseCaseNotImplemented.return_value"]], "return_value (eldamwl.errors.exceptions.wrongcommandlineparameter attribute)": [[20, "ELDAmwl.errors.exceptions.WrongCommandLineParameter.return_value"]], "calcextinction (class in eldamwl.extinction.operation)": [[21, "ELDAmwl.extinction.operation.CalcExtinction"]], "calcextinctiondefault (class in eldamwl.extinction.operation)": [[21, "ELDAmwl.extinction.operation.CalcExtinctionDefault"]], "eldamwl.extinction": [[21, "module-ELDAmwl.extinction"]], "eldamwl.extinction.operation": [[21, "module-ELDAmwl.extinction.operation"]], "eldamwl.extinction.params": [[21, "module-ELDAmwl.extinction.params"]], "eldamwl.extinction.product": [[21, "module-ELDAmwl.extinction.product"]], "extinctionfactory (class in eldamwl.extinction.operation)": [[21, "ELDAmwl.extinction.operation.ExtinctionFactory"]], "extinctionfactorydefault (class in eldamwl.extinction.operation)": [[21, "ELDAmwl.extinction.operation.ExtinctionFactoryDefault"]], "extinctionparams (class in eldamwl.extinction.params)": [[21, "ELDAmwl.extinction.params.ExtinctionParams"]], "extinctions (class in eldamwl.extinction.product)": [[21, "ELDAmwl.extinction.product.Extinctions"]], "add_signal_role() (eldamwl.extinction.params.extinctionparams method)": [[21, "ELDAmwl.extinction.params.ExtinctionParams.add_signal_role"]], "ang_exp_asdataarray (eldamwl.extinction.params.extinctionparams property)": [[21, "ELDAmwl.extinction.params.ExtinctionParams.ang_exp_asDataArray"]], "calc_single_profile() (eldamwl.extinction.operation.calcextinctiondefault method)": [[21, "ELDAmwl.extinction.operation.CalcExtinctionDefault.calc_single_profile"]], "calc_slope() (eldamwl.extinction.operation.calcextinctiondefault method)": [[21, "ELDAmwl.extinction.operation.CalcExtinctionDefault.calc_slope"]], "empty_ext (eldamwl.extinction.operation.extinctionfactorydefault attribute)": [[21, "ELDAmwl.extinction.operation.ExtinctionFactoryDefault.empty_ext"]], "ext_params (eldamwl.extinction.operation.calcextinctiondefault attribute)": [[21, "ELDAmwl.extinction.operation.CalcExtinctionDefault.ext_params"]], "from_db() (eldamwl.extinction.params.extinctionparams method)": [[21, "ELDAmwl.extinction.params.ExtinctionParams.from_db"]], "get_classname_from_db() (eldamwl.extinction.operation.calcextinction method)": [[21, "ELDAmwl.extinction.operation.CalcExtinction.get_classname_from_db"]], "get_classname_from_db() (eldamwl.extinction.operation.extinctionfactory method)": [[21, "ELDAmwl.extinction.operation.ExtinctionFactory.get_classname_from_db"]], "get_non_merge_product() (eldamwl.extinction.operation.extinctionfactorydefault method)": [[21, "ELDAmwl.extinction.operation.ExtinctionFactoryDefault.get_non_merge_product"]], "get_product() (eldamwl.extinction.operation.extinctionfactorydefault method)": [[21, "ELDAmwl.extinction.operation.ExtinctionFactoryDefault.get_product"]], "get_smooth_res() (eldamwl.extinction.operation.extinctionfactorydefault method)": [[21, "ELDAmwl.extinction.operation.ExtinctionFactoryDefault.get_smooth_res"]], "init() (eldamwl.extinction.product.extinctions class method)": [[21, "ELDAmwl.extinction.product.Extinctions.init"]], "name (eldamwl.extinction.operation.calcextinction attribute)": [[21, "ELDAmwl.extinction.operation.CalcExtinction.name"]], "name (eldamwl.extinction.operation.calcextinctiondefault attribute)": [[21, "ELDAmwl.extinction.operation.CalcExtinctionDefault.name"]], "name (eldamwl.extinction.operation.extinctionfactory attribute)": [[21, "ELDAmwl.extinction.operation.ExtinctionFactory.name"]], "name (eldamwl.extinction.operation.extinctionfactorydefault attribute)": [[21, "ELDAmwl.extinction.operation.ExtinctionFactoryDefault.name"]], "param (eldamwl.extinction.operation.extinctionfactorydefault attribute)": [[21, "ELDAmwl.extinction.operation.ExtinctionFactoryDefault.param"]], "prepare() (eldamwl.extinction.operation.extinctionfactorydefault method)": [[21, "ELDAmwl.extinction.operation.ExtinctionFactoryDefault.prepare"]], "prepare_data() (eldamwl.extinction.operation.calcextinctiondefault method)": [[21, "ELDAmwl.extinction.operation.CalcExtinctionDefault.prepare_data"]], "prod_id (eldamwl.extinction.operation.extinctionfactorydefault attribute)": [[21, "ELDAmwl.extinction.operation.ExtinctionFactoryDefault.prod_id"]], "qf_data (eldamwl.extinction.operation.calcextinctiondefault attribute)": [[21, "ELDAmwl.extinction.operation.CalcExtinctionDefault.qf_data"]], "raman_sig (eldamwl.extinction.operation.extinctionfactorydefault attribute)": [[21, "ELDAmwl.extinction.operation.ExtinctionFactoryDefault.raman_sig"]], "resolution (eldamwl.extinction.operation.extinctionfactorydefault attribute)": [[21, "ELDAmwl.extinction.operation.ExtinctionFactoryDefault.resolution"]], "result (eldamwl.extinction.operation.calcextinctiondefault attribute)": [[21, "ELDAmwl.extinction.operation.CalcExtinctionDefault.result"]], "run() (eldamwl.extinction.operation.calcextinctiondefault method)": [[21, "ELDAmwl.extinction.operation.CalcExtinctionDefault.run"]], "signal (eldamwl.extinction.operation.calcextinctiondefault attribute)": [[21, "ELDAmwl.extinction.operation.CalcExtinctionDefault.signal"]], "slope_routine (eldamwl.extinction.operation.calcextinctiondefault attribute)": [[21, "ELDAmwl.extinction.operation.CalcExtinctionDefault.slope_routine"]], "slope_to_ext_routine (eldamwl.extinction.operation.calcextinctiondefault attribute)": [[21, "ELDAmwl.extinction.operation.CalcExtinctionDefault.slope_to_ext_routine"]], "smooth_params_auto (eldamwl.extinction.params.extinctionparams property)": [[21, "ELDAmwl.extinction.params.ExtinctionParams.smooth_params_auto"]], "smooth_res (eldamwl.extinction.operation.extinctionfactorydefault attribute)": [[21, "ELDAmwl.extinction.operation.ExtinctionFactoryDefault.smooth_res"]], "to_meta_ds_dict() (eldamwl.extinction.params.extinctionparams method)": [[21, "ELDAmwl.extinction.params.ExtinctionParams.to_meta_ds_dict"]], "to_meta_ds_dict() (eldamwl.extinction.product.extinctions method)": [[21, "ELDAmwl.extinction.product.Extinctions.to_meta_ds_dict"]], "x_data (eldamwl.extinction.operation.calcextinctiondefault attribute)": [[21, "ELDAmwl.extinction.operation.CalcExtinctionDefault.x_data"]], "y_data (eldamwl.extinction.operation.calcextinctiondefault attribute)": [[21, "ELDAmwl.extinction.operation.CalcExtinctionDefault.y_data"]], "yerr_data (eldamwl.extinction.operation.calcextinctiondefault attribute)": [[21, "ELDAmwl.extinction.operation.CalcExtinctionDefault.yerr_data"]], "eldamwl.extinction.tools": [[22, "module-ELDAmwl.extinction.tools"]], "eldamwl.extinction.tools.operation": [[22, "module-ELDAmwl.extinction.tools.operation"]], "extinctionautosmooth (class in eldamwl.extinction.tools.operation)": [[22, "ELDAmwl.extinction.tools.operation.ExtinctionAutosmooth"]], "extinctionautosmoothdefault (class in eldamwl.extinction.tools.operation)": [[22, "ELDAmwl.extinction.tools.operation.ExtinctionAutosmoothDefault"]], "linfit (class in eldamwl.extinction.tools.operation)": [[22, "ELDAmwl.extinction.tools.operation.LinFit"]], "nonweightedlinearfit (class in eldamwl.extinction.tools.operation)": [[22, "ELDAmwl.extinction.tools.operation.NonWeightedLinearFit"]], "signalslope (class in eldamwl.extinction.tools.operation)": [[22, "ELDAmwl.extinction.tools.operation.SignalSlope"]], "slopetoextinction (class in eldamwl.extinction.tools.operation)": [[22, "ELDAmwl.extinction.tools.operation.SlopeToExtinction"]], "slopetoextinctiondefault (class in eldamwl.extinction.tools.operation)": [[22, "ELDAmwl.extinction.tools.operation.SlopeToExtinctionDefault"]], "weightedlinearfit (class in eldamwl.extinction.tools.operation)": [[22, "ELDAmwl.extinction.tools.operation.WeightedLinearFit"]], "data (eldamwl.extinction.tools.operation.linfit attribute)": [[22, "ELDAmwl.extinction.tools.operation.LinFit.data"]], "get_classname_from_db() (eldamwl.extinction.tools.operation.extinctionautosmooth method)": [[22, "ELDAmwl.extinction.tools.operation.ExtinctionAutosmooth.get_classname_from_db"]], "get_classname_from_db() (eldamwl.extinction.tools.operation.signalslope method)": [[22, "ELDAmwl.extinction.tools.operation.SignalSlope.get_classname_from_db"]], "get_classname_from_db() (eldamwl.extinction.tools.operation.slopetoextinction method)": [[22, "ELDAmwl.extinction.tools.operation.SlopeToExtinction.get_classname_from_db"]], "max_smooth() (eldamwl.extinction.tools.operation.extinctionautosmoothdefault method)": [[22, "ELDAmwl.extinction.tools.operation.ExtinctionAutosmoothDefault.max_smooth"]], "name (eldamwl.extinction.tools.operation.extinctionautosmooth attribute)": [[22, "ELDAmwl.extinction.tools.operation.ExtinctionAutosmooth.name"]], "name (eldamwl.extinction.tools.operation.extinctionautosmoothdefault attribute)": [[22, "ELDAmwl.extinction.tools.operation.ExtinctionAutosmoothDefault.name"]], "name (eldamwl.extinction.tools.operation.linfit attribute)": [[22, "ELDAmwl.extinction.tools.operation.LinFit.name"]], "name (eldamwl.extinction.tools.operation.nonweightedlinearfit attribute)": [[22, "ELDAmwl.extinction.tools.operation.NonWeightedLinearFit.name"]], "name (eldamwl.extinction.tools.operation.signalslope attribute)": [[22, "ELDAmwl.extinction.tools.operation.SignalSlope.name"]], "name (eldamwl.extinction.tools.operation.slopetoextinction attribute)": [[22, "ELDAmwl.extinction.tools.operation.SlopeToExtinction.name"]], "name (eldamwl.extinction.tools.operation.slopetoextinctiondefault attribute)": [[22, "ELDAmwl.extinction.tools.operation.SlopeToExtinctionDefault.name"]], "name (eldamwl.extinction.tools.operation.weightedlinearfit attribute)": [[22, "ELDAmwl.extinction.tools.operation.WeightedLinearFit.name"]], "prod_id (eldamwl.extinction.tools.operation.signalslope attribute)": [[22, "ELDAmwl.extinction.tools.operation.SignalSlope.prod_id"]], "run() (eldamwl.extinction.tools.operation.extinctionautosmoothdefault method)": [[22, "ELDAmwl.extinction.tools.operation.ExtinctionAutosmoothDefault.run"]], "run() (eldamwl.extinction.tools.operation.linfit method)": [[22, "ELDAmwl.extinction.tools.operation.LinFit.run"]], "run() (eldamwl.extinction.tools.operation.nonweightedlinearfit method)": [[22, "ELDAmwl.extinction.tools.operation.NonWeightedLinearFit.run"]], "run() (eldamwl.extinction.tools.operation.slopetoextinctiondefault method)": [[22, "ELDAmwl.extinction.tools.operation.SlopeToExtinctionDefault.run"]], "run() (eldamwl.extinction.tools.operation.weightedlinearfit method)": [[22, "ELDAmwl.extinction.tools.operation.WeightedLinearFit.run"]], "signal (eldamwl.extinction.tools.operation.extinctionautosmoothdefault attribute)": [[22, "ELDAmwl.extinction.tools.operation.ExtinctionAutosmoothDefault.signal"]], "smooth_params (eldamwl.extinction.tools.operation.extinctionautosmoothdefault attribute)": [[22, "ELDAmwl.extinction.tools.operation.ExtinctionAutosmoothDefault.smooth_params"]], "eldamwl.extinction.vertical_resolution": [[23, "module-ELDAmwl.extinction.vertical_resolution"]], "eldamwl.extinction.vertical_resolution.operation": [[23, "module-ELDAmwl.extinction.vertical_resolution.operation"]], "exteffbinres (class in eldamwl.extinction.vertical_resolution.operation)": [[23, "ELDAmwl.extinction.vertical_resolution.operation.ExtEffBinRes"]], "extusedbinres (class in eldamwl.extinction.vertical_resolution.operation)": [[23, "ELDAmwl.extinction.vertical_resolution.operation.ExtUsedBinRes"]], "linfiteffbinres (class in eldamwl.extinction.vertical_resolution.operation)": [[23, "ELDAmwl.extinction.vertical_resolution.operation.LinFitEffBinRes"]], "linfitusedbinres (class in eldamwl.extinction.vertical_resolution.operation)": [[23, "ELDAmwl.extinction.vertical_resolution.operation.LinFitUsedBinRes"]], "get_classname_from_db() (eldamwl.extinction.vertical_resolution.operation.exteffbinres method)": [[23, "ELDAmwl.extinction.vertical_resolution.operation.ExtEffBinRes.get_classname_from_db"]], "get_classname_from_db() (eldamwl.extinction.vertical_resolution.operation.extusedbinres method)": [[23, "ELDAmwl.extinction.vertical_resolution.operation.ExtUsedBinRes.get_classname_from_db"]], "name (eldamwl.extinction.vertical_resolution.operation.exteffbinres attribute)": [[23, "ELDAmwl.extinction.vertical_resolution.operation.ExtEffBinRes.name"]], "name (eldamwl.extinction.vertical_resolution.operation.extusedbinres attribute)": [[23, "ELDAmwl.extinction.vertical_resolution.operation.ExtUsedBinRes.name"]], "name (eldamwl.extinction.vertical_resolution.operation.linfiteffbinres attribute)": [[23, "ELDAmwl.extinction.vertical_resolution.operation.LinFitEffBinRes.name"]], "name (eldamwl.extinction.vertical_resolution.operation.linfitusedbinres attribute)": [[23, "ELDAmwl.extinction.vertical_resolution.operation.LinFitUsedBinRes.name"]], "prod_id (eldamwl.extinction.vertical_resolution.operation.exteffbinres attribute)": [[23, "ELDAmwl.extinction.vertical_resolution.operation.ExtEffBinRes.prod_id"]], "prod_id (eldamwl.extinction.vertical_resolution.operation.extusedbinres attribute)": [[23, "ELDAmwl.extinction.vertical_resolution.operation.ExtUsedBinRes.prod_id"]], "run() (eldamwl.extinction.vertical_resolution.operation.linfiteffbinres method)": [[23, "ELDAmwl.extinction.vertical_resolution.operation.LinFitEffBinRes.run"]], "run() (eldamwl.extinction.vertical_resolution.operation.linfitusedbinres method)": [[23, "ELDAmwl.extinction.vertical_resolution.operation.LinFitUsedBinRes.run"]], "calclidarratio (class in eldamwl.lidar_ratio.operation)": [[24, "ELDAmwl.lidar_ratio.operation.CalcLidarRatio"]], "calclidarratiodefault (class in eldamwl.lidar_ratio.operation)": [[24, "ELDAmwl.lidar_ratio.operation.CalcLidarRatioDefault"]], "eldamwl.lidar_ratio": [[24, "module-ELDAmwl.lidar_ratio"]], "eldamwl.lidar_ratio.operation": [[24, "module-ELDAmwl.lidar_ratio.operation"]], "eldamwl.lidar_ratio.params": [[24, "module-ELDAmwl.lidar_ratio.params"]], "eldamwl.lidar_ratio.product": [[24, "module-ELDAmwl.lidar_ratio.product"]], "lidarratiofactory (class in eldamwl.lidar_ratio.operation)": [[24, "ELDAmwl.lidar_ratio.operation.LidarRatioFactory"]], "lidarratiofactorydefault (class in eldamwl.lidar_ratio.operation)": [[24, "ELDAmwl.lidar_ratio.operation.LidarRatioFactoryDefault"]], "lidarratioparams (class in eldamwl.lidar_ratio.params)": [[24, "ELDAmwl.lidar_ratio.params.LidarRatioParams"]], "lidarratios (class in eldamwl.lidar_ratio.product)": [[24, "ELDAmwl.lidar_ratio.product.LidarRatios"]], "assign_to_product_list() (eldamwl.lidar_ratio.params.lidarratioparams method)": [[24, "ELDAmwl.lidar_ratio.params.LidarRatioParams.assign_to_product_list"]], "bsc (eldamwl.lidar_ratio.operation.calclidarratiodefault attribute)": [[24, "ELDAmwl.lidar_ratio.operation.CalcLidarRatioDefault.bsc"]], "bsc (eldamwl.lidar_ratio.operation.lidarratiofactorydefault attribute)": [[24, "ELDAmwl.lidar_ratio.operation.LidarRatioFactoryDefault.bsc"]], "empty_lr (eldamwl.lidar_ratio.operation.lidarratiofactorydefault attribute)": [[24, "ELDAmwl.lidar_ratio.operation.LidarRatioFactoryDefault.empty_lr"]], "ext (eldamwl.lidar_ratio.operation.calclidarratiodefault attribute)": [[24, "ELDAmwl.lidar_ratio.operation.CalcLidarRatioDefault.ext"]], "ext (eldamwl.lidar_ratio.operation.lidarratiofactorydefault attribute)": [[24, "ELDAmwl.lidar_ratio.operation.LidarRatioFactoryDefault.ext"]], "from_db() (eldamwl.lidar_ratio.params.lidarratioparams method)": [[24, "ELDAmwl.lidar_ratio.params.LidarRatioParams.from_db"]], "get_classname_from_db() (eldamwl.lidar_ratio.operation.calclidarratio method)": [[24, "ELDAmwl.lidar_ratio.operation.CalcLidarRatio.get_classname_from_db"]], "get_classname_from_db() (eldamwl.lidar_ratio.operation.lidarratiofactory method)": [[24, "ELDAmwl.lidar_ratio.operation.LidarRatioFactory.get_classname_from_db"]], "get_non_merge_product() (eldamwl.lidar_ratio.operation.lidarratiofactorydefault method)": [[24, "ELDAmwl.lidar_ratio.operation.LidarRatioFactoryDefault.get_non_merge_product"]], "get_product() (eldamwl.lidar_ratio.operation.lidarratiofactorydefault method)": [[24, "ELDAmwl.lidar_ratio.operation.LidarRatioFactoryDefault.get_product"]], "init() (eldamwl.lidar_ratio.product.lidarratios class method)": [[24, "ELDAmwl.lidar_ratio.product.LidarRatios.init"]], "name (eldamwl.lidar_ratio.operation.calclidarratio attribute)": [[24, "ELDAmwl.lidar_ratio.operation.CalcLidarRatio.name"]], "name (eldamwl.lidar_ratio.operation.calclidarratiodefault attribute)": [[24, "ELDAmwl.lidar_ratio.operation.CalcLidarRatioDefault.name"]], "name (eldamwl.lidar_ratio.operation.lidarratiofactory attribute)": [[24, "ELDAmwl.lidar_ratio.operation.LidarRatioFactory.name"]], "name (eldamwl.lidar_ratio.operation.lidarratiofactorydefault attribute)": [[24, "ELDAmwl.lidar_ratio.operation.LidarRatioFactoryDefault.name"]], "param (eldamwl.lidar_ratio.operation.lidarratiofactorydefault attribute)": [[24, "ELDAmwl.lidar_ratio.operation.LidarRatioFactoryDefault.param"]], "prepare() (eldamwl.lidar_ratio.operation.lidarratiofactorydefault method)": [[24, "ELDAmwl.lidar_ratio.operation.LidarRatioFactoryDefault.prepare"]], "prod_id (eldamwl.lidar_ratio.operation.lidarratiofactorydefault attribute)": [[24, "ELDAmwl.lidar_ratio.operation.LidarRatioFactoryDefault.prod_id"]], "resolution (eldamwl.lidar_ratio.operation.lidarratiofactorydefault attribute)": [[24, "ELDAmwl.lidar_ratio.operation.LidarRatioFactoryDefault.resolution"]], "result (eldamwl.lidar_ratio.operation.calclidarratiodefault attribute)": [[24, "ELDAmwl.lidar_ratio.operation.CalcLidarRatioDefault.result"]], "result (eldamwl.lidar_ratio.operation.lidarratiofactorydefault attribute)": [[24, "ELDAmwl.lidar_ratio.operation.LidarRatioFactoryDefault.result"]], "run() (eldamwl.lidar_ratio.operation.calclidarratiodefault method)": [[24, "ELDAmwl.lidar_ratio.operation.CalcLidarRatioDefault.run"]], "to_meta_ds_dict() (eldamwl.lidar_ratio.params.lidarratioparams method)": [[24, "ELDAmwl.lidar_ratio.params.LidarRatioParams.to_meta_ds_dict"]], "to_meta_ds_dict() (eldamwl.lidar_ratio.product.lidarratios method)": [[24, "ELDAmwl.lidar_ratio.product.LidarRatios.to_meta_ds_dict"]], "eldamwl.log": [[25, "module-ELDAmwl.log"]], "eldamwl.log.log": [[25, "module-ELDAmwl.log.log"]], "logger (class in eldamwl.log.log)": [[25, "ELDAmwl.log.log.Logger"]], "cfg (eldamwl.log.log.logger property)": [[25, "ELDAmwl.log.log.Logger.cfg"]], "critical() (eldamwl.log.log.logger method)": [[25, "ELDAmwl.log.log.Logger.critical"]], "db_log() (eldamwl.log.log.logger method)": [[25, "ELDAmwl.log.log.Logger.db_log"]], "db_log_func (eldamwl.log.log.logger attribute)": [[25, "ELDAmwl.log.log.Logger.db_log_func"]], "db_log_level (eldamwl.log.log.logger attribute)": [[25, "ELDAmwl.log.log.Logger.db_log_level"]], "debug() (eldamwl.log.log.logger method)": [[25, "ELDAmwl.log.log.Logger.debug"]], "error() (eldamwl.log.log.logger method)": [[25, "ELDAmwl.log.log.Logger.error"]], "fatal() (eldamwl.log.log.logger method)": [[25, "ELDAmwl.log.log.Logger.fatal"]], "get_logger_formatter() (eldamwl.log.log.logger method)": [[25, "ELDAmwl.log.log.Logger.get_logger_formatter"]], "info() (eldamwl.log.log.logger method)": [[25, "ELDAmwl.log.log.Logger.info"]], "log_message() (eldamwl.log.log.logger method)": [[25, "ELDAmwl.log.log.Logger.log_message"]], "logger (eldamwl.log.log.logger attribute)": [[25, "ELDAmwl.log.log.Logger.logger"]], "register_db_logger() (in module eldamwl.log.log)": [[25, "ELDAmwl.log.log.register_db_logger"]], "register_logger() (in module eldamwl.log.log)": [[25, "ELDAmwl.log.log.register_logger"]], "setlevel() (eldamwl.log.log.logger method)": [[25, "ELDAmwl.log.log.Logger.setLevel"]], "setup_console_logger() (eldamwl.log.log.logger method)": [[25, "ELDAmwl.log.log.Logger.setup_console_logger"]], "setup_db_logger() (eldamwl.log.log.logger method)": [[25, "ELDAmwl.log.log.Logger.setup_db_logger"]], "setup_file_logger() (eldamwl.log.log.logger method)": [[25, "ELDAmwl.log.log.Logger.setup_file_logger"]], "setup_logger() (eldamwl.log.log.logger method)": [[25, "ELDAmwl.log.log.Logger.setup_logger"]], "warning() (eldamwl.log.log.logger method)": [[25, "ELDAmwl.log.log.Logger.warning"]], "basedispatcher (class in eldamwl.monte_carlo.parallel_funcs)": [[26, "ELDAmwl.monte_carlo.parallel_funcs.BaseDispatcher"]], "createmccopies (class in eldamwl.monte_carlo.operation)": [[26, "ELDAmwl.monte_carlo.operation.CreateMCCopies"]], "createmccopiesdefault (class in eldamwl.monte_carlo.operation)": [[26, "ELDAmwl.monte_carlo.operation.CreateMCCopiesDefault"]], "eldamwl.monte_carlo": [[26, "module-ELDAmwl.monte_carlo"]], "eldamwl.monte_carlo.operation": [[26, "module-ELDAmwl.monte_carlo.operation"]], "eldamwl.monte_carlo.parallel_funcs": [[26, "module-ELDAmwl.monte_carlo.parallel_funcs"]], "montecarlo (class in eldamwl.monte_carlo.operation)": [[26, "ELDAmwl.monte_carlo.operation.MonteCarlo"]], "montecarloelastbscadapter (class in eldamwl.monte_carlo.operation)": [[26, "ELDAmwl.monte_carlo.operation.MonteCarloElastBscAdapter"]], "montecarloextadapter (class in eldamwl.monte_carlo.operation)": [[26, "ELDAmwl.monte_carlo.operation.MonteCarloExtAdapter"]], "calc_mc_error() (eldamwl.monte_carlo.operation.montecarlo method)": [[26, "ELDAmwl.monte_carlo.operation.MonteCarlo.calc_mc_error"]], "cfg (eldamwl.monte_carlo.operation.montecarlo property)": [[26, "ELDAmwl.monte_carlo.operation.MonteCarlo.cfg"]], "dispatch_jobs_parallel() (eldamwl.monte_carlo.parallel_funcs.basedispatcher method)": [[26, "ELDAmwl.monte_carlo.parallel_funcs.BaseDispatcher.dispatch_jobs_parallel"]], "get_classname_from_db() (eldamwl.monte_carlo.operation.createmccopies method)": [[26, "ELDAmwl.monte_carlo.operation.CreateMCCopies.get_classname_from_db"]], "get_data() (eldamwl.monte_carlo.operation.montecarloelastbscadapter method)": [[26, "ELDAmwl.monte_carlo.operation.MonteCarloElastBscAdapter.get_data"]], "get_data() (eldamwl.monte_carlo.operation.montecarloextadapter method)": [[26, "ELDAmwl.monte_carlo.operation.MonteCarloExtAdapter.get_data"]], "get_sample_inputs() (eldamwl.monte_carlo.operation.montecarlo method)": [[26, "ELDAmwl.monte_carlo.operation.MonteCarlo.get_sample_inputs"]], "get_sample_inputs() (eldamwl.monte_carlo.operation.montecarloelastbscadapter method)": [[26, "ELDAmwl.monte_carlo.operation.MonteCarloElastBscAdapter.get_sample_inputs"]], "get_sample_results() (eldamwl.monte_carlo.operation.montecarlo method)": [[26, "ELDAmwl.monte_carlo.operation.MonteCarlo.get_sample_results"]], "logger (eldamwl.monte_carlo.operation.montecarlo property)": [[26, "ELDAmwl.monte_carlo.operation.MonteCarlo.logger"]], "name (eldamwl.monte_carlo.operation.createmccopies attribute)": [[26, "ELDAmwl.monte_carlo.operation.CreateMCCopies.name"]], "name (eldamwl.monte_carlo.operation.createmccopiesdefault attribute)": [[26, "ELDAmwl.monte_carlo.operation.CreateMCCopiesDefault.name"]], "register_monte_carlo() (in module eldamwl.monte_carlo.operation)": [[26, "ELDAmwl.monte_carlo.operation.register_monte_carlo"]], "run() (eldamwl.monte_carlo.operation.createmccopiesdefault method)": [[26, "ELDAmwl.monte_carlo.operation.CreateMCCopiesDefault.run"]], "run() (eldamwl.monte_carlo.operation.montecarloelastbscadapter method)": [[26, "ELDAmwl.monte_carlo.operation.MonteCarloElastBscAdapter.run"]], "run() (eldamwl.monte_carlo.operation.montecarloextadapter method)": [[26, "ELDAmwl.monte_carlo.operation.MonteCarloExtAdapter.run"]], "sample_inputs (eldamwl.monte_carlo.operation.montecarlo attribute)": [[26, "ELDAmwl.monte_carlo.operation.MonteCarlo.sample_inputs"]], "sample_results (eldamwl.monte_carlo.operation.montecarlo attribute)": [[26, "ELDAmwl.monte_carlo.operation.MonteCarlo.sample_results"]], "anc_var_att (eldamwl.output.mwl_file_structure.mwlfilestructure attribute)": [[27, "ELDAmwl.output.mwl_file_structure.MWLFileStructure.ANC_VAR_ATT"]], "coo_attr (eldamwl.output.mwl_file_structure.mwlfilestructure attribute)": [[27, "ELDAmwl.output.mwl_file_structure.MWLFileStructure.COO_ATTR"]], "eldamwl.output": [[27, "module-ELDAmwl.output"]], "eldamwl.output.mwl_file_structure": [[27, "module-ELDAmwl.output.mwl_file_structure"]], "eldamwl.output.write_mwl_output": [[27, "module-ELDAmwl.output.write_mwl_output"]], "general (eldamwl.output.mwl_file_structure.mwlfilestructure attribute)": [[27, "ELDAmwl.output.mwl_file_structure.MWLFileStructure.GENERAL"]], "group_name (eldamwl.output.mwl_file_structure.mwlfilestructure attribute)": [[27, "ELDAmwl.output.mwl_file_structure.MWLFileStructure.GROUP_NAME"]], "header_attrs (eldamwl.output.mwl_file_structure.mwlfilestructure attribute)": [[27, "ELDAmwl.output.mwl_file_structure.MWLFileStructure.HEADER_ATTRS"]], "header_vars (eldamwl.output.mwl_file_structure.mwlfilestructure attribute)": [[27, "ELDAmwl.output.mwl_file_structure.MWLFileStructure.HEADER_VARS"]], "highres_products (eldamwl.output.mwl_file_structure.mwlfilestructure attribute)": [[27, "ELDAmwl.output.mwl_file_structure.MWLFileStructure.HIGHRES_PRODUCTS"]], "long_names (eldamwl.output.mwl_file_structure.mwlfilestructure attribute)": [[27, "ELDAmwl.output.mwl_file_structure.MWLFileStructure.LONG_NAMES"]], "lowres_products (eldamwl.output.mwl_file_structure.mwlfilestructure attribute)": [[27, "ELDAmwl.output.mwl_file_structure.MWLFileStructure.LOWRES_PRODUCTS"]], "main_groups (eldamwl.output.mwl_file_structure.mwlfilestructure attribute)": [[27, "ELDAmwl.output.mwl_file_structure.MWLFileStructure.MAIN_GROUPS"]], "meta_data (eldamwl.output.mwl_file_structure.mwlfilestructure attribute)": [[27, "ELDAmwl.output.mwl_file_structure.MWLFileStructure.META_DATA"]], "mwlfilestructure (class in eldamwl.output.mwl_file_structure)": [[27, "ELDAmwl.output.mwl_file_structure.MWLFileStructure"]], "mwlfilevarsfromdb (class in eldamwl.output.mwl_file_structure)": [[27, "ELDAmwl.output.mwl_file_structure.MWLFileVarsFromDB"]], "nc_var_names (eldamwl.output.mwl_file_structure.mwlfilestructure attribute)": [[27, "ELDAmwl.output.mwl_file_structure.MWLFileStructure.NC_VAR_NAMES"]], "processor_name (eldamwl.output.mwl_file_structure.mwlfilestructure attribute)": [[27, "ELDAmwl.output.mwl_file_structure.MWLFileStructure.PROCESSOR_NAME"]], "references (eldamwl.output.mwl_file_structure.mwlfilestructure attribute)": [[27, "ELDAmwl.output.mwl_file_structure.MWLFileStructure.REFERENCES"]], "res_group (eldamwl.output.mwl_file_structure.mwlfilestructure attribute)": [[27, "ELDAmwl.output.mwl_file_structure.MWLFileStructure.RES_GROUP"]], "title (eldamwl.output.mwl_file_structure.mwlfilestructure attribute)": [[27, "ELDAmwl.output.mwl_file_structure.MWLFileStructure.TITLE"]], "units (eldamwl.output.mwl_file_structure.mwlfilestructure attribute)": [[27, "ELDAmwl.output.mwl_file_structure.MWLFileStructure.UNITS"]], "write_mode (eldamwl.output.mwl_file_structure.mwlfilestructure attribute)": [[27, "ELDAmwl.output.mwl_file_structure.MWLFileStructure.WRITE_MODE"]], "writemwloutput (class in eldamwl.output.write_mwl_output)": [[27, "ELDAmwl.output.write_mwl_output.WriteMWLOutput"]], "writemwloutputdefault (class in eldamwl.output.write_mwl_output)": [[27, "ELDAmwl.output.write_mwl_output.WriteMWLOutputDefault"]], "bsc_calibr_method_var() (eldamwl.output.mwl_file_structure.mwlfilevarsfromdb method)": [[27, "ELDAmwl.output.mwl_file_structure.MWLFileVarsFromDB.bsc_calibr_method_var"]], "bsc_calibr_value_var() (eldamwl.output.mwl_file_structure.mwlfilestructure method)": [[27, "ELDAmwl.output.mwl_file_structure.MWLFileStructure.bsc_calibr_value_var"]], "bsc_method_var() (eldamwl.output.mwl_file_structure.mwlfilevarsfromdb method)": [[27, "ELDAmwl.output.mwl_file_structure.MWLFileVarsFromDB.bsc_method_var"]], "cal_search_range_var() (eldamwl.output.mwl_file_structure.mwlfilestructure method)": [[27, "ELDAmwl.output.mwl_file_structure.MWLFileStructure.cal_search_range_var"]], "collect_header_info() (eldamwl.output.write_mwl_output.writemwloutputdefault method)": [[27, "ELDAmwl.output.write_mwl_output.WriteMWLOutputDefault.collect_header_info"]], "collect_meta_data() (eldamwl.output.write_mwl_output.writemwloutputdefault method)": [[27, "ELDAmwl.output.write_mwl_output.WriteMWLOutputDefault.collect_meta_data"]], "data (eldamwl.output.write_mwl_output.writemwloutputdefault attribute)": [[27, "ELDAmwl.output.write_mwl_output.WriteMWLOutputDefault.data"]], "data_attrs() (eldamwl.output.mwl_file_structure.mwlfilestructure method)": [[27, "ELDAmwl.output.mwl_file_structure.MWLFileStructure.data_attrs"]], "data_storage (eldamwl.output.write_mwl_output.writemwloutputdefault attribute)": [[27, "ELDAmwl.output.write_mwl_output.WriteMWLOutputDefault.data_storage"]], "db_func (eldamwl.output.mwl_file_structure.mwlfilevarsfromdb property)": [[27, "ELDAmwl.output.mwl_file_structure.MWLFileVarsFromDB.db_func"]], "elast_bsc_algorithm_var() (eldamwl.output.mwl_file_structure.mwlfilevarsfromdb method)": [[27, "ELDAmwl.output.mwl_file_structure.MWLFileVarsFromDB.elast_bsc_algorithm_var"]], "err_attrs() (eldamwl.output.mwl_file_structure.mwlfilestructure method)": [[27, "ELDAmwl.output.mwl_file_structure.MWLFileStructure.err_attrs"]], "error_method_var() (eldamwl.output.mwl_file_structure.mwlfilestructure method)": [[27, "ELDAmwl.output.mwl_file_structure.MWLFileStructure.error_method_var"]], "ext_algorithm_var() (eldamwl.output.mwl_file_structure.mwlfilevarsfromdb method)": [[27, "ELDAmwl.output.mwl_file_structure.MWLFileVarsFromDB.ext_algorithm_var"]], "get_classname_from_db() (eldamwl.output.write_mwl_output.writemwloutput method)": [[27, "ELDAmwl.output.write_mwl_output.WriteMWLOutput.get_classname_from_db"]], "meta_data (eldamwl.output.write_mwl_output.writemwloutputdefault attribute)": [[27, "ELDAmwl.output.write_mwl_output.WriteMWLOutputDefault.meta_data"]], "method_var_from_db() (eldamwl.output.mwl_file_structure.mwlfilevarsfromdb method)": [[27, "ELDAmwl.output.mwl_file_structure.MWLFileVarsFromDB.method_var_from_db"]], "mwl_filename() (eldamwl.output.write_mwl_output.writemwloutputdefault method)": [[27, "ELDAmwl.output.write_mwl_output.WriteMWLOutputDefault.mwl_filename"]], "name (eldamwl.output.write_mwl_output.writemwloutput attribute)": [[27, "ELDAmwl.output.write_mwl_output.WriteMWLOutput.name"]], "out_filename (eldamwl.output.write_mwl_output.writemwloutputdefault attribute)": [[27, "ELDAmwl.output.write_mwl_output.WriteMWLOutputDefault.out_filename"]], "product_params (eldamwl.output.write_mwl_output.writemwloutputdefault attribute)": [[27, "ELDAmwl.output.write_mwl_output.WriteMWLOutputDefault.product_params"]], "ram_bsc_algorithm_var() (eldamwl.output.mwl_file_structure.mwlfilevarsfromdb method)": [[27, "ELDAmwl.output.mwl_file_structure.MWLFileVarsFromDB.ram_bsc_algorithm_var"]], "register_to_db() (eldamwl.output.write_mwl_output.writemwloutputdefault method)": [[27, "ELDAmwl.output.write_mwl_output.WriteMWLOutputDefault.register_to_db"]], "run() (eldamwl.output.write_mwl_output.writemwloutputdefault method)": [[27, "ELDAmwl.output.write_mwl_output.WriteMWLOutputDefault.run"]], "write_groups() (eldamwl.output.write_mwl_output.writemwloutputdefault method)": [[27, "ELDAmwl.output.write_mwl_output.WriteMWLOutputDefault.write_groups"]], "eldamwl.plugins": [[28, "module-ELDAmwl.plugins"]], "eldamwl.plugins.prepareextsignalsbetter": [[28, "module-ELDAmwl.plugins.PrepareExtSignalsBetter"]], "eldamwl.plugins.savitzkygolayslope": [[28, "module-ELDAmwl.plugins.SavitzkyGolaySlope"]], "prepareextsignalsbetter (class in eldamwl.plugins.prepareextsignalsbetter)": [[28, "ELDAmwl.plugins.PrepareExtSignalsBetter.PrepareExtSignalsBetter"]], "savgolayslope (class in eldamwl.plugins.savitzkygolayslope)": [[28, "ELDAmwl.plugins.SavitzkyGolaySlope.SavGolaySlope"]], "name (eldamwl.plugins.prepareextsignalsbetter.prepareextsignalsbetter attribute)": [[28, "ELDAmwl.plugins.PrepareExtSignalsBetter.PrepareExtSignalsBetter.name"]], "name (eldamwl.plugins.savitzkygolayslope.savgolayslope attribute)": [[28, "ELDAmwl.plugins.SavitzkyGolaySlope.SavGolaySlope.name"]], "run() (eldamwl.plugins.prepareextsignalsbetter.prepareextsignalsbetter method)": [[28, "ELDAmwl.plugins.PrepareExtSignalsBetter.PrepareExtSignalsBetter.run"]], "run() (eldamwl.plugins.savitzkygolayslope.savgolayslope method)": [[28, "ELDAmwl.plugins.SavitzkyGolaySlope.SavGolaySlope.run"]], "datastorage (class in eldamwl.storage.data_storage)": [[29, "ELDAmwl.storage.data_storage.DataStorage"]], "eldamwl.storage": [[29, "module-ELDAmwl.storage"]], "eldamwl.storage.cached_functions": [[29, "module-ELDAmwl.storage.cached_functions"]], "eldamwl.storage.data_storage": [[29, "module-ELDAmwl.storage.data_storage"]], "_get_prod_res_entry() (eldamwl.storage.data_storage.datastorage method)": [[29, "ELDAmwl.storage.data_storage.DataStorage._get_prod_res_entry"]], "basic_product_auto_smooth() (eldamwl.storage.data_storage.datastorage method)": [[29, "ELDAmwl.storage.data_storage.DataStorage.basic_product_auto_smooth"]], "basic_product_common_smooth() (eldamwl.storage.data_storage.datastorage method)": [[29, "ELDAmwl.storage.data_storage.DataStorage.basic_product_common_smooth"]], "basic_product_raw() (eldamwl.storage.data_storage.datastorage method)": [[29, "ELDAmwl.storage.data_storage.DataStorage.basic_product_raw"]], "binres_auto_smooth() (eldamwl.storage.data_storage.datastorage method)": [[29, "ELDAmwl.storage.data_storage.DataStorage.binres_auto_smooth"]], "binres_common_smooth() (eldamwl.storage.data_storage.datastorage method)": [[29, "ELDAmwl.storage.data_storage.DataStorage.binres_common_smooth"]], "cloud_mask (eldamwl.storage.data_storage.datastorage property)": [[29, "ELDAmwl.storage.data_storage.DataStorage.cloud_mask"]], "derived_product_common_smooth() (eldamwl.storage.data_storage.datastorage method)": [[29, "ELDAmwl.storage.data_storage.DataStorage.derived_product_common_smooth"]], "elpp_signal() (eldamwl.storage.data_storage.datastorage method)": [[29, "ELDAmwl.storage.data_storage.DataStorage.elpp_signal"]], "elpp_signals() (eldamwl.storage.data_storage.datastorage method)": [[29, "ELDAmwl.storage.data_storage.DataStorage.elpp_signals"]], "final_product_matrix() (eldamwl.storage.data_storage.datastorage method)": [[29, "ELDAmwl.storage.data_storage.DataStorage.final_product_matrix"]], "get_common_cloud_mask() (eldamwl.storage.data_storage.datastorage method)": [[29, "ELDAmwl.storage.data_storage.DataStorage.get_common_cloud_mask"]], "get_max_binres() (eldamwl.storage.data_storage.datastorage method)": [[29, "ELDAmwl.storage.data_storage.DataStorage.get_max_binres"]], "header (eldamwl.storage.data_storage.datastorage property)": [[29, "ELDAmwl.storage.data_storage.DataStorage.header"]], "name (eldamwl.storage.data_storage.datastorage attribute)": [[29, "ELDAmwl.storage.data_storage.DataStorage.name"]], "prepared_signal() (eldamwl.storage.data_storage.datastorage method)": [[29, "ELDAmwl.storage.data_storage.DataStorage.prepared_signal"]], "prepared_signals() (eldamwl.storage.data_storage.datastorage method)": [[29, "ELDAmwl.storage.data_storage.DataStorage.prepared_signals"]], "product_common_smooth() (eldamwl.storage.data_storage.datastorage method)": [[29, "ELDAmwl.storage.data_storage.DataStorage.product_common_smooth"]], "register_datastorage() (in module eldamwl.storage.data_storage)": [[29, "ELDAmwl.storage.data_storage.register_datastorage"]], "set_basic_product_auto_smooth() (eldamwl.storage.data_storage.datastorage method)": [[29, "ELDAmwl.storage.data_storage.DataStorage.set_basic_product_auto_smooth"]], "set_basic_product_common_smooth() (eldamwl.storage.data_storage.datastorage method)": [[29, "ELDAmwl.storage.data_storage.DataStorage.set_basic_product_common_smooth"]], "set_basic_product_raw() (eldamwl.storage.data_storage.datastorage method)": [[29, "ELDAmwl.storage.data_storage.DataStorage.set_basic_product_raw"]], "set_binres_auto_smooth() (eldamwl.storage.data_storage.datastorage method)": [[29, "ELDAmwl.storage.data_storage.DataStorage.set_binres_auto_smooth"]], "set_binres_common_smooth() (eldamwl.storage.data_storage.datastorage method)": [[29, "ELDAmwl.storage.data_storage.DataStorage.set_binres_common_smooth"]], "set_derived_products() (eldamwl.storage.data_storage.datastorage method)": [[29, "ELDAmwl.storage.data_storage.DataStorage.set_derived_products"]], "set_elpp_signal() (eldamwl.storage.data_storage.datastorage method)": [[29, "ELDAmwl.storage.data_storage.DataStorage.set_elpp_signal"]], "set_final_product_matrix() (eldamwl.storage.data_storage.datastorage method)": [[29, "ELDAmwl.storage.data_storage.DataStorage.set_final_product_matrix"]], "set_lidar_constant() (eldamwl.storage.data_storage.datastorage method)": [[29, "ELDAmwl.storage.data_storage.DataStorage.set_lidar_constant"]], "set_prepared_signal() (eldamwl.storage.data_storage.datastorage method)": [[29, "ELDAmwl.storage.data_storage.DataStorage.set_prepared_signal"]], "sg_coeffs() (in module eldamwl.storage.cached_functions)": [[29, "ELDAmwl.storage.cached_functions.sg_coeffs"]], "sg_used_binres() (in module eldamwl.storage.cached_functions)": [[29, "ELDAmwl.storage.cached_functions.sg_used_binres"]], "smooth_routine_from_db() (in module eldamwl.storage.cached_functions)": [[29, "ELDAmwl.storage.cached_functions.smooth_routine_from_db"]], "eldamwl.tests": [[30, "module-ELDAmwl.tests"]], "eldamwl.tests.config": [[30, "module-ELDAmwl.tests.config"]], "eldamwl.tests.disable_test_elda_mwl_factories": [[30, "module-ELDAmwl.tests.disable_test_elda_mwl_factories"]], "eldamwl.tests.pickle_data": [[30, "module-ELDAmwl.tests.pickle_data"]], "eldamwl.tests.test_factory": [[30, "module-ELDAmwl.tests.test_factory"]], "eldamwl.tests.test_params": [[30, "module-ELDAmwl.tests.test_params"]], "eldamwl.tests.test_registry": [[30, "module-ELDAmwl.tests.test_registry"]], "eldamwl.tests.test_signals": [[30, "module-ELDAmwl.tests.test_signals"]], "eldamwl.tests.test_wrapper": [[30, "module-ELDAmwl.tests.test_wrapper"]], "factory (class in eldamwl.tests.test_factory)": [[30, "ELDAmwl.tests.test_factory.Factory"]], "factory (class in eldamwl.tests.test_registry)": [[30, "ELDAmwl.tests.test_registry.Factory"]], "operationa (class in eldamwl.tests.test_factory)": [[30, "ELDAmwl.tests.test_factory.OperationA"]], "operationa (class in eldamwl.tests.test_registry)": [[30, "ELDAmwl.tests.test_registry.OperationA"]], "operationb (class in eldamwl.tests.test_factory)": [[30, "ELDAmwl.tests.test_factory.OperationB"]], "operationb (class in eldamwl.tests.test_registry)": [[30, "ELDAmwl.tests.test_registry.OperationB"]], "paramsa (class in eldamwl.tests.test_params)": [[30, "ELDAmwl.tests.test_params.ParamsA"]], "test (class in eldamwl.tests.test_signals)": [[30, "ELDAmwl.tests.test_signals.Test"]], "testfactory (class in eldamwl.tests.test_factory)": [[30, "ELDAmwl.tests.test_factory.TestFactory"]], "testwrapper (class in eldamwl.tests.test_wrapper)": [[30, "ELDAmwl.tests.test_wrapper.TestWrapper"]], "aplusb (eldamwl.tests.test_params.paramsa property)": [[30, "ELDAmwl.tests.test_params.ParamsA.aplusb"]], "funcaplusb() (eldamwl.tests.test_params.paramsa method)": [[30, "ELDAmwl.tests.test_params.ParamsA.funcaplusb"]], "get_unpicklable() (in module eldamwl.tests.pickle_data)": [[30, "ELDAmwl.tests.pickle_data.get_unpicklable"]], "getb (eldamwl.tests.test_params.paramsa property)": [[30, "ELDAmwl.tests.test_params.ParamsA.getb"]], "name (eldamwl.tests.test_registry.factory attribute)": [[30, "ELDAmwl.tests.test_registry.Factory.name"]], "pickle_data() (in module eldamwl.tests.pickle_data)": [[30, "ELDAmwl.tests.pickle_data.pickle_data"]], "scipy_func() (in module eldamwl.tests.test_wrapper)": [[30, "ELDAmwl.tests.test_wrapper.scipy_func"]], "test_measurementparams() (in module eldamwl.tests.disable_test_elda_mwl_factories)": [[30, "ELDAmwl.tests.disable_test_elda_mwl_factories.test_MeasurementParams"]], "test_signals_from_nc_file() (in module eldamwl.tests.test_signals)": [[30, "ELDAmwl.tests.test_signals.test_Signals_from_nc_file"]], "test_bad_tupel() (eldamwl.tests.test_wrapper.testwrapper method)": [[30, "ELDAmwl.tests.test_wrapper.TestWrapper.test_bad_tupel"]], "test_factory() (eldamwl.tests.test_factory.testfactory method)": [[30, "ELDAmwl.tests.test_factory.TestFactory.test_factory"]], "test_factory_registration() (in module eldamwl.tests.test_factory)": [[30, "ELDAmwl.tests.test_factory.test_factory_registration"]], "test_good_tupel() (eldamwl.tests.test_wrapper.testwrapper method)": [[30, "ELDAmwl.tests.test_wrapper.TestWrapper.test_good_tupel"]], "test_int() (eldamwl.tests.test_wrapper.testwrapper method)": [[30, "ELDAmwl.tests.test_wrapper.TestWrapper.test_int"]], "test_other_type() (eldamwl.tests.test_wrapper.testwrapper method)": [[30, "ELDAmwl.tests.test_wrapper.TestWrapper.test_other_type"]], "test_params() (in module eldamwl.tests.test_params)": [[30, "ELDAmwl.tests.test_params.test_params"]], "test_registry_register() (in module eldamwl.tests.test_registry)": [[30, "ELDAmwl.tests.test_registry.test_registry_register"]], "test_signals_register() (eldamwl.tests.test_signals.test method)": [[30, "ELDAmwl.tests.test_signals.Test.test_signals_register"]], "un_pickle_data() (in module eldamwl.tests.pickle_data)": [[30, "ELDAmwl.tests.pickle_data.un_pickle_data"]], "write_test_data() (in module eldamwl.tests.pickle_data)": [[30, "ELDAmwl.tests.pickle_data.write_test_data"]], "dbconstructor (class in eldamwl.tests.database.create_test_db)": [[31, "ELDAmwl.tests.database.create_test_db.DBConstructor"]], "eldamwl.tests.database": [[31, "module-ELDAmwl.tests.database"]], "eldamwl.tests.database.create_test_db": [[31, "module-ELDAmwl.tests.database.create_test_db"]], "create_tables() (eldamwl.tests.database.create_test_db.dbconstructor method)": [[31, "ELDAmwl.tests.database.create_test_db.DBConstructor.create_tables"]], "csv_data() (eldamwl.tests.database.create_test_db.dbconstructor method)": [[31, "ELDAmwl.tests.database.create_test_db.DBConstructor.csv_data"]], "fill_table() (eldamwl.tests.database.create_test_db.dbconstructor method)": [[31, "ELDAmwl.tests.database.create_test_db.DBConstructor.fill_table"]], "fill_tables() (eldamwl.tests.database.create_test_db.dbconstructor method)": [[31, "ELDAmwl.tests.database.create_test_db.DBConstructor.fill_tables"]], "refine_data() (eldamwl.tests.database.create_test_db.dbconstructor method)": [[31, "ELDAmwl.tests.database.create_test_db.DBConstructor.refine_data"]], "register_dbconstructor() (in module eldamwl.tests.database.create_test_db)": [[31, "ELDAmwl.tests.database.create_test_db.register_dbconstructor"]], "remove_db() (eldamwl.tests.database.create_test_db.dbconstructor method)": [[31, "ELDAmwl.tests.database.create_test_db.DBConstructor.remove_db"]], "run() (eldamwl.tests.database.create_test_db.dbconstructor method)": [[31, "ELDAmwl.tests.database.create_test_db.DBConstructor.run"]], "eldamwl.tests.factories": [[32, "module-ELDAmwl.tests.factories"]], "eldamwl.tests.factories.test_findbsccalibrwindowasinelda": [[32, "module-ELDAmwl.tests.factories.test_FindBscCalibrWindowAsInELDA"]], "test (class in eldamwl.tests.factories.test_findbsccalibrwindowasinelda)": [[32, "ELDAmwl.tests.factories.test_FindBscCalibrWindowAsInELDA.Test"]], "data_name (eldamwl.tests.factories.test_findbsccalibrwindowasinelda.test attribute)": [[32, "ELDAmwl.tests.factories.test_FindBscCalibrWindowAsInELDA.Test.data_name"]], "setup() (eldamwl.tests.factories.test_findbsccalibrwindowasinelda.test method)": [[32, "ELDAmwl.tests.factories.test_FindBscCalibrWindowAsInELDA.Test.setUp"]], "test_get_bp_calibration_window() (eldamwl.tests.factories.test_findbsccalibrwindowasinelda.test method)": [[32, "ELDAmwl.tests.factories.test_FindBscCalibrWindowAsInELDA.Test.test_get_bp_calibration_window"]], "eldamwl.tests.test_integration": [[33, "module-ELDAmwl.tests.test_integration"]], "eldamwl.tests.test_integration.test_integration": [[33, "module-ELDAmwl.tests.test_integration.test_integration"]], "test (class in eldamwl.tests.test_integration.test_integration)": [[33, "ELDAmwl.tests.test_integration.test_integration.Test"]], "testtestdb (class in eldamwl.tests.test_integration.test_integration)": [[33, "ELDAmwl.tests.test_integration.test_integration.TestTestDB"]], "setup() (eldamwl.tests.test_integration.test_integration.test method)": [[33, "ELDAmwl.tests.test_integration.test_integration.Test.setUp"]], "setup() (eldamwl.tests.test_integration.test_integration.testtestdb method)": [[33, "ELDAmwl.tests.test_integration.test_integration.TestTestDB.setUp"]], "test_20181017oh00() (eldamwl.tests.test_integration.test_integration.test method)": [[33, "ELDAmwl.tests.test_integration.test_integration.Test.test_20181017oh00"]], "test_test_db() (eldamwl.tests.test_integration.test_integration.testtestdb method)": [[33, "ELDAmwl.tests.test_integration.test_integration.TestTestDB.test_test_db"]], "eldamwl.utils": [[34, "module-ELDAmwl.utils"]], "eldamwl.utils.constants": [[34, "module-ELDAmwl.utils.constants"]], "eldamwl.utils.numerical": [[34, "module-ELDAmwl.utils.numerical"]], "eldamwl.utils.path_utils": [[34, "module-ELDAmwl.utils.path_utils"]], "eldamwl.utils.wrapper": [[34, "module-ELDAmwl.utils.wrapper"]], "abs_file_path() (in module eldamwl.utils.path_utils)": [[34, "ELDAmwl.utils.path_utils.abs_file_path"]], "calc_rolling_means_sems() (in module eldamwl.utils.numerical)": [[34, "ELDAmwl.utils.numerical.calc_rolling_means_sems"]], "closest_bin() (in module eldamwl.utils.numerical)": [[34, "ELDAmwl.utils.numerical.closest_bin"]], "dir_not_found_hint() (in module eldamwl.utils.path_utils)": [[34, "ELDAmwl.utils.path_utils.dir_not_found_hint"]], "find_minimum_window() (in module eldamwl.utils.numerical)": [[34, "ELDAmwl.utils.numerical.find_minimum_window"]], "integral_profile() (in module eldamwl.utils.numerical)": [[34, "ELDAmwl.utils.numerical.integral_profile"]], "np_datetime64_to_datetime() (in module eldamwl.utils.numerical)": [[34, "ELDAmwl.utils.numerical.np_datetime64_to_datetime"]], "rolling_mean_sem() (in module eldamwl.utils.numerical)": [[34, "ELDAmwl.utils.numerical.rolling_mean_sem"]], "scipy_reduce_wrapper() (in module eldamwl.utils.wrapper)": [[34, "ELDAmwl.utils.wrapper.scipy_reduce_wrapper"]]}})